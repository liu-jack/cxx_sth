// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Rank.proto

#ifndef PROTOBUF_Rank_2eproto__INCLUDED
#define PROTOBUF_Rank_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommomDef.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Rank_2eproto();
void protobuf_AssignDesc_Rank_2eproto();
void protobuf_ShutdownFile_Rank_2eproto();

class ExploitRankBoxDrop;
class RankRewardStatus;
class C2GS_Exploit_Rank_Open_Box;
class GS2C_Exploit_Rank_Open_Box;
class GS2C_Trick_Rank_Get_Reward;
class GS2C_Occupy_Rank_Get_Reward;
class ExploitRank;
class GS2C_Exploit_Rank_List;
class TrickRank;
class GS2C_Trick_Rank_List;
class OccupyRank;
class GS2C_Occupy_Rank_List;
class ShowData;
class GS2C_CountryOccupyCityNum;
class GS2C_PersonalAddSoldier;
class GS2C_PersonalOccupyCityNum;
class CharacterInfo;
class CharacterMsg;
class SiegeArmyInfo;
class SiegeArmyMsg;
class ShenQiInfo;
class ShenQiMsg;
class MilitaryPowerPack;
class GS2C_MilitaryPowerRankList;
class GS2C_Achieve_Congratulate;
class C2GS_Congratulate_Accept;
class GS2C_ListOfCurrentCanCongratulate;
class GS2C_Congratulate_Accept_Rsp;
class GxDB_CongratulateInfo;
class GxDB_CongratulateRewardLog;
class GxDB_CongratulateBeenCongratualted;
class GS2C_Lottery_Daily_Reward;

// ===================================================================

class ExploitRankBoxDrop : public ::google::protobuf::Message {
 public:
  ExploitRankBoxDrop();
  virtual ~ExploitRankBoxDrop();

  ExploitRankBoxDrop(const ExploitRankBoxDrop& from);

  inline ExploitRankBoxDrop& operator=(const ExploitRankBoxDrop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExploitRankBoxDrop& default_instance();

  void Swap(ExploitRankBoxDrop* other);

  // implements Message ----------------------------------------------

  ExploitRankBoxDrop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExploitRankBoxDrop& from);
  void MergeFrom(const ExploitRankBoxDrop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 cnt = 2;
  inline bool has_cnt() const;
  inline void clear_cnt();
  static const int kCntFieldNumber = 2;
  inline ::google::protobuf::uint32 cnt() const;
  inline void set_cnt(::google::protobuf::uint32 value);

  // optional uint32 strike = 3;
  inline bool has_strike() const;
  inline void clear_strike();
  static const int kStrikeFieldNumber = 3;
  inline ::google::protobuf::uint32 strike() const;
  inline void set_strike(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.ExploitRankBoxDrop)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cnt();
  inline void clear_has_cnt();
  inline void set_has_strike();
  inline void clear_has_strike();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 cnt_;
  ::google::protobuf::uint32 strike_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static ExploitRankBoxDrop* default_instance_;
};
// -------------------------------------------------------------------

class RankRewardStatus : public ::google::protobuf::Message {
 public:
  RankRewardStatus();
  virtual ~RankRewardStatus();

  RankRewardStatus(const RankRewardStatus& from);

  inline RankRewardStatus& operator=(const RankRewardStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankRewardStatus& default_instance();

  void Swap(RankRewardStatus* other);

  // implements Message ----------------------------------------------

  RankRewardStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankRewardStatus& from);
  void MergeFrom(const RankRewardStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 step = 1;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 1;
  inline ::google::protobuf::uint32 step() const;
  inline void set_step(::google::protobuf::uint32 value);

  // required uint32 reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline ::google::protobuf::uint32 reward() const;
  inline void set_reward(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.RankRewardStatus)
 private:
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 step_;
  ::google::protobuf::uint32 reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static RankRewardStatus* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Exploit_Rank_Open_Box : public ::google::protobuf::Message {
 public:
  C2GS_Exploit_Rank_Open_Box();
  virtual ~C2GS_Exploit_Rank_Open_Box();

  C2GS_Exploit_Rank_Open_Box(const C2GS_Exploit_Rank_Open_Box& from);

  inline C2GS_Exploit_Rank_Open_Box& operator=(const C2GS_Exploit_Rank_Open_Box& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Exploit_Rank_Open_Box& default_instance();

  void Swap(C2GS_Exploit_Rank_Open_Box* other);

  // implements Message ----------------------------------------------

  C2GS_Exploit_Rank_Open_Box* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Exploit_Rank_Open_Box& from);
  void MergeFrom(const C2GS_Exploit_Rank_Open_Box& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional bool is_all = 2;
  inline bool has_is_all() const;
  inline void clear_is_all();
  static const int kIsAllFieldNumber = 2;
  inline bool is_all() const;
  inline void set_is_all(bool value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Exploit_Rank_Open_Box)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_is_all();
  inline void clear_has_is_all();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  bool is_all_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Exploit_Rank_Open_Box* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Exploit_Rank_Open_Box : public ::google::protobuf::Message {
 public:
  GS2C_Exploit_Rank_Open_Box();
  virtual ~GS2C_Exploit_Rank_Open_Box();

  GS2C_Exploit_Rank_Open_Box(const GS2C_Exploit_Rank_Open_Box& from);

  inline GS2C_Exploit_Rank_Open_Box& operator=(const GS2C_Exploit_Rank_Open_Box& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Exploit_Rank_Open_Box& default_instance();

  void Swap(GS2C_Exploit_Rank_Open_Box* other);

  // implements Message ----------------------------------------------

  GS2C_Exploit_Rank_Open_Box* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Exploit_Rank_Open_Box& from);
  void MergeFrom(const GS2C_Exploit_Rank_Open_Box& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.ExploitRankBoxDrop drop = 1;
  inline int drop_size() const;
  inline void clear_drop();
  static const int kDropFieldNumber = 1;
  inline const ::pb::ExploitRankBoxDrop& drop(int index) const;
  inline ::pb::ExploitRankBoxDrop* mutable_drop(int index);
  inline ::pb::ExploitRankBoxDrop* add_drop();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::ExploitRankBoxDrop >&
      drop() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::ExploitRankBoxDrop >*
      mutable_drop();

  // optional uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Exploit_Rank_Open_Box)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::ExploitRankBoxDrop > drop_;
  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Exploit_Rank_Open_Box* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Trick_Rank_Get_Reward : public ::google::protobuf::Message {
 public:
  GS2C_Trick_Rank_Get_Reward();
  virtual ~GS2C_Trick_Rank_Get_Reward();

  GS2C_Trick_Rank_Get_Reward(const GS2C_Trick_Rank_Get_Reward& from);

  inline GS2C_Trick_Rank_Get_Reward& operator=(const GS2C_Trick_Rank_Get_Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Trick_Rank_Get_Reward& default_instance();

  void Swap(GS2C_Trick_Rank_Get_Reward* other);

  // implements Message ----------------------------------------------

  GS2C_Trick_Rank_Get_Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Trick_Rank_Get_Reward& from);
  void MergeFrom(const GS2C_Trick_Rank_Get_Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.ExploitRankBoxDrop drop = 1;
  inline bool has_drop() const;
  inline void clear_drop();
  static const int kDropFieldNumber = 1;
  inline const ::pb::ExploitRankBoxDrop& drop() const;
  inline ::pb::ExploitRankBoxDrop* mutable_drop();
  inline ::pb::ExploitRankBoxDrop* release_drop();
  inline void set_allocated_drop(::pb::ExploitRankBoxDrop* drop);

  // repeated .pb.RankRewardStatus reward = 2;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::pb::RankRewardStatus& reward(int index) const;
  inline ::pb::RankRewardStatus* mutable_reward(int index);
  inline ::pb::RankRewardStatus* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Trick_Rank_Get_Reward)
 private:
  inline void set_has_drop();
  inline void clear_has_drop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::ExploitRankBoxDrop* drop_;
  ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus > reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Trick_Rank_Get_Reward* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Occupy_Rank_Get_Reward : public ::google::protobuf::Message {
 public:
  GS2C_Occupy_Rank_Get_Reward();
  virtual ~GS2C_Occupy_Rank_Get_Reward();

  GS2C_Occupy_Rank_Get_Reward(const GS2C_Occupy_Rank_Get_Reward& from);

  inline GS2C_Occupy_Rank_Get_Reward& operator=(const GS2C_Occupy_Rank_Get_Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Occupy_Rank_Get_Reward& default_instance();

  void Swap(GS2C_Occupy_Rank_Get_Reward* other);

  // implements Message ----------------------------------------------

  GS2C_Occupy_Rank_Get_Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Occupy_Rank_Get_Reward& from);
  void MergeFrom(const GS2C_Occupy_Rank_Get_Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.ExploitRankBoxDrop drop = 1;
  inline bool has_drop() const;
  inline void clear_drop();
  static const int kDropFieldNumber = 1;
  inline const ::pb::ExploitRankBoxDrop& drop() const;
  inline ::pb::ExploitRankBoxDrop* mutable_drop();
  inline ::pb::ExploitRankBoxDrop* release_drop();
  inline void set_allocated_drop(::pb::ExploitRankBoxDrop* drop);

  // repeated .pb.RankRewardStatus reward = 2;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::pb::RankRewardStatus& reward(int index) const;
  inline ::pb::RankRewardStatus* mutable_reward(int index);
  inline ::pb::RankRewardStatus* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Occupy_Rank_Get_Reward)
 private:
  inline void set_has_drop();
  inline void clear_has_drop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::ExploitRankBoxDrop* drop_;
  ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus > reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Occupy_Rank_Get_Reward* default_instance_;
};
// -------------------------------------------------------------------

class ExploitRank : public ::google::protobuf::Message {
 public:
  ExploitRank();
  virtual ~ExploitRank();

  ExploitRank(const ExploitRank& from);

  inline ExploitRank& operator=(const ExploitRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExploitRank& default_instance();

  void Swap(ExploitRank* other);

  // implements Message ----------------------------------------------

  ExploitRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExploitRank& from);
  void MergeFrom(const ExploitRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IsNew = 1;
  inline bool has_isnew() const;
  inline void clear_isnew();
  static const int kIsNewFieldNumber = 1;
  inline bool isnew() const;
  inline void set_isnew(bool value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 lv = 4;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 4;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // required uint32 vip_level = 6;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // required uint32 exploit = 5;
  inline bool has_exploit() const;
  inline void clear_exploit();
  static const int kExploitFieldNumber = 5;
  inline ::google::protobuf::uint32 exploit() const;
  inline void set_exploit(::google::protobuf::uint32 value);

  // optional uint32 headIconId = 7;
  inline bool has_headiconid() const;
  inline void clear_headiconid();
  static const int kHeadIconIdFieldNumber = 7;
  inline ::google::protobuf::uint32 headiconid() const;
  inline void set_headiconid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.ExploitRank)
 private:
  inline void set_has_isnew();
  inline void clear_has_isnew();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_exploit();
  inline void clear_has_exploit();
  inline void set_has_headiconid();
  inline void clear_has_headiconid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool isnew_;
  ::google::protobuf::uint32 id_;
  ::std::string* name_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 vip_level_;
  ::google::protobuf::uint32 exploit_;
  ::google::protobuf::uint32 headiconid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static ExploitRank* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Exploit_Rank_List : public ::google::protobuf::Message {
 public:
  GS2C_Exploit_Rank_List();
  virtual ~GS2C_Exploit_Rank_List();

  GS2C_Exploit_Rank_List(const GS2C_Exploit_Rank_List& from);

  inline GS2C_Exploit_Rank_List& operator=(const GS2C_Exploit_Rank_List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Exploit_Rank_List& default_instance();

  void Swap(GS2C_Exploit_Rank_List* other);

  // implements Message ----------------------------------------------

  GS2C_Exploit_Rank_List* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Exploit_Rank_List& from);
  void MergeFrom(const GS2C_Exploit_Rank_List& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.ExploitRank list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::pb::ExploitRank& list(int index) const;
  inline ::pb::ExploitRank* mutable_list(int index);
  inline ::pb::ExploitRank* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::ExploitRank >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::ExploitRank >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Exploit_Rank_List)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::ExploitRank > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Exploit_Rank_List* default_instance_;
};
// -------------------------------------------------------------------

class TrickRank : public ::google::protobuf::Message {
 public:
  TrickRank();
  virtual ~TrickRank();

  TrickRank(const TrickRank& from);

  inline TrickRank& operator=(const TrickRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrickRank& default_instance();

  void Swap(TrickRank* other);

  // implements Message ----------------------------------------------

  TrickRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrickRank& from);
  void MergeFrom(const TrickRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IsNew = 1;
  inline bool has_isnew() const;
  inline void clear_isnew();
  static const int kIsNewFieldNumber = 1;
  inline bool isnew() const;
  inline void set_isnew(bool value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 lv = 4;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 4;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // required uint32 trick = 5;
  inline bool has_trick() const;
  inline void clear_trick();
  static const int kTrickFieldNumber = 5;
  inline ::google::protobuf::uint32 trick() const;
  inline void set_trick(::google::protobuf::uint32 value);

  // required uint32 vip_level = 6;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // optional uint32 headIconId = 7;
  inline bool has_headiconid() const;
  inline void clear_headiconid();
  static const int kHeadIconIdFieldNumber = 7;
  inline ::google::protobuf::uint32 headiconid() const;
  inline void set_headiconid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TrickRank)
 private:
  inline void set_has_isnew();
  inline void clear_has_isnew();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_trick();
  inline void clear_has_trick();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_headiconid();
  inline void clear_has_headiconid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool isnew_;
  ::google::protobuf::uint32 id_;
  ::std::string* name_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 trick_;
  ::google::protobuf::uint32 vip_level_;
  ::google::protobuf::uint32 headiconid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static TrickRank* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Trick_Rank_List : public ::google::protobuf::Message {
 public:
  GS2C_Trick_Rank_List();
  virtual ~GS2C_Trick_Rank_List();

  GS2C_Trick_Rank_List(const GS2C_Trick_Rank_List& from);

  inline GS2C_Trick_Rank_List& operator=(const GS2C_Trick_Rank_List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Trick_Rank_List& default_instance();

  void Swap(GS2C_Trick_Rank_List* other);

  // implements Message ----------------------------------------------

  GS2C_Trick_Rank_List* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Trick_Rank_List& from);
  void MergeFrom(const GS2C_Trick_Rank_List& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TrickRank list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::pb::TrickRank& list(int index) const;
  inline ::pb::TrickRank* mutable_list(int index);
  inline ::pb::TrickRank* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TrickRank >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TrickRank >*
      mutable_list();

  // repeated .pb.RankRewardStatus reward = 2;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::pb::RankRewardStatus& reward(int index) const;
  inline ::pb::RankRewardStatus* mutable_reward(int index);
  inline ::pb::RankRewardStatus* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Trick_Rank_List)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::TrickRank > list_;
  ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus > reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Trick_Rank_List* default_instance_;
};
// -------------------------------------------------------------------

class OccupyRank : public ::google::protobuf::Message {
 public:
  OccupyRank();
  virtual ~OccupyRank();

  OccupyRank(const OccupyRank& from);

  inline OccupyRank& operator=(const OccupyRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OccupyRank& default_instance();

  void Swap(OccupyRank* other);

  // implements Message ----------------------------------------------

  OccupyRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OccupyRank& from);
  void MergeFrom(const OccupyRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IsNew = 1;
  inline bool has_isnew() const;
  inline void clear_isnew();
  static const int kIsNewFieldNumber = 1;
  inline bool isnew() const;
  inline void set_isnew(bool value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 lv = 4;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 4;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // required uint32 highest = 5;
  inline bool has_highest() const;
  inline void clear_highest();
  static const int kHighestFieldNumber = 5;
  inline ::google::protobuf::uint32 highest() const;
  inline void set_highest(::google::protobuf::uint32 value);

  // required uint32 occupy = 6;
  inline bool has_occupy() const;
  inline void clear_occupy();
  static const int kOccupyFieldNumber = 6;
  inline ::google::protobuf::uint32 occupy() const;
  inline void set_occupy(::google::protobuf::uint32 value);

  // required uint32 vip_level = 7;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // optional uint32 headIconId = 8;
  inline bool has_headiconid() const;
  inline void clear_headiconid();
  static const int kHeadIconIdFieldNumber = 8;
  inline ::google::protobuf::uint32 headiconid() const;
  inline void set_headiconid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.OccupyRank)
 private:
  inline void set_has_isnew();
  inline void clear_has_isnew();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_highest();
  inline void clear_has_highest();
  inline void set_has_occupy();
  inline void clear_has_occupy();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_headiconid();
  inline void clear_has_headiconid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool isnew_;
  ::google::protobuf::uint32 id_;
  ::std::string* name_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 highest_;
  ::google::protobuf::uint32 occupy_;
  ::google::protobuf::uint32 vip_level_;
  ::google::protobuf::uint32 headiconid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static OccupyRank* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Occupy_Rank_List : public ::google::protobuf::Message {
 public:
  GS2C_Occupy_Rank_List();
  virtual ~GS2C_Occupy_Rank_List();

  GS2C_Occupy_Rank_List(const GS2C_Occupy_Rank_List& from);

  inline GS2C_Occupy_Rank_List& operator=(const GS2C_Occupy_Rank_List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Occupy_Rank_List& default_instance();

  void Swap(GS2C_Occupy_Rank_List* other);

  // implements Message ----------------------------------------------

  GS2C_Occupy_Rank_List* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Occupy_Rank_List& from);
  void MergeFrom(const GS2C_Occupy_Rank_List& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.OccupyRank list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::pb::OccupyRank& list(int index) const;
  inline ::pb::OccupyRank* mutable_list(int index);
  inline ::pb::OccupyRank* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::OccupyRank >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::OccupyRank >*
      mutable_list();

  // repeated .pb.RankRewardStatus reward = 2;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::pb::RankRewardStatus& reward(int index) const;
  inline ::pb::RankRewardStatus* mutable_reward(int index);
  inline ::pb::RankRewardStatus* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Occupy_Rank_List)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::OccupyRank > list_;
  ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus > reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Occupy_Rank_List* default_instance_;
};
// -------------------------------------------------------------------

class ShowData : public ::google::protobuf::Message {
 public:
  ShowData();
  virtual ~ShowData();

  ShowData(const ShowData& from);

  inline ShowData& operator=(const ShowData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowData& default_instance();

  void Swap(ShowData* other);

  // implements Message ----------------------------------------------

  ShowData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShowData& from);
  void MergeFrom(const ShowData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // optional uint32 country_id = 3;
  inline bool has_country_id() const;
  inline void clear_country_id();
  static const int kCountryIdFieldNumber = 3;
  inline ::google::protobuf::uint32 country_id() const;
  inline void set_country_id(::google::protobuf::uint32 value);

  // optional uint32 value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional uint32 vip_lv = 5;
  inline bool has_vip_lv() const;
  inline void clear_vip_lv();
  static const int kVipLvFieldNumber = 5;
  inline ::google::protobuf::uint32 vip_lv() const;
  inline void set_vip_lv(::google::protobuf::uint32 value);

  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 headIconId = 7;
  inline bool has_headiconid() const;
  inline void clear_headiconid();
  static const int kHeadIconIdFieldNumber = 7;
  inline ::google::protobuf::uint32 headiconid() const;
  inline void set_headiconid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.ShowData)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_country_id();
  inline void clear_has_country_id();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_vip_lv();
  inline void clear_has_vip_lv();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_headiconid();
  inline void clear_has_headiconid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 country_id_;
  ::google::protobuf::uint32 value_;
  ::std::string* name_;
  ::google::protobuf::uint32 vip_lv_;
  ::google::protobuf::uint32 headiconid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static ShowData* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_CountryOccupyCityNum : public ::google::protobuf::Message {
 public:
  GS2C_CountryOccupyCityNum();
  virtual ~GS2C_CountryOccupyCityNum();

  GS2C_CountryOccupyCityNum(const GS2C_CountryOccupyCityNum& from);

  inline GS2C_CountryOccupyCityNum& operator=(const GS2C_CountryOccupyCityNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_CountryOccupyCityNum& default_instance();

  void Swap(GS2C_CountryOccupyCityNum* other);

  // implements Message ----------------------------------------------

  GS2C_CountryOccupyCityNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_CountryOccupyCityNum& from);
  void MergeFrom(const GS2C_CountryOccupyCityNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nr_worm = 1;
  inline bool has_nr_worm() const;
  inline void clear_nr_worm();
  static const int kNrWormFieldNumber = 1;
  inline ::google::protobuf::uint32 nr_worm() const;
  inline void set_nr_worm(::google::protobuf::uint32 value);

  // required uint32 nr_human = 2;
  inline bool has_nr_human() const;
  inline void clear_nr_human();
  static const int kNrHumanFieldNumber = 2;
  inline ::google::protobuf::uint32 nr_human() const;
  inline void set_nr_human(::google::protobuf::uint32 value);

  // required uint32 nr_god = 3;
  inline bool has_nr_god() const;
  inline void clear_nr_god();
  static const int kNrGodFieldNumber = 3;
  inline ::google::protobuf::uint32 nr_god() const;
  inline void set_nr_god(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_CountryOccupyCityNum)
 private:
  inline void set_has_nr_worm();
  inline void clear_has_nr_worm();
  inline void set_has_nr_human();
  inline void clear_has_nr_human();
  inline void set_has_nr_god();
  inline void clear_has_nr_god();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nr_worm_;
  ::google::protobuf::uint32 nr_human_;
  ::google::protobuf::uint32 nr_god_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GS2C_CountryOccupyCityNum* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_PersonalAddSoldier : public ::google::protobuf::Message {
 public:
  GS2C_PersonalAddSoldier();
  virtual ~GS2C_PersonalAddSoldier();

  GS2C_PersonalAddSoldier(const GS2C_PersonalAddSoldier& from);

  inline GS2C_PersonalAddSoldier& operator=(const GS2C_PersonalAddSoldier& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_PersonalAddSoldier& default_instance();

  void Swap(GS2C_PersonalAddSoldier* other);

  // implements Message ----------------------------------------------

  GS2C_PersonalAddSoldier* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_PersonalAddSoldier& from);
  void MergeFrom(const GS2C_PersonalAddSoldier& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.ShowData rank_of_add_soldier = 1;
  inline int rank_of_add_soldier_size() const;
  inline void clear_rank_of_add_soldier();
  static const int kRankOfAddSoldierFieldNumber = 1;
  inline const ::pb::ShowData& rank_of_add_soldier(int index) const;
  inline ::pb::ShowData* mutable_rank_of_add_soldier(int index);
  inline ::pb::ShowData* add_rank_of_add_soldier();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::ShowData >&
      rank_of_add_soldier() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::ShowData >*
      mutable_rank_of_add_soldier();

  // optional .pb.ShowData self_info = 2;
  inline bool has_self_info() const;
  inline void clear_self_info();
  static const int kSelfInfoFieldNumber = 2;
  inline const ::pb::ShowData& self_info() const;
  inline ::pb::ShowData* mutable_self_info();
  inline ::pb::ShowData* release_self_info();
  inline void set_allocated_self_info(::pb::ShowData* self_info);

  // @@protoc_insertion_point(class_scope:pb.GS2C_PersonalAddSoldier)
 private:
  inline void set_has_self_info();
  inline void clear_has_self_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::ShowData > rank_of_add_soldier_;
  ::pb::ShowData* self_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GS2C_PersonalAddSoldier* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_PersonalOccupyCityNum : public ::google::protobuf::Message {
 public:
  GS2C_PersonalOccupyCityNum();
  virtual ~GS2C_PersonalOccupyCityNum();

  GS2C_PersonalOccupyCityNum(const GS2C_PersonalOccupyCityNum& from);

  inline GS2C_PersonalOccupyCityNum& operator=(const GS2C_PersonalOccupyCityNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_PersonalOccupyCityNum& default_instance();

  void Swap(GS2C_PersonalOccupyCityNum* other);

  // implements Message ----------------------------------------------

  GS2C_PersonalOccupyCityNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_PersonalOccupyCityNum& from);
  void MergeFrom(const GS2C_PersonalOccupyCityNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.ShowData rank_of_take_city = 1;
  inline int rank_of_take_city_size() const;
  inline void clear_rank_of_take_city();
  static const int kRankOfTakeCityFieldNumber = 1;
  inline const ::pb::ShowData& rank_of_take_city(int index) const;
  inline ::pb::ShowData* mutable_rank_of_take_city(int index);
  inline ::pb::ShowData* add_rank_of_take_city();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::ShowData >&
      rank_of_take_city() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::ShowData >*
      mutable_rank_of_take_city();

  // optional .pb.ShowData self_info = 2;
  inline bool has_self_info() const;
  inline void clear_self_info();
  static const int kSelfInfoFieldNumber = 2;
  inline const ::pb::ShowData& self_info() const;
  inline ::pb::ShowData* mutable_self_info();
  inline ::pb::ShowData* release_self_info();
  inline void set_allocated_self_info(::pb::ShowData* self_info);

  // @@protoc_insertion_point(class_scope:pb.GS2C_PersonalOccupyCityNum)
 private:
  inline void set_has_self_info();
  inline void clear_has_self_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::ShowData > rank_of_take_city_;
  ::pb::ShowData* self_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GS2C_PersonalOccupyCityNum* default_instance_;
};
// -------------------------------------------------------------------

class CharacterInfo : public ::google::protobuf::Message {
 public:
  CharacterInfo();
  virtual ~CharacterInfo();

  CharacterInfo(const CharacterInfo& from);

  inline CharacterInfo& operator=(const CharacterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterInfo& default_instance();

  void Swap(CharacterInfo* other);

  // implements Message ----------------------------------------------

  CharacterInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterInfo& from);
  void MergeFrom(const CharacterInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 character_lv = 1;
  inline bool has_character_lv() const;
  inline void clear_character_lv();
  static const int kCharacterLvFieldNumber = 1;
  inline ::google::protobuf::uint32 character_lv() const;
  inline void set_character_lv(::google::protobuf::uint32 value);

  // optional uint32 char_proto_id = 2;
  inline bool has_char_proto_id() const;
  inline void clear_char_proto_id();
  static const int kCharProtoIdFieldNumber = 2;
  inline ::google::protobuf::uint32 char_proto_id() const;
  inline void set_char_proto_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.CharacterInfo)
 private:
  inline void set_has_character_lv();
  inline void clear_has_character_lv();
  inline void set_has_char_proto_id();
  inline void clear_has_char_proto_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 character_lv_;
  ::google::protobuf::uint32 char_proto_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static CharacterInfo* default_instance_;
};
// -------------------------------------------------------------------

class CharacterMsg : public ::google::protobuf::Message {
 public:
  CharacterMsg();
  virtual ~CharacterMsg();

  CharacterMsg(const CharacterMsg& from);

  inline CharacterMsg& operator=(const CharacterMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterMsg& default_instance();

  void Swap(CharacterMsg* other);

  // implements Message ----------------------------------------------

  CharacterMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterMsg& from);
  void MergeFrom(const CharacterMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.CharacterInfo character_info = 1;
  inline int character_info_size() const;
  inline void clear_character_info();
  static const int kCharacterInfoFieldNumber = 1;
  inline const ::pb::CharacterInfo& character_info(int index) const;
  inline ::pb::CharacterInfo* mutable_character_info(int index);
  inline ::pb::CharacterInfo* add_character_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::CharacterInfo >&
      character_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::CharacterInfo >*
      mutable_character_info();

  // @@protoc_insertion_point(class_scope:pb.CharacterMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::CharacterInfo > character_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static CharacterMsg* default_instance_;
};
// -------------------------------------------------------------------

class SiegeArmyInfo : public ::google::protobuf::Message {
 public:
  SiegeArmyInfo();
  virtual ~SiegeArmyInfo();

  SiegeArmyInfo(const SiegeArmyInfo& from);

  inline SiegeArmyInfo& operator=(const SiegeArmyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SiegeArmyInfo& default_instance();

  void Swap(SiegeArmyInfo* other);

  // implements Message ----------------------------------------------

  SiegeArmyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SiegeArmyInfo& from);
  void MergeFrom(const SiegeArmyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 siege_lv = 1;
  inline bool has_siege_lv() const;
  inline void clear_siege_lv();
  static const int kSiegeLvFieldNumber = 1;
  inline ::google::protobuf::uint32 siege_lv() const;
  inline void set_siege_lv(::google::protobuf::uint32 value);

  // optional uint32 siege_char_id = 2;
  inline bool has_siege_char_id() const;
  inline void clear_siege_char_id();
  static const int kSiegeCharIdFieldNumber = 2;
  inline ::google::protobuf::uint32 siege_char_id() const;
  inline void set_siege_char_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.SiegeArmyInfo)
 private:
  inline void set_has_siege_lv();
  inline void clear_has_siege_lv();
  inline void set_has_siege_char_id();
  inline void clear_has_siege_char_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 siege_lv_;
  ::google::protobuf::uint32 siege_char_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static SiegeArmyInfo* default_instance_;
};
// -------------------------------------------------------------------

class SiegeArmyMsg : public ::google::protobuf::Message {
 public:
  SiegeArmyMsg();
  virtual ~SiegeArmyMsg();

  SiegeArmyMsg(const SiegeArmyMsg& from);

  inline SiegeArmyMsg& operator=(const SiegeArmyMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SiegeArmyMsg& default_instance();

  void Swap(SiegeArmyMsg* other);

  // implements Message ----------------------------------------------

  SiegeArmyMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SiegeArmyMsg& from);
  void MergeFrom(const SiegeArmyMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.SiegeArmyInfo siege_army_info = 1;
  inline int siege_army_info_size() const;
  inline void clear_siege_army_info();
  static const int kSiegeArmyInfoFieldNumber = 1;
  inline const ::pb::SiegeArmyInfo& siege_army_info(int index) const;
  inline ::pb::SiegeArmyInfo* mutable_siege_army_info(int index);
  inline ::pb::SiegeArmyInfo* add_siege_army_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::SiegeArmyInfo >&
      siege_army_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::SiegeArmyInfo >*
      mutable_siege_army_info();

  // @@protoc_insertion_point(class_scope:pb.SiegeArmyMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::SiegeArmyInfo > siege_army_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static SiegeArmyMsg* default_instance_;
};
// -------------------------------------------------------------------

class ShenQiInfo : public ::google::protobuf::Message {
 public:
  ShenQiInfo();
  virtual ~ShenQiInfo();

  ShenQiInfo(const ShenQiInfo& from);

  inline ShenQiInfo& operator=(const ShenQiInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShenQiInfo& default_instance();

  void Swap(ShenQiInfo* other);

  // implements Message ----------------------------------------------

  ShenQiInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShenQiInfo& from);
  void MergeFrom(const ShenQiInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 shenqi_lv = 1;
  inline bool has_shenqi_lv() const;
  inline void clear_shenqi_lv();
  static const int kShenqiLvFieldNumber = 1;
  inline ::google::protobuf::uint32 shenqi_lv() const;
  inline void set_shenqi_lv(::google::protobuf::uint32 value);

  // optional uint32 shenqi_id = 2;
  inline bool has_shenqi_id() const;
  inline void clear_shenqi_id();
  static const int kShenqiIdFieldNumber = 2;
  inline ::google::protobuf::uint32 shenqi_id() const;
  inline void set_shenqi_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.ShenQiInfo)
 private:
  inline void set_has_shenqi_lv();
  inline void clear_has_shenqi_lv();
  inline void set_has_shenqi_id();
  inline void clear_has_shenqi_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 shenqi_lv_;
  ::google::protobuf::uint32 shenqi_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static ShenQiInfo* default_instance_;
};
// -------------------------------------------------------------------

class ShenQiMsg : public ::google::protobuf::Message {
 public:
  ShenQiMsg();
  virtual ~ShenQiMsg();

  ShenQiMsg(const ShenQiMsg& from);

  inline ShenQiMsg& operator=(const ShenQiMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShenQiMsg& default_instance();

  void Swap(ShenQiMsg* other);

  // implements Message ----------------------------------------------

  ShenQiMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShenQiMsg& from);
  void MergeFrom(const ShenQiMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.ShenQiInfo shen_qi_info = 1;
  inline int shen_qi_info_size() const;
  inline void clear_shen_qi_info();
  static const int kShenQiInfoFieldNumber = 1;
  inline const ::pb::ShenQiInfo& shen_qi_info(int index) const;
  inline ::pb::ShenQiInfo* mutable_shen_qi_info(int index);
  inline ::pb::ShenQiInfo* add_shen_qi_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::ShenQiInfo >&
      shen_qi_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::ShenQiInfo >*
      mutable_shen_qi_info();

  // @@protoc_insertion_point(class_scope:pb.ShenQiMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::ShenQiInfo > shen_qi_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static ShenQiMsg* default_instance_;
};
// -------------------------------------------------------------------

class MilitaryPowerPack : public ::google::protobuf::Message {
 public:
  MilitaryPowerPack();
  virtual ~MilitaryPowerPack();

  MilitaryPowerPack(const MilitaryPowerPack& from);

  inline MilitaryPowerPack& operator=(const MilitaryPowerPack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MilitaryPowerPack& default_instance();

  void Swap(MilitaryPowerPack* other);

  // implements Message ----------------------------------------------

  MilitaryPowerPack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MilitaryPowerPack& from);
  void MergeFrom(const MilitaryPowerPack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.ShowData military_power_rank = 1;
  inline bool has_military_power_rank() const;
  inline void clear_military_power_rank();
  static const int kMilitaryPowerRankFieldNumber = 1;
  inline const ::pb::ShowData& military_power_rank() const;
  inline ::pb::ShowData* mutable_military_power_rank();
  inline ::pb::ShowData* release_military_power_rank();
  inline void set_allocated_military_power_rank(::pb::ShowData* military_power_rank);

  // optional .pb.CharacterMsg char_msg = 2;
  inline bool has_char_msg() const;
  inline void clear_char_msg();
  static const int kCharMsgFieldNumber = 2;
  inline const ::pb::CharacterMsg& char_msg() const;
  inline ::pb::CharacterMsg* mutable_char_msg();
  inline ::pb::CharacterMsg* release_char_msg();
  inline void set_allocated_char_msg(::pb::CharacterMsg* char_msg);

  // optional .pb.SiegeArmyMsg siege_army_info = 3;
  inline bool has_siege_army_info() const;
  inline void clear_siege_army_info();
  static const int kSiegeArmyInfoFieldNumber = 3;
  inline const ::pb::SiegeArmyMsg& siege_army_info() const;
  inline ::pb::SiegeArmyMsg* mutable_siege_army_info();
  inline ::pb::SiegeArmyMsg* release_siege_army_info();
  inline void set_allocated_siege_army_info(::pb::SiegeArmyMsg* siege_army_info);

  // optional .pb.ShenQiMsg shenqi_msg = 4;
  inline bool has_shenqi_msg() const;
  inline void clear_shenqi_msg();
  static const int kShenqiMsgFieldNumber = 4;
  inline const ::pb::ShenQiMsg& shenqi_msg() const;
  inline ::pb::ShenQiMsg* mutable_shenqi_msg();
  inline ::pb::ShenQiMsg* release_shenqi_msg();
  inline void set_allocated_shenqi_msg(::pb::ShenQiMsg* shenqi_msg);

  // @@protoc_insertion_point(class_scope:pb.MilitaryPowerPack)
 private:
  inline void set_has_military_power_rank();
  inline void clear_has_military_power_rank();
  inline void set_has_char_msg();
  inline void clear_has_char_msg();
  inline void set_has_siege_army_info();
  inline void clear_has_siege_army_info();
  inline void set_has_shenqi_msg();
  inline void clear_has_shenqi_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::ShowData* military_power_rank_;
  ::pb::CharacterMsg* char_msg_;
  ::pb::SiegeArmyMsg* siege_army_info_;
  ::pb::ShenQiMsg* shenqi_msg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static MilitaryPowerPack* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_MilitaryPowerRankList : public ::google::protobuf::Message {
 public:
  GS2C_MilitaryPowerRankList();
  virtual ~GS2C_MilitaryPowerRankList();

  GS2C_MilitaryPowerRankList(const GS2C_MilitaryPowerRankList& from);

  inline GS2C_MilitaryPowerRankList& operator=(const GS2C_MilitaryPowerRankList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_MilitaryPowerRankList& default_instance();

  void Swap(GS2C_MilitaryPowerRankList* other);

  // implements Message ----------------------------------------------

  GS2C_MilitaryPowerRankList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_MilitaryPowerRankList& from);
  void MergeFrom(const GS2C_MilitaryPowerRankList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.MilitaryPowerPack military_power_list = 1;
  inline int military_power_list_size() const;
  inline void clear_military_power_list();
  static const int kMilitaryPowerListFieldNumber = 1;
  inline const ::pb::MilitaryPowerPack& military_power_list(int index) const;
  inline ::pb::MilitaryPowerPack* mutable_military_power_list(int index);
  inline ::pb::MilitaryPowerPack* add_military_power_list();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::MilitaryPowerPack >&
      military_power_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::MilitaryPowerPack >*
      mutable_military_power_list();

  // optional .pb.MilitaryPowerPack self_info = 2;
  inline bool has_self_info() const;
  inline void clear_self_info();
  static const int kSelfInfoFieldNumber = 2;
  inline const ::pb::MilitaryPowerPack& self_info() const;
  inline ::pb::MilitaryPowerPack* mutable_self_info();
  inline ::pb::MilitaryPowerPack* release_self_info();
  inline void set_allocated_self_info(::pb::MilitaryPowerPack* self_info);

  // @@protoc_insertion_point(class_scope:pb.GS2C_MilitaryPowerRankList)
 private:
  inline void set_has_self_info();
  inline void clear_has_self_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::MilitaryPowerPack > military_power_list_;
  ::pb::MilitaryPowerPack* self_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GS2C_MilitaryPowerRankList* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Achieve_Congratulate : public ::google::protobuf::Message {
 public:
  GS2C_Achieve_Congratulate();
  virtual ~GS2C_Achieve_Congratulate();

  GS2C_Achieve_Congratulate(const GS2C_Achieve_Congratulate& from);

  inline GS2C_Achieve_Congratulate& operator=(const GS2C_Achieve_Congratulate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Achieve_Congratulate& default_instance();

  void Swap(GS2C_Achieve_Congratulate* other);

  // implements Message ----------------------------------------------

  GS2C_Achieve_Congratulate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Achieve_Congratulate& from);
  void MergeFrom(const GS2C_Achieve_Congratulate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.C2GS_Congratulate_Accept info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::C2GS_Congratulate_Accept& info() const;
  inline ::pb::C2GS_Congratulate_Accept* mutable_info();
  inline ::pb::C2GS_Congratulate_Accept* release_info();
  inline void set_allocated_info(::pb::C2GS_Congratulate_Accept* info);

  // optional string to_player_name = 2;
  inline bool has_to_player_name() const;
  inline void clear_to_player_name();
  static const int kToPlayerNameFieldNumber = 2;
  inline const ::std::string& to_player_name() const;
  inline void set_to_player_name(const ::std::string& value);
  inline void set_to_player_name(const char* value);
  inline void set_to_player_name(const char* value, size_t size);
  inline ::std::string* mutable_to_player_name();
  inline ::std::string* release_to_player_name();
  inline void set_allocated_to_player_name(::std::string* to_player_name);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Achieve_Congratulate)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_to_player_name();
  inline void clear_has_to_player_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::C2GS_Congratulate_Accept* info_;
  ::std::string* to_player_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Achieve_Congratulate* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Congratulate_Accept : public ::google::protobuf::Message {
 public:
  C2GS_Congratulate_Accept();
  virtual ~C2GS_Congratulate_Accept();

  C2GS_Congratulate_Accept(const C2GS_Congratulate_Accept& from);

  inline C2GS_Congratulate_Accept& operator=(const C2GS_Congratulate_Accept& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Congratulate_Accept& default_instance();

  void Swap(C2GS_Congratulate_Accept* other);

  // implements Message ----------------------------------------------

  C2GS_Congratulate_Accept* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Congratulate_Accept& from);
  void MergeFrom(const C2GS_Congratulate_Accept& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 to_player_id = 1;
  inline bool has_to_player_id() const;
  inline void clear_to_player_id();
  static const int kToPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 to_player_id() const;
  inline void set_to_player_id(::google::protobuf::uint64 value);

  // optional uint32 rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 suit_id = 3;
  inline bool has_suit_id() const;
  inline void clear_suit_id();
  static const int kSuitIdFieldNumber = 3;
  inline ::google::protobuf::uint32 suit_id() const;
  inline void set_suit_id(::google::protobuf::uint32 value);

  // optional uint32 congratulate_type = 4;
  inline bool has_congratulate_type() const;
  inline void clear_congratulate_type();
  static const int kCongratulateTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 congratulate_type() const;
  inline void set_congratulate_type(::google::protobuf::uint32 value);

  // optional uint32 table_id = 5;
  inline bool has_table_id() const;
  inline void clear_table_id();
  static const int kTableIdFieldNumber = 5;
  inline ::google::protobuf::uint32 table_id() const;
  inline void set_table_id(::google::protobuf::uint32 value);

  // optional uint32 operate_type = 6;
  inline bool has_operate_type() const;
  inline void clear_operate_type();
  static const int kOperateTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 operate_type() const;
  inline void set_operate_type(::google::protobuf::uint32 value);

  // optional uint64 active_time = 7;
  inline bool has_active_time() const;
  inline void clear_active_time();
  static const int kActiveTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 active_time() const;
  inline void set_active_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Congratulate_Accept)
 private:
  inline void set_has_to_player_id();
  inline void clear_has_to_player_id();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_suit_id();
  inline void clear_has_suit_id();
  inline void set_has_congratulate_type();
  inline void clear_has_congratulate_type();
  inline void set_has_table_id();
  inline void clear_has_table_id();
  inline void set_has_operate_type();
  inline void clear_has_operate_type();
  inline void set_has_active_time();
  inline void clear_has_active_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 to_player_id_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 suit_id_;
  ::google::protobuf::uint32 congratulate_type_;
  ::google::protobuf::uint32 table_id_;
  ::google::protobuf::uint64 active_time_;
  ::google::protobuf::uint32 operate_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Congratulate_Accept* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_ListOfCurrentCanCongratulate : public ::google::protobuf::Message {
 public:
  GS2C_ListOfCurrentCanCongratulate();
  virtual ~GS2C_ListOfCurrentCanCongratulate();

  GS2C_ListOfCurrentCanCongratulate(const GS2C_ListOfCurrentCanCongratulate& from);

  inline GS2C_ListOfCurrentCanCongratulate& operator=(const GS2C_ListOfCurrentCanCongratulate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_ListOfCurrentCanCongratulate& default_instance();

  void Swap(GS2C_ListOfCurrentCanCongratulate* other);

  // implements Message ----------------------------------------------

  GS2C_ListOfCurrentCanCongratulate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_ListOfCurrentCanCongratulate& from);
  void MergeFrom(const GS2C_ListOfCurrentCanCongratulate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.GS2C_Achieve_Congratulate info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::GS2C_Achieve_Congratulate& info() const;
  inline ::pb::GS2C_Achieve_Congratulate* mutable_info();
  inline ::pb::GS2C_Achieve_Congratulate* release_info();
  inline void set_allocated_info(::pb::GS2C_Achieve_Congratulate* info);

  // @@protoc_insertion_point(class_scope:pb.GS2C_ListOfCurrentCanCongratulate)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::GS2C_Achieve_Congratulate* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GS2C_ListOfCurrentCanCongratulate* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Congratulate_Accept_Rsp : public ::google::protobuf::Message {
 public:
  GS2C_Congratulate_Accept_Rsp();
  virtual ~GS2C_Congratulate_Accept_Rsp();

  GS2C_Congratulate_Accept_Rsp(const GS2C_Congratulate_Accept_Rsp& from);

  inline GS2C_Congratulate_Accept_Rsp& operator=(const GS2C_Congratulate_Accept_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Congratulate_Accept_Rsp& default_instance();

  void Swap(GS2C_Congratulate_Accept_Rsp* other);

  // implements Message ----------------------------------------------

  GS2C_Congratulate_Accept_Rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Congratulate_Accept_Rsp& from);
  void MergeFrom(const GS2C_Congratulate_Accept_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.StReward reward = 1;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::pb::StReward& reward(int index) const;
  inline ::pb::StReward* mutable_reward(int index);
  inline ::pb::StReward* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Congratulate_Accept_Rsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::StReward > reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Congratulate_Accept_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_CongratulateInfo : public ::google::protobuf::Message {
 public:
  GxDB_CongratulateInfo();
  virtual ~GxDB_CongratulateInfo();

  GxDB_CongratulateInfo(const GxDB_CongratulateInfo& from);

  inline GxDB_CongratulateInfo& operator=(const GxDB_CongratulateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_CongratulateInfo& default_instance();

  void Swap(GxDB_CongratulateInfo* other);

  // implements Message ----------------------------------------------

  GxDB_CongratulateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_CongratulateInfo& from);
  void MergeFrom(const GxDB_CongratulateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 table_id = 1;
  inline bool has_table_id() const;
  inline void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  inline ::google::protobuf::uint32 table_id() const;
  inline void set_table_id(::google::protobuf::uint32 value);

  // optional uint32 is_achieve = 2;
  inline bool has_is_achieve() const;
  inline void clear_is_achieve();
  static const int kIsAchieveFieldNumber = 2;
  inline ::google::protobuf::uint32 is_achieve() const;
  inline void set_is_achieve(::google::protobuf::uint32 value);

  // optional uint32 been_congratulated_count = 3;
  inline bool has_been_congratulated_count() const;
  inline void clear_been_congratulated_count();
  static const int kBeenCongratulatedCountFieldNumber = 3;
  inline ::google::protobuf::uint32 been_congratulated_count() const;
  inline void set_been_congratulated_count(::google::protobuf::uint32 value);

  // optional uint32 operate_type = 4;
  inline bool has_operate_type() const;
  inline void clear_operate_type();
  static const int kOperateTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 operate_type() const;
  inline void set_operate_type(::google::protobuf::uint32 value);

  // optional uint64 active_time = 5;
  inline bool has_active_time() const;
  inline void clear_active_time();
  static const int kActiveTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 active_time() const;
  inline void set_active_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.GxDB_CongratulateInfo)
 private:
  inline void set_has_table_id();
  inline void clear_has_table_id();
  inline void set_has_is_achieve();
  inline void clear_has_is_achieve();
  inline void set_has_been_congratulated_count();
  inline void clear_has_been_congratulated_count();
  inline void set_has_operate_type();
  inline void clear_has_operate_type();
  inline void set_has_active_time();
  inline void clear_has_active_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 table_id_;
  ::google::protobuf::uint32 is_achieve_;
  ::google::protobuf::uint32 been_congratulated_count_;
  ::google::protobuf::uint32 operate_type_;
  ::google::protobuf::uint64 active_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GxDB_CongratulateInfo* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_CongratulateRewardLog : public ::google::protobuf::Message {
 public:
  GxDB_CongratulateRewardLog();
  virtual ~GxDB_CongratulateRewardLog();

  GxDB_CongratulateRewardLog(const GxDB_CongratulateRewardLog& from);

  inline GxDB_CongratulateRewardLog& operator=(const GxDB_CongratulateRewardLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_CongratulateRewardLog& default_instance();

  void Swap(GxDB_CongratulateRewardLog* other);

  // implements Message ----------------------------------------------

  GxDB_CongratulateRewardLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_CongratulateRewardLog& from);
  void MergeFrom(const GxDB_CongratulateRewardLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.GxDB_CongratulateInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::GxDB_CongratulateInfo& info(int index) const;
  inline ::pb::GxDB_CongratulateInfo* mutable_info(int index);
  inline ::pb::GxDB_CongratulateInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_CongratulateInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_CongratulateInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:pb.GxDB_CongratulateRewardLog)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::GxDB_CongratulateInfo > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GxDB_CongratulateRewardLog* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_CongratulateBeenCongratualted : public ::google::protobuf::Message {
 public:
  GxDB_CongratulateBeenCongratualted();
  virtual ~GxDB_CongratulateBeenCongratualted();

  GxDB_CongratulateBeenCongratualted(const GxDB_CongratulateBeenCongratualted& from);

  inline GxDB_CongratulateBeenCongratualted& operator=(const GxDB_CongratulateBeenCongratualted& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_CongratulateBeenCongratualted& default_instance();

  void Swap(GxDB_CongratulateBeenCongratualted* other);

  // implements Message ----------------------------------------------

  GxDB_CongratulateBeenCongratualted* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_CongratulateBeenCongratualted& from);
  void MergeFrom(const GxDB_CongratulateBeenCongratualted& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.C2GS_Congratulate_Accept info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::C2GS_Congratulate_Accept& info(int index) const;
  inline ::pb::C2GS_Congratulate_Accept* mutable_info(int index);
  inline ::pb::C2GS_Congratulate_Accept* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::C2GS_Congratulate_Accept >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::C2GS_Congratulate_Accept >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:pb.GxDB_CongratulateBeenCongratualted)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::C2GS_Congratulate_Accept > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GxDB_CongratulateBeenCongratualted* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Lottery_Daily_Reward : public ::google::protobuf::Message {
 public:
  GS2C_Lottery_Daily_Reward();
  virtual ~GS2C_Lottery_Daily_Reward();

  GS2C_Lottery_Daily_Reward(const GS2C_Lottery_Daily_Reward& from);

  inline GS2C_Lottery_Daily_Reward& operator=(const GS2C_Lottery_Daily_Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Lottery_Daily_Reward& default_instance();

  void Swap(GS2C_Lottery_Daily_Reward* other);

  // implements Message ----------------------------------------------

  GS2C_Lottery_Daily_Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Lottery_Daily_Reward& from);
  void MergeFrom(const GS2C_Lottery_Daily_Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 table_id = 1;
  inline int table_id_size() const;
  inline void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  inline ::google::protobuf::uint32 table_id(int index) const;
  inline void set_table_id(int index, ::google::protobuf::uint32 value);
  inline void add_table_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      table_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_table_id();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Lottery_Daily_Reward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > table_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Rank_2eproto();
  friend void protobuf_AssignDesc_Rank_2eproto();
  friend void protobuf_ShutdownFile_Rank_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Lottery_Daily_Reward* default_instance_;
};
// ===================================================================


// ===================================================================

// ExploitRankBoxDrop

// required uint32 id = 1;
inline bool ExploitRankBoxDrop::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExploitRankBoxDrop::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExploitRankBoxDrop::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExploitRankBoxDrop::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ExploitRankBoxDrop::id() const {
  return id_;
}
inline void ExploitRankBoxDrop::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 cnt = 2;
inline bool ExploitRankBoxDrop::has_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExploitRankBoxDrop::set_has_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExploitRankBoxDrop::clear_has_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExploitRankBoxDrop::clear_cnt() {
  cnt_ = 0u;
  clear_has_cnt();
}
inline ::google::protobuf::uint32 ExploitRankBoxDrop::cnt() const {
  return cnt_;
}
inline void ExploitRankBoxDrop::set_cnt(::google::protobuf::uint32 value) {
  set_has_cnt();
  cnt_ = value;
}

// optional uint32 strike = 3;
inline bool ExploitRankBoxDrop::has_strike() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExploitRankBoxDrop::set_has_strike() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExploitRankBoxDrop::clear_has_strike() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExploitRankBoxDrop::clear_strike() {
  strike_ = 0u;
  clear_has_strike();
}
inline ::google::protobuf::uint32 ExploitRankBoxDrop::strike() const {
  return strike_;
}
inline void ExploitRankBoxDrop::set_strike(::google::protobuf::uint32 value) {
  set_has_strike();
  strike_ = value;
}

// -------------------------------------------------------------------

// RankRewardStatus

// required uint32 step = 1;
inline bool RankRewardStatus::has_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankRewardStatus::set_has_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankRewardStatus::clear_has_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankRewardStatus::clear_step() {
  step_ = 0u;
  clear_has_step();
}
inline ::google::protobuf::uint32 RankRewardStatus::step() const {
  return step_;
}
inline void RankRewardStatus::set_step(::google::protobuf::uint32 value) {
  set_has_step();
  step_ = value;
}

// required uint32 reward = 2;
inline bool RankRewardStatus::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankRewardStatus::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankRewardStatus::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankRewardStatus::clear_reward() {
  reward_ = 0u;
  clear_has_reward();
}
inline ::google::protobuf::uint32 RankRewardStatus::reward() const {
  return reward_;
}
inline void RankRewardStatus::set_reward(::google::protobuf::uint32 value) {
  set_has_reward();
  reward_ = value;
}

// -------------------------------------------------------------------

// C2GS_Exploit_Rank_Open_Box

// required uint32 id = 1;
inline bool C2GS_Exploit_Rank_Open_Box::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Exploit_Rank_Open_Box::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Exploit_Rank_Open_Box::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Exploit_Rank_Open_Box::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 C2GS_Exploit_Rank_Open_Box::id() const {
  return id_;
}
inline void C2GS_Exploit_Rank_Open_Box::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional bool is_all = 2;
inline bool C2GS_Exploit_Rank_Open_Box::has_is_all() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2GS_Exploit_Rank_Open_Box::set_has_is_all() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2GS_Exploit_Rank_Open_Box::clear_has_is_all() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2GS_Exploit_Rank_Open_Box::clear_is_all() {
  is_all_ = false;
  clear_has_is_all();
}
inline bool C2GS_Exploit_Rank_Open_Box::is_all() const {
  return is_all_;
}
inline void C2GS_Exploit_Rank_Open_Box::set_is_all(bool value) {
  set_has_is_all();
  is_all_ = value;
}

// -------------------------------------------------------------------

// GS2C_Exploit_Rank_Open_Box

// repeated .pb.ExploitRankBoxDrop drop = 1;
inline int GS2C_Exploit_Rank_Open_Box::drop_size() const {
  return drop_.size();
}
inline void GS2C_Exploit_Rank_Open_Box::clear_drop() {
  drop_.Clear();
}
inline const ::pb::ExploitRankBoxDrop& GS2C_Exploit_Rank_Open_Box::drop(int index) const {
  return drop_.Get(index);
}
inline ::pb::ExploitRankBoxDrop* GS2C_Exploit_Rank_Open_Box::mutable_drop(int index) {
  return drop_.Mutable(index);
}
inline ::pb::ExploitRankBoxDrop* GS2C_Exploit_Rank_Open_Box::add_drop() {
  return drop_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::ExploitRankBoxDrop >&
GS2C_Exploit_Rank_Open_Box::drop() const {
  return drop_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::ExploitRankBoxDrop >*
GS2C_Exploit_Rank_Open_Box::mutable_drop() {
  return &drop_;
}

// optional uint32 ret = 2;
inline bool GS2C_Exploit_Rank_Open_Box::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Exploit_Rank_Open_Box::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Exploit_Rank_Open_Box::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Exploit_Rank_Open_Box::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 GS2C_Exploit_Rank_Open_Box::ret() const {
  return ret_;
}
inline void GS2C_Exploit_Rank_Open_Box::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// GS2C_Trick_Rank_Get_Reward

// required .pb.ExploitRankBoxDrop drop = 1;
inline bool GS2C_Trick_Rank_Get_Reward::has_drop() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Trick_Rank_Get_Reward::set_has_drop() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Trick_Rank_Get_Reward::clear_has_drop() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Trick_Rank_Get_Reward::clear_drop() {
  if (drop_ != NULL) drop_->::pb::ExploitRankBoxDrop::Clear();
  clear_has_drop();
}
inline const ::pb::ExploitRankBoxDrop& GS2C_Trick_Rank_Get_Reward::drop() const {
  return drop_ != NULL ? *drop_ : *default_instance_->drop_;
}
inline ::pb::ExploitRankBoxDrop* GS2C_Trick_Rank_Get_Reward::mutable_drop() {
  set_has_drop();
  if (drop_ == NULL) drop_ = new ::pb::ExploitRankBoxDrop;
  return drop_;
}
inline ::pb::ExploitRankBoxDrop* GS2C_Trick_Rank_Get_Reward::release_drop() {
  clear_has_drop();
  ::pb::ExploitRankBoxDrop* temp = drop_;
  drop_ = NULL;
  return temp;
}
inline void GS2C_Trick_Rank_Get_Reward::set_allocated_drop(::pb::ExploitRankBoxDrop* drop) {
  delete drop_;
  drop_ = drop;
  if (drop) {
    set_has_drop();
  } else {
    clear_has_drop();
  }
}

// repeated .pb.RankRewardStatus reward = 2;
inline int GS2C_Trick_Rank_Get_Reward::reward_size() const {
  return reward_.size();
}
inline void GS2C_Trick_Rank_Get_Reward::clear_reward() {
  reward_.Clear();
}
inline const ::pb::RankRewardStatus& GS2C_Trick_Rank_Get_Reward::reward(int index) const {
  return reward_.Get(index);
}
inline ::pb::RankRewardStatus* GS2C_Trick_Rank_Get_Reward::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::pb::RankRewardStatus* GS2C_Trick_Rank_Get_Reward::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >&
GS2C_Trick_Rank_Get_Reward::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >*
GS2C_Trick_Rank_Get_Reward::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// GS2C_Occupy_Rank_Get_Reward

// required .pb.ExploitRankBoxDrop drop = 1;
inline bool GS2C_Occupy_Rank_Get_Reward::has_drop() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Occupy_Rank_Get_Reward::set_has_drop() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Occupy_Rank_Get_Reward::clear_has_drop() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Occupy_Rank_Get_Reward::clear_drop() {
  if (drop_ != NULL) drop_->::pb::ExploitRankBoxDrop::Clear();
  clear_has_drop();
}
inline const ::pb::ExploitRankBoxDrop& GS2C_Occupy_Rank_Get_Reward::drop() const {
  return drop_ != NULL ? *drop_ : *default_instance_->drop_;
}
inline ::pb::ExploitRankBoxDrop* GS2C_Occupy_Rank_Get_Reward::mutable_drop() {
  set_has_drop();
  if (drop_ == NULL) drop_ = new ::pb::ExploitRankBoxDrop;
  return drop_;
}
inline ::pb::ExploitRankBoxDrop* GS2C_Occupy_Rank_Get_Reward::release_drop() {
  clear_has_drop();
  ::pb::ExploitRankBoxDrop* temp = drop_;
  drop_ = NULL;
  return temp;
}
inline void GS2C_Occupy_Rank_Get_Reward::set_allocated_drop(::pb::ExploitRankBoxDrop* drop) {
  delete drop_;
  drop_ = drop;
  if (drop) {
    set_has_drop();
  } else {
    clear_has_drop();
  }
}

// repeated .pb.RankRewardStatus reward = 2;
inline int GS2C_Occupy_Rank_Get_Reward::reward_size() const {
  return reward_.size();
}
inline void GS2C_Occupy_Rank_Get_Reward::clear_reward() {
  reward_.Clear();
}
inline const ::pb::RankRewardStatus& GS2C_Occupy_Rank_Get_Reward::reward(int index) const {
  return reward_.Get(index);
}
inline ::pb::RankRewardStatus* GS2C_Occupy_Rank_Get_Reward::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::pb::RankRewardStatus* GS2C_Occupy_Rank_Get_Reward::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >&
GS2C_Occupy_Rank_Get_Reward::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >*
GS2C_Occupy_Rank_Get_Reward::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// ExploitRank

// optional bool IsNew = 1;
inline bool ExploitRank::has_isnew() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExploitRank::set_has_isnew() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExploitRank::clear_has_isnew() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExploitRank::clear_isnew() {
  isnew_ = false;
  clear_has_isnew();
}
inline bool ExploitRank::isnew() const {
  return isnew_;
}
inline void ExploitRank::set_isnew(bool value) {
  set_has_isnew();
  isnew_ = value;
}

// required uint32 id = 2;
inline bool ExploitRank::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExploitRank::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExploitRank::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExploitRank::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ExploitRank::id() const {
  return id_;
}
inline void ExploitRank::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required string name = 3;
inline bool ExploitRank::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExploitRank::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExploitRank::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExploitRank::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ExploitRank::name() const {
  return *name_;
}
inline void ExploitRank::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ExploitRank::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ExploitRank::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExploitRank::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ExploitRank::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExploitRank::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 lv = 4;
inline bool ExploitRank::has_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExploitRank::set_has_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExploitRank::clear_has_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExploitRank::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 ExploitRank::lv() const {
  return lv_;
}
inline void ExploitRank::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// required uint32 vip_level = 6;
inline bool ExploitRank::has_vip_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExploitRank::set_has_vip_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExploitRank::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExploitRank::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 ExploitRank::vip_level() const {
  return vip_level_;
}
inline void ExploitRank::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// required uint32 exploit = 5;
inline bool ExploitRank::has_exploit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExploitRank::set_has_exploit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ExploitRank::clear_has_exploit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ExploitRank::clear_exploit() {
  exploit_ = 0u;
  clear_has_exploit();
}
inline ::google::protobuf::uint32 ExploitRank::exploit() const {
  return exploit_;
}
inline void ExploitRank::set_exploit(::google::protobuf::uint32 value) {
  set_has_exploit();
  exploit_ = value;
}

// optional uint32 headIconId = 7;
inline bool ExploitRank::has_headiconid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ExploitRank::set_has_headiconid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ExploitRank::clear_has_headiconid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ExploitRank::clear_headiconid() {
  headiconid_ = 0u;
  clear_has_headiconid();
}
inline ::google::protobuf::uint32 ExploitRank::headiconid() const {
  return headiconid_;
}
inline void ExploitRank::set_headiconid(::google::protobuf::uint32 value) {
  set_has_headiconid();
  headiconid_ = value;
}

// -------------------------------------------------------------------

// GS2C_Exploit_Rank_List

// repeated .pb.ExploitRank list = 1;
inline int GS2C_Exploit_Rank_List::list_size() const {
  return list_.size();
}
inline void GS2C_Exploit_Rank_List::clear_list() {
  list_.Clear();
}
inline const ::pb::ExploitRank& GS2C_Exploit_Rank_List::list(int index) const {
  return list_.Get(index);
}
inline ::pb::ExploitRank* GS2C_Exploit_Rank_List::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::pb::ExploitRank* GS2C_Exploit_Rank_List::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::ExploitRank >&
GS2C_Exploit_Rank_List::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::ExploitRank >*
GS2C_Exploit_Rank_List::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// TrickRank

// optional bool IsNew = 1;
inline bool TrickRank::has_isnew() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrickRank::set_has_isnew() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrickRank::clear_has_isnew() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrickRank::clear_isnew() {
  isnew_ = false;
  clear_has_isnew();
}
inline bool TrickRank::isnew() const {
  return isnew_;
}
inline void TrickRank::set_isnew(bool value) {
  set_has_isnew();
  isnew_ = value;
}

// required uint32 id = 2;
inline bool TrickRank::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrickRank::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrickRank::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrickRank::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TrickRank::id() const {
  return id_;
}
inline void TrickRank::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required string name = 3;
inline bool TrickRank::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TrickRank::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TrickRank::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TrickRank::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TrickRank::name() const {
  return *name_;
}
inline void TrickRank::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TrickRank::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TrickRank::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TrickRank::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* TrickRank::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TrickRank::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 lv = 4;
inline bool TrickRank::has_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TrickRank::set_has_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TrickRank::clear_has_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TrickRank::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 TrickRank::lv() const {
  return lv_;
}
inline void TrickRank::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// required uint32 trick = 5;
inline bool TrickRank::has_trick() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TrickRank::set_has_trick() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TrickRank::clear_has_trick() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TrickRank::clear_trick() {
  trick_ = 0u;
  clear_has_trick();
}
inline ::google::protobuf::uint32 TrickRank::trick() const {
  return trick_;
}
inline void TrickRank::set_trick(::google::protobuf::uint32 value) {
  set_has_trick();
  trick_ = value;
}

// required uint32 vip_level = 6;
inline bool TrickRank::has_vip_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TrickRank::set_has_vip_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TrickRank::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TrickRank::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 TrickRank::vip_level() const {
  return vip_level_;
}
inline void TrickRank::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional uint32 headIconId = 7;
inline bool TrickRank::has_headiconid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TrickRank::set_has_headiconid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TrickRank::clear_has_headiconid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TrickRank::clear_headiconid() {
  headiconid_ = 0u;
  clear_has_headiconid();
}
inline ::google::protobuf::uint32 TrickRank::headiconid() const {
  return headiconid_;
}
inline void TrickRank::set_headiconid(::google::protobuf::uint32 value) {
  set_has_headiconid();
  headiconid_ = value;
}

// -------------------------------------------------------------------

// GS2C_Trick_Rank_List

// repeated .pb.TrickRank list = 1;
inline int GS2C_Trick_Rank_List::list_size() const {
  return list_.size();
}
inline void GS2C_Trick_Rank_List::clear_list() {
  list_.Clear();
}
inline const ::pb::TrickRank& GS2C_Trick_Rank_List::list(int index) const {
  return list_.Get(index);
}
inline ::pb::TrickRank* GS2C_Trick_Rank_List::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::pb::TrickRank* GS2C_Trick_Rank_List::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TrickRank >&
GS2C_Trick_Rank_List::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TrickRank >*
GS2C_Trick_Rank_List::mutable_list() {
  return &list_;
}

// repeated .pb.RankRewardStatus reward = 2;
inline int GS2C_Trick_Rank_List::reward_size() const {
  return reward_.size();
}
inline void GS2C_Trick_Rank_List::clear_reward() {
  reward_.Clear();
}
inline const ::pb::RankRewardStatus& GS2C_Trick_Rank_List::reward(int index) const {
  return reward_.Get(index);
}
inline ::pb::RankRewardStatus* GS2C_Trick_Rank_List::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::pb::RankRewardStatus* GS2C_Trick_Rank_List::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >&
GS2C_Trick_Rank_List::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >*
GS2C_Trick_Rank_List::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// OccupyRank

// optional bool IsNew = 1;
inline bool OccupyRank::has_isnew() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OccupyRank::set_has_isnew() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OccupyRank::clear_has_isnew() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OccupyRank::clear_isnew() {
  isnew_ = false;
  clear_has_isnew();
}
inline bool OccupyRank::isnew() const {
  return isnew_;
}
inline void OccupyRank::set_isnew(bool value) {
  set_has_isnew();
  isnew_ = value;
}

// required uint32 id = 2;
inline bool OccupyRank::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OccupyRank::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OccupyRank::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OccupyRank::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 OccupyRank::id() const {
  return id_;
}
inline void OccupyRank::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required string name = 3;
inline bool OccupyRank::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OccupyRank::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OccupyRank::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OccupyRank::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& OccupyRank::name() const {
  return *name_;
}
inline void OccupyRank::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void OccupyRank::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void OccupyRank::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OccupyRank::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* OccupyRank::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OccupyRank::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 lv = 4;
inline bool OccupyRank::has_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OccupyRank::set_has_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OccupyRank::clear_has_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OccupyRank::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 OccupyRank::lv() const {
  return lv_;
}
inline void OccupyRank::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// required uint32 highest = 5;
inline bool OccupyRank::has_highest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OccupyRank::set_has_highest() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OccupyRank::clear_has_highest() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OccupyRank::clear_highest() {
  highest_ = 0u;
  clear_has_highest();
}
inline ::google::protobuf::uint32 OccupyRank::highest() const {
  return highest_;
}
inline void OccupyRank::set_highest(::google::protobuf::uint32 value) {
  set_has_highest();
  highest_ = value;
}

// required uint32 occupy = 6;
inline bool OccupyRank::has_occupy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OccupyRank::set_has_occupy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OccupyRank::clear_has_occupy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OccupyRank::clear_occupy() {
  occupy_ = 0u;
  clear_has_occupy();
}
inline ::google::protobuf::uint32 OccupyRank::occupy() const {
  return occupy_;
}
inline void OccupyRank::set_occupy(::google::protobuf::uint32 value) {
  set_has_occupy();
  occupy_ = value;
}

// required uint32 vip_level = 7;
inline bool OccupyRank::has_vip_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OccupyRank::set_has_vip_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OccupyRank::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OccupyRank::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 OccupyRank::vip_level() const {
  return vip_level_;
}
inline void OccupyRank::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional uint32 headIconId = 8;
inline bool OccupyRank::has_headiconid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OccupyRank::set_has_headiconid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OccupyRank::clear_has_headiconid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OccupyRank::clear_headiconid() {
  headiconid_ = 0u;
  clear_has_headiconid();
}
inline ::google::protobuf::uint32 OccupyRank::headiconid() const {
  return headiconid_;
}
inline void OccupyRank::set_headiconid(::google::protobuf::uint32 value) {
  set_has_headiconid();
  headiconid_ = value;
}

// -------------------------------------------------------------------

// GS2C_Occupy_Rank_List

// repeated .pb.OccupyRank list = 1;
inline int GS2C_Occupy_Rank_List::list_size() const {
  return list_.size();
}
inline void GS2C_Occupy_Rank_List::clear_list() {
  list_.Clear();
}
inline const ::pb::OccupyRank& GS2C_Occupy_Rank_List::list(int index) const {
  return list_.Get(index);
}
inline ::pb::OccupyRank* GS2C_Occupy_Rank_List::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::pb::OccupyRank* GS2C_Occupy_Rank_List::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::OccupyRank >&
GS2C_Occupy_Rank_List::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::OccupyRank >*
GS2C_Occupy_Rank_List::mutable_list() {
  return &list_;
}

// repeated .pb.RankRewardStatus reward = 2;
inline int GS2C_Occupy_Rank_List::reward_size() const {
  return reward_.size();
}
inline void GS2C_Occupy_Rank_List::clear_reward() {
  reward_.Clear();
}
inline const ::pb::RankRewardStatus& GS2C_Occupy_Rank_List::reward(int index) const {
  return reward_.Get(index);
}
inline ::pb::RankRewardStatus* GS2C_Occupy_Rank_List::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::pb::RankRewardStatus* GS2C_Occupy_Rank_List::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >&
GS2C_Occupy_Rank_List::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::RankRewardStatus >*
GS2C_Occupy_Rank_List::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// ShowData

// optional uint32 rank = 1;
inline bool ShowData::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowData::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowData::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowData::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 ShowData::rank() const {
  return rank_;
}
inline void ShowData::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// optional uint32 lv = 2;
inline bool ShowData::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShowData::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShowData::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShowData::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 ShowData::lv() const {
  return lv_;
}
inline void ShowData::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// optional uint32 country_id = 3;
inline bool ShowData::has_country_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShowData::set_has_country_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShowData::clear_has_country_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShowData::clear_country_id() {
  country_id_ = 0u;
  clear_has_country_id();
}
inline ::google::protobuf::uint32 ShowData::country_id() const {
  return country_id_;
}
inline void ShowData::set_country_id(::google::protobuf::uint32 value) {
  set_has_country_id();
  country_id_ = value;
}

// optional uint32 value = 4;
inline bool ShowData::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShowData::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShowData::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShowData::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ShowData::value() const {
  return value_;
}
inline void ShowData::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// optional uint32 vip_lv = 5;
inline bool ShowData::has_vip_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShowData::set_has_vip_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShowData::clear_has_vip_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShowData::clear_vip_lv() {
  vip_lv_ = 0u;
  clear_has_vip_lv();
}
inline ::google::protobuf::uint32 ShowData::vip_lv() const {
  return vip_lv_;
}
inline void ShowData::set_vip_lv(::google::protobuf::uint32 value) {
  set_has_vip_lv();
  vip_lv_ = value;
}

// optional string name = 6;
inline bool ShowData::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShowData::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShowData::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShowData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ShowData::name() const {
  return *name_;
}
inline void ShowData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ShowData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ShowData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ShowData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ShowData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ShowData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 headIconId = 7;
inline bool ShowData::has_headiconid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShowData::set_has_headiconid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShowData::clear_has_headiconid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShowData::clear_headiconid() {
  headiconid_ = 0u;
  clear_has_headiconid();
}
inline ::google::protobuf::uint32 ShowData::headiconid() const {
  return headiconid_;
}
inline void ShowData::set_headiconid(::google::protobuf::uint32 value) {
  set_has_headiconid();
  headiconid_ = value;
}

// -------------------------------------------------------------------

// GS2C_CountryOccupyCityNum

// required uint32 nr_worm = 1;
inline bool GS2C_CountryOccupyCityNum::has_nr_worm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_CountryOccupyCityNum::set_has_nr_worm() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_CountryOccupyCityNum::clear_has_nr_worm() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_CountryOccupyCityNum::clear_nr_worm() {
  nr_worm_ = 0u;
  clear_has_nr_worm();
}
inline ::google::protobuf::uint32 GS2C_CountryOccupyCityNum::nr_worm() const {
  return nr_worm_;
}
inline void GS2C_CountryOccupyCityNum::set_nr_worm(::google::protobuf::uint32 value) {
  set_has_nr_worm();
  nr_worm_ = value;
}

// required uint32 nr_human = 2;
inline bool GS2C_CountryOccupyCityNum::has_nr_human() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_CountryOccupyCityNum::set_has_nr_human() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_CountryOccupyCityNum::clear_has_nr_human() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_CountryOccupyCityNum::clear_nr_human() {
  nr_human_ = 0u;
  clear_has_nr_human();
}
inline ::google::protobuf::uint32 GS2C_CountryOccupyCityNum::nr_human() const {
  return nr_human_;
}
inline void GS2C_CountryOccupyCityNum::set_nr_human(::google::protobuf::uint32 value) {
  set_has_nr_human();
  nr_human_ = value;
}

// required uint32 nr_god = 3;
inline bool GS2C_CountryOccupyCityNum::has_nr_god() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_CountryOccupyCityNum::set_has_nr_god() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_CountryOccupyCityNum::clear_has_nr_god() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_CountryOccupyCityNum::clear_nr_god() {
  nr_god_ = 0u;
  clear_has_nr_god();
}
inline ::google::protobuf::uint32 GS2C_CountryOccupyCityNum::nr_god() const {
  return nr_god_;
}
inline void GS2C_CountryOccupyCityNum::set_nr_god(::google::protobuf::uint32 value) {
  set_has_nr_god();
  nr_god_ = value;
}

// -------------------------------------------------------------------

// GS2C_PersonalAddSoldier

// repeated .pb.ShowData rank_of_add_soldier = 1;
inline int GS2C_PersonalAddSoldier::rank_of_add_soldier_size() const {
  return rank_of_add_soldier_.size();
}
inline void GS2C_PersonalAddSoldier::clear_rank_of_add_soldier() {
  rank_of_add_soldier_.Clear();
}
inline const ::pb::ShowData& GS2C_PersonalAddSoldier::rank_of_add_soldier(int index) const {
  return rank_of_add_soldier_.Get(index);
}
inline ::pb::ShowData* GS2C_PersonalAddSoldier::mutable_rank_of_add_soldier(int index) {
  return rank_of_add_soldier_.Mutable(index);
}
inline ::pb::ShowData* GS2C_PersonalAddSoldier::add_rank_of_add_soldier() {
  return rank_of_add_soldier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::ShowData >&
GS2C_PersonalAddSoldier::rank_of_add_soldier() const {
  return rank_of_add_soldier_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::ShowData >*
GS2C_PersonalAddSoldier::mutable_rank_of_add_soldier() {
  return &rank_of_add_soldier_;
}

// optional .pb.ShowData self_info = 2;
inline bool GS2C_PersonalAddSoldier::has_self_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_PersonalAddSoldier::set_has_self_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_PersonalAddSoldier::clear_has_self_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_PersonalAddSoldier::clear_self_info() {
  if (self_info_ != NULL) self_info_->::pb::ShowData::Clear();
  clear_has_self_info();
}
inline const ::pb::ShowData& GS2C_PersonalAddSoldier::self_info() const {
  return self_info_ != NULL ? *self_info_ : *default_instance_->self_info_;
}
inline ::pb::ShowData* GS2C_PersonalAddSoldier::mutable_self_info() {
  set_has_self_info();
  if (self_info_ == NULL) self_info_ = new ::pb::ShowData;
  return self_info_;
}
inline ::pb::ShowData* GS2C_PersonalAddSoldier::release_self_info() {
  clear_has_self_info();
  ::pb::ShowData* temp = self_info_;
  self_info_ = NULL;
  return temp;
}
inline void GS2C_PersonalAddSoldier::set_allocated_self_info(::pb::ShowData* self_info) {
  delete self_info_;
  self_info_ = self_info;
  if (self_info) {
    set_has_self_info();
  } else {
    clear_has_self_info();
  }
}

// -------------------------------------------------------------------

// GS2C_PersonalOccupyCityNum

// repeated .pb.ShowData rank_of_take_city = 1;
inline int GS2C_PersonalOccupyCityNum::rank_of_take_city_size() const {
  return rank_of_take_city_.size();
}
inline void GS2C_PersonalOccupyCityNum::clear_rank_of_take_city() {
  rank_of_take_city_.Clear();
}
inline const ::pb::ShowData& GS2C_PersonalOccupyCityNum::rank_of_take_city(int index) const {
  return rank_of_take_city_.Get(index);
}
inline ::pb::ShowData* GS2C_PersonalOccupyCityNum::mutable_rank_of_take_city(int index) {
  return rank_of_take_city_.Mutable(index);
}
inline ::pb::ShowData* GS2C_PersonalOccupyCityNum::add_rank_of_take_city() {
  return rank_of_take_city_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::ShowData >&
GS2C_PersonalOccupyCityNum::rank_of_take_city() const {
  return rank_of_take_city_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::ShowData >*
GS2C_PersonalOccupyCityNum::mutable_rank_of_take_city() {
  return &rank_of_take_city_;
}

// optional .pb.ShowData self_info = 2;
inline bool GS2C_PersonalOccupyCityNum::has_self_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_PersonalOccupyCityNum::set_has_self_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_PersonalOccupyCityNum::clear_has_self_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_PersonalOccupyCityNum::clear_self_info() {
  if (self_info_ != NULL) self_info_->::pb::ShowData::Clear();
  clear_has_self_info();
}
inline const ::pb::ShowData& GS2C_PersonalOccupyCityNum::self_info() const {
  return self_info_ != NULL ? *self_info_ : *default_instance_->self_info_;
}
inline ::pb::ShowData* GS2C_PersonalOccupyCityNum::mutable_self_info() {
  set_has_self_info();
  if (self_info_ == NULL) self_info_ = new ::pb::ShowData;
  return self_info_;
}
inline ::pb::ShowData* GS2C_PersonalOccupyCityNum::release_self_info() {
  clear_has_self_info();
  ::pb::ShowData* temp = self_info_;
  self_info_ = NULL;
  return temp;
}
inline void GS2C_PersonalOccupyCityNum::set_allocated_self_info(::pb::ShowData* self_info) {
  delete self_info_;
  self_info_ = self_info;
  if (self_info) {
    set_has_self_info();
  } else {
    clear_has_self_info();
  }
}

// -------------------------------------------------------------------

// CharacterInfo

// optional uint32 character_lv = 1;
inline bool CharacterInfo::has_character_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterInfo::set_has_character_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterInfo::clear_has_character_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterInfo::clear_character_lv() {
  character_lv_ = 0u;
  clear_has_character_lv();
}
inline ::google::protobuf::uint32 CharacterInfo::character_lv() const {
  return character_lv_;
}
inline void CharacterInfo::set_character_lv(::google::protobuf::uint32 value) {
  set_has_character_lv();
  character_lv_ = value;
}

// optional uint32 char_proto_id = 2;
inline bool CharacterInfo::has_char_proto_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterInfo::set_has_char_proto_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterInfo::clear_has_char_proto_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterInfo::clear_char_proto_id() {
  char_proto_id_ = 0u;
  clear_has_char_proto_id();
}
inline ::google::protobuf::uint32 CharacterInfo::char_proto_id() const {
  return char_proto_id_;
}
inline void CharacterInfo::set_char_proto_id(::google::protobuf::uint32 value) {
  set_has_char_proto_id();
  char_proto_id_ = value;
}

// -------------------------------------------------------------------

// CharacterMsg

// repeated .pb.CharacterInfo character_info = 1;
inline int CharacterMsg::character_info_size() const {
  return character_info_.size();
}
inline void CharacterMsg::clear_character_info() {
  character_info_.Clear();
}
inline const ::pb::CharacterInfo& CharacterMsg::character_info(int index) const {
  return character_info_.Get(index);
}
inline ::pb::CharacterInfo* CharacterMsg::mutable_character_info(int index) {
  return character_info_.Mutable(index);
}
inline ::pb::CharacterInfo* CharacterMsg::add_character_info() {
  return character_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::CharacterInfo >&
CharacterMsg::character_info() const {
  return character_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::CharacterInfo >*
CharacterMsg::mutable_character_info() {
  return &character_info_;
}

// -------------------------------------------------------------------

// SiegeArmyInfo

// optional uint32 siege_lv = 1;
inline bool SiegeArmyInfo::has_siege_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiegeArmyInfo::set_has_siege_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SiegeArmyInfo::clear_has_siege_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SiegeArmyInfo::clear_siege_lv() {
  siege_lv_ = 0u;
  clear_has_siege_lv();
}
inline ::google::protobuf::uint32 SiegeArmyInfo::siege_lv() const {
  return siege_lv_;
}
inline void SiegeArmyInfo::set_siege_lv(::google::protobuf::uint32 value) {
  set_has_siege_lv();
  siege_lv_ = value;
}

// optional uint32 siege_char_id = 2;
inline bool SiegeArmyInfo::has_siege_char_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SiegeArmyInfo::set_has_siege_char_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SiegeArmyInfo::clear_has_siege_char_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SiegeArmyInfo::clear_siege_char_id() {
  siege_char_id_ = 0u;
  clear_has_siege_char_id();
}
inline ::google::protobuf::uint32 SiegeArmyInfo::siege_char_id() const {
  return siege_char_id_;
}
inline void SiegeArmyInfo::set_siege_char_id(::google::protobuf::uint32 value) {
  set_has_siege_char_id();
  siege_char_id_ = value;
}

// -------------------------------------------------------------------

// SiegeArmyMsg

// repeated .pb.SiegeArmyInfo siege_army_info = 1;
inline int SiegeArmyMsg::siege_army_info_size() const {
  return siege_army_info_.size();
}
inline void SiegeArmyMsg::clear_siege_army_info() {
  siege_army_info_.Clear();
}
inline const ::pb::SiegeArmyInfo& SiegeArmyMsg::siege_army_info(int index) const {
  return siege_army_info_.Get(index);
}
inline ::pb::SiegeArmyInfo* SiegeArmyMsg::mutable_siege_army_info(int index) {
  return siege_army_info_.Mutable(index);
}
inline ::pb::SiegeArmyInfo* SiegeArmyMsg::add_siege_army_info() {
  return siege_army_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::SiegeArmyInfo >&
SiegeArmyMsg::siege_army_info() const {
  return siege_army_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::SiegeArmyInfo >*
SiegeArmyMsg::mutable_siege_army_info() {
  return &siege_army_info_;
}

// -------------------------------------------------------------------

// ShenQiInfo

// optional uint32 shenqi_lv = 1;
inline bool ShenQiInfo::has_shenqi_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShenQiInfo::set_has_shenqi_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShenQiInfo::clear_has_shenqi_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShenQiInfo::clear_shenqi_lv() {
  shenqi_lv_ = 0u;
  clear_has_shenqi_lv();
}
inline ::google::protobuf::uint32 ShenQiInfo::shenqi_lv() const {
  return shenqi_lv_;
}
inline void ShenQiInfo::set_shenqi_lv(::google::protobuf::uint32 value) {
  set_has_shenqi_lv();
  shenqi_lv_ = value;
}

// optional uint32 shenqi_id = 2;
inline bool ShenQiInfo::has_shenqi_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShenQiInfo::set_has_shenqi_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShenQiInfo::clear_has_shenqi_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShenQiInfo::clear_shenqi_id() {
  shenqi_id_ = 0u;
  clear_has_shenqi_id();
}
inline ::google::protobuf::uint32 ShenQiInfo::shenqi_id() const {
  return shenqi_id_;
}
inline void ShenQiInfo::set_shenqi_id(::google::protobuf::uint32 value) {
  set_has_shenqi_id();
  shenqi_id_ = value;
}

// -------------------------------------------------------------------

// ShenQiMsg

// repeated .pb.ShenQiInfo shen_qi_info = 1;
inline int ShenQiMsg::shen_qi_info_size() const {
  return shen_qi_info_.size();
}
inline void ShenQiMsg::clear_shen_qi_info() {
  shen_qi_info_.Clear();
}
inline const ::pb::ShenQiInfo& ShenQiMsg::shen_qi_info(int index) const {
  return shen_qi_info_.Get(index);
}
inline ::pb::ShenQiInfo* ShenQiMsg::mutable_shen_qi_info(int index) {
  return shen_qi_info_.Mutable(index);
}
inline ::pb::ShenQiInfo* ShenQiMsg::add_shen_qi_info() {
  return shen_qi_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::ShenQiInfo >&
ShenQiMsg::shen_qi_info() const {
  return shen_qi_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::ShenQiInfo >*
ShenQiMsg::mutable_shen_qi_info() {
  return &shen_qi_info_;
}

// -------------------------------------------------------------------

// MilitaryPowerPack

// optional .pb.ShowData military_power_rank = 1;
inline bool MilitaryPowerPack::has_military_power_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MilitaryPowerPack::set_has_military_power_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MilitaryPowerPack::clear_has_military_power_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MilitaryPowerPack::clear_military_power_rank() {
  if (military_power_rank_ != NULL) military_power_rank_->::pb::ShowData::Clear();
  clear_has_military_power_rank();
}
inline const ::pb::ShowData& MilitaryPowerPack::military_power_rank() const {
  return military_power_rank_ != NULL ? *military_power_rank_ : *default_instance_->military_power_rank_;
}
inline ::pb::ShowData* MilitaryPowerPack::mutable_military_power_rank() {
  set_has_military_power_rank();
  if (military_power_rank_ == NULL) military_power_rank_ = new ::pb::ShowData;
  return military_power_rank_;
}
inline ::pb::ShowData* MilitaryPowerPack::release_military_power_rank() {
  clear_has_military_power_rank();
  ::pb::ShowData* temp = military_power_rank_;
  military_power_rank_ = NULL;
  return temp;
}
inline void MilitaryPowerPack::set_allocated_military_power_rank(::pb::ShowData* military_power_rank) {
  delete military_power_rank_;
  military_power_rank_ = military_power_rank;
  if (military_power_rank) {
    set_has_military_power_rank();
  } else {
    clear_has_military_power_rank();
  }
}

// optional .pb.CharacterMsg char_msg = 2;
inline bool MilitaryPowerPack::has_char_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MilitaryPowerPack::set_has_char_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MilitaryPowerPack::clear_has_char_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MilitaryPowerPack::clear_char_msg() {
  if (char_msg_ != NULL) char_msg_->::pb::CharacterMsg::Clear();
  clear_has_char_msg();
}
inline const ::pb::CharacterMsg& MilitaryPowerPack::char_msg() const {
  return char_msg_ != NULL ? *char_msg_ : *default_instance_->char_msg_;
}
inline ::pb::CharacterMsg* MilitaryPowerPack::mutable_char_msg() {
  set_has_char_msg();
  if (char_msg_ == NULL) char_msg_ = new ::pb::CharacterMsg;
  return char_msg_;
}
inline ::pb::CharacterMsg* MilitaryPowerPack::release_char_msg() {
  clear_has_char_msg();
  ::pb::CharacterMsg* temp = char_msg_;
  char_msg_ = NULL;
  return temp;
}
inline void MilitaryPowerPack::set_allocated_char_msg(::pb::CharacterMsg* char_msg) {
  delete char_msg_;
  char_msg_ = char_msg;
  if (char_msg) {
    set_has_char_msg();
  } else {
    clear_has_char_msg();
  }
}

// optional .pb.SiegeArmyMsg siege_army_info = 3;
inline bool MilitaryPowerPack::has_siege_army_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MilitaryPowerPack::set_has_siege_army_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MilitaryPowerPack::clear_has_siege_army_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MilitaryPowerPack::clear_siege_army_info() {
  if (siege_army_info_ != NULL) siege_army_info_->::pb::SiegeArmyMsg::Clear();
  clear_has_siege_army_info();
}
inline const ::pb::SiegeArmyMsg& MilitaryPowerPack::siege_army_info() const {
  return siege_army_info_ != NULL ? *siege_army_info_ : *default_instance_->siege_army_info_;
}
inline ::pb::SiegeArmyMsg* MilitaryPowerPack::mutable_siege_army_info() {
  set_has_siege_army_info();
  if (siege_army_info_ == NULL) siege_army_info_ = new ::pb::SiegeArmyMsg;
  return siege_army_info_;
}
inline ::pb::SiegeArmyMsg* MilitaryPowerPack::release_siege_army_info() {
  clear_has_siege_army_info();
  ::pb::SiegeArmyMsg* temp = siege_army_info_;
  siege_army_info_ = NULL;
  return temp;
}
inline void MilitaryPowerPack::set_allocated_siege_army_info(::pb::SiegeArmyMsg* siege_army_info) {
  delete siege_army_info_;
  siege_army_info_ = siege_army_info;
  if (siege_army_info) {
    set_has_siege_army_info();
  } else {
    clear_has_siege_army_info();
  }
}

// optional .pb.ShenQiMsg shenqi_msg = 4;
inline bool MilitaryPowerPack::has_shenqi_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MilitaryPowerPack::set_has_shenqi_msg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MilitaryPowerPack::clear_has_shenqi_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MilitaryPowerPack::clear_shenqi_msg() {
  if (shenqi_msg_ != NULL) shenqi_msg_->::pb::ShenQiMsg::Clear();
  clear_has_shenqi_msg();
}
inline const ::pb::ShenQiMsg& MilitaryPowerPack::shenqi_msg() const {
  return shenqi_msg_ != NULL ? *shenqi_msg_ : *default_instance_->shenqi_msg_;
}
inline ::pb::ShenQiMsg* MilitaryPowerPack::mutable_shenqi_msg() {
  set_has_shenqi_msg();
  if (shenqi_msg_ == NULL) shenqi_msg_ = new ::pb::ShenQiMsg;
  return shenqi_msg_;
}
inline ::pb::ShenQiMsg* MilitaryPowerPack::release_shenqi_msg() {
  clear_has_shenqi_msg();
  ::pb::ShenQiMsg* temp = shenqi_msg_;
  shenqi_msg_ = NULL;
  return temp;
}
inline void MilitaryPowerPack::set_allocated_shenqi_msg(::pb::ShenQiMsg* shenqi_msg) {
  delete shenqi_msg_;
  shenqi_msg_ = shenqi_msg;
  if (shenqi_msg) {
    set_has_shenqi_msg();
  } else {
    clear_has_shenqi_msg();
  }
}

// -------------------------------------------------------------------

// GS2C_MilitaryPowerRankList

// repeated .pb.MilitaryPowerPack military_power_list = 1;
inline int GS2C_MilitaryPowerRankList::military_power_list_size() const {
  return military_power_list_.size();
}
inline void GS2C_MilitaryPowerRankList::clear_military_power_list() {
  military_power_list_.Clear();
}
inline const ::pb::MilitaryPowerPack& GS2C_MilitaryPowerRankList::military_power_list(int index) const {
  return military_power_list_.Get(index);
}
inline ::pb::MilitaryPowerPack* GS2C_MilitaryPowerRankList::mutable_military_power_list(int index) {
  return military_power_list_.Mutable(index);
}
inline ::pb::MilitaryPowerPack* GS2C_MilitaryPowerRankList::add_military_power_list() {
  return military_power_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::MilitaryPowerPack >&
GS2C_MilitaryPowerRankList::military_power_list() const {
  return military_power_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::MilitaryPowerPack >*
GS2C_MilitaryPowerRankList::mutable_military_power_list() {
  return &military_power_list_;
}

// optional .pb.MilitaryPowerPack self_info = 2;
inline bool GS2C_MilitaryPowerRankList::has_self_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_MilitaryPowerRankList::set_has_self_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_MilitaryPowerRankList::clear_has_self_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_MilitaryPowerRankList::clear_self_info() {
  if (self_info_ != NULL) self_info_->::pb::MilitaryPowerPack::Clear();
  clear_has_self_info();
}
inline const ::pb::MilitaryPowerPack& GS2C_MilitaryPowerRankList::self_info() const {
  return self_info_ != NULL ? *self_info_ : *default_instance_->self_info_;
}
inline ::pb::MilitaryPowerPack* GS2C_MilitaryPowerRankList::mutable_self_info() {
  set_has_self_info();
  if (self_info_ == NULL) self_info_ = new ::pb::MilitaryPowerPack;
  return self_info_;
}
inline ::pb::MilitaryPowerPack* GS2C_MilitaryPowerRankList::release_self_info() {
  clear_has_self_info();
  ::pb::MilitaryPowerPack* temp = self_info_;
  self_info_ = NULL;
  return temp;
}
inline void GS2C_MilitaryPowerRankList::set_allocated_self_info(::pb::MilitaryPowerPack* self_info) {
  delete self_info_;
  self_info_ = self_info;
  if (self_info) {
    set_has_self_info();
  } else {
    clear_has_self_info();
  }
}

// -------------------------------------------------------------------

// GS2C_Achieve_Congratulate

// optional .pb.C2GS_Congratulate_Accept info = 1;
inline bool GS2C_Achieve_Congratulate::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Achieve_Congratulate::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Achieve_Congratulate::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Achieve_Congratulate::clear_info() {
  if (info_ != NULL) info_->::pb::C2GS_Congratulate_Accept::Clear();
  clear_has_info();
}
inline const ::pb::C2GS_Congratulate_Accept& GS2C_Achieve_Congratulate::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::pb::C2GS_Congratulate_Accept* GS2C_Achieve_Congratulate::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::pb::C2GS_Congratulate_Accept;
  return info_;
}
inline ::pb::C2GS_Congratulate_Accept* GS2C_Achieve_Congratulate::release_info() {
  clear_has_info();
  ::pb::C2GS_Congratulate_Accept* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GS2C_Achieve_Congratulate::set_allocated_info(::pb::C2GS_Congratulate_Accept* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// optional string to_player_name = 2;
inline bool GS2C_Achieve_Congratulate::has_to_player_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Achieve_Congratulate::set_has_to_player_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Achieve_Congratulate::clear_has_to_player_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Achieve_Congratulate::clear_to_player_name() {
  if (to_player_name_ != &::google::protobuf::internal::kEmptyString) {
    to_player_name_->clear();
  }
  clear_has_to_player_name();
}
inline const ::std::string& GS2C_Achieve_Congratulate::to_player_name() const {
  return *to_player_name_;
}
inline void GS2C_Achieve_Congratulate::set_to_player_name(const ::std::string& value) {
  set_has_to_player_name();
  if (to_player_name_ == &::google::protobuf::internal::kEmptyString) {
    to_player_name_ = new ::std::string;
  }
  to_player_name_->assign(value);
}
inline void GS2C_Achieve_Congratulate::set_to_player_name(const char* value) {
  set_has_to_player_name();
  if (to_player_name_ == &::google::protobuf::internal::kEmptyString) {
    to_player_name_ = new ::std::string;
  }
  to_player_name_->assign(value);
}
inline void GS2C_Achieve_Congratulate::set_to_player_name(const char* value, size_t size) {
  set_has_to_player_name();
  if (to_player_name_ == &::google::protobuf::internal::kEmptyString) {
    to_player_name_ = new ::std::string;
  }
  to_player_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GS2C_Achieve_Congratulate::mutable_to_player_name() {
  set_has_to_player_name();
  if (to_player_name_ == &::google::protobuf::internal::kEmptyString) {
    to_player_name_ = new ::std::string;
  }
  return to_player_name_;
}
inline ::std::string* GS2C_Achieve_Congratulate::release_to_player_name() {
  clear_has_to_player_name();
  if (to_player_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = to_player_name_;
    to_player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GS2C_Achieve_Congratulate::set_allocated_to_player_name(::std::string* to_player_name) {
  if (to_player_name_ != &::google::protobuf::internal::kEmptyString) {
    delete to_player_name_;
  }
  if (to_player_name) {
    set_has_to_player_name();
    to_player_name_ = to_player_name;
  } else {
    clear_has_to_player_name();
    to_player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2GS_Congratulate_Accept

// optional uint64 to_player_id = 1;
inline bool C2GS_Congratulate_Accept::has_to_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Congratulate_Accept::set_has_to_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Congratulate_Accept::clear_has_to_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Congratulate_Accept::clear_to_player_id() {
  to_player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_to_player_id();
}
inline ::google::protobuf::uint64 C2GS_Congratulate_Accept::to_player_id() const {
  return to_player_id_;
}
inline void C2GS_Congratulate_Accept::set_to_player_id(::google::protobuf::uint64 value) {
  set_has_to_player_id();
  to_player_id_ = value;
}

// optional uint32 rank = 2;
inline bool C2GS_Congratulate_Accept::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2GS_Congratulate_Accept::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2GS_Congratulate_Accept::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2GS_Congratulate_Accept::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 C2GS_Congratulate_Accept::rank() const {
  return rank_;
}
inline void C2GS_Congratulate_Accept::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// optional uint32 suit_id = 3;
inline bool C2GS_Congratulate_Accept::has_suit_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2GS_Congratulate_Accept::set_has_suit_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2GS_Congratulate_Accept::clear_has_suit_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2GS_Congratulate_Accept::clear_suit_id() {
  suit_id_ = 0u;
  clear_has_suit_id();
}
inline ::google::protobuf::uint32 C2GS_Congratulate_Accept::suit_id() const {
  return suit_id_;
}
inline void C2GS_Congratulate_Accept::set_suit_id(::google::protobuf::uint32 value) {
  set_has_suit_id();
  suit_id_ = value;
}

// optional uint32 congratulate_type = 4;
inline bool C2GS_Congratulate_Accept::has_congratulate_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2GS_Congratulate_Accept::set_has_congratulate_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2GS_Congratulate_Accept::clear_has_congratulate_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2GS_Congratulate_Accept::clear_congratulate_type() {
  congratulate_type_ = 0u;
  clear_has_congratulate_type();
}
inline ::google::protobuf::uint32 C2GS_Congratulate_Accept::congratulate_type() const {
  return congratulate_type_;
}
inline void C2GS_Congratulate_Accept::set_congratulate_type(::google::protobuf::uint32 value) {
  set_has_congratulate_type();
  congratulate_type_ = value;
}

// optional uint32 table_id = 5;
inline bool C2GS_Congratulate_Accept::has_table_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2GS_Congratulate_Accept::set_has_table_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2GS_Congratulate_Accept::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2GS_Congratulate_Accept::clear_table_id() {
  table_id_ = 0u;
  clear_has_table_id();
}
inline ::google::protobuf::uint32 C2GS_Congratulate_Accept::table_id() const {
  return table_id_;
}
inline void C2GS_Congratulate_Accept::set_table_id(::google::protobuf::uint32 value) {
  set_has_table_id();
  table_id_ = value;
}

// optional uint32 operate_type = 6;
inline bool C2GS_Congratulate_Accept::has_operate_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void C2GS_Congratulate_Accept::set_has_operate_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void C2GS_Congratulate_Accept::clear_has_operate_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void C2GS_Congratulate_Accept::clear_operate_type() {
  operate_type_ = 0u;
  clear_has_operate_type();
}
inline ::google::protobuf::uint32 C2GS_Congratulate_Accept::operate_type() const {
  return operate_type_;
}
inline void C2GS_Congratulate_Accept::set_operate_type(::google::protobuf::uint32 value) {
  set_has_operate_type();
  operate_type_ = value;
}

// optional uint64 active_time = 7;
inline bool C2GS_Congratulate_Accept::has_active_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void C2GS_Congratulate_Accept::set_has_active_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void C2GS_Congratulate_Accept::clear_has_active_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void C2GS_Congratulate_Accept::clear_active_time() {
  active_time_ = GOOGLE_ULONGLONG(0);
  clear_has_active_time();
}
inline ::google::protobuf::uint64 C2GS_Congratulate_Accept::active_time() const {
  return active_time_;
}
inline void C2GS_Congratulate_Accept::set_active_time(::google::protobuf::uint64 value) {
  set_has_active_time();
  active_time_ = value;
}

// -------------------------------------------------------------------

// GS2C_ListOfCurrentCanCongratulate

// optional .pb.GS2C_Achieve_Congratulate info = 1;
inline bool GS2C_ListOfCurrentCanCongratulate::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_ListOfCurrentCanCongratulate::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_ListOfCurrentCanCongratulate::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_ListOfCurrentCanCongratulate::clear_info() {
  if (info_ != NULL) info_->::pb::GS2C_Achieve_Congratulate::Clear();
  clear_has_info();
}
inline const ::pb::GS2C_Achieve_Congratulate& GS2C_ListOfCurrentCanCongratulate::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::pb::GS2C_Achieve_Congratulate* GS2C_ListOfCurrentCanCongratulate::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::pb::GS2C_Achieve_Congratulate;
  return info_;
}
inline ::pb::GS2C_Achieve_Congratulate* GS2C_ListOfCurrentCanCongratulate::release_info() {
  clear_has_info();
  ::pb::GS2C_Achieve_Congratulate* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GS2C_ListOfCurrentCanCongratulate::set_allocated_info(::pb::GS2C_Achieve_Congratulate* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// GS2C_Congratulate_Accept_Rsp

// repeated .pb.StReward reward = 1;
inline int GS2C_Congratulate_Accept_Rsp::reward_size() const {
  return reward_.size();
}
inline void GS2C_Congratulate_Accept_Rsp::clear_reward() {
  reward_.Clear();
}
inline const ::pb::StReward& GS2C_Congratulate_Accept_Rsp::reward(int index) const {
  return reward_.Get(index);
}
inline ::pb::StReward* GS2C_Congratulate_Accept_Rsp::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::pb::StReward* GS2C_Congratulate_Accept_Rsp::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
GS2C_Congratulate_Accept_Rsp::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
GS2C_Congratulate_Accept_Rsp::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// GxDB_CongratulateInfo

// optional uint32 table_id = 1;
inline bool GxDB_CongratulateInfo::has_table_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GxDB_CongratulateInfo::set_has_table_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GxDB_CongratulateInfo::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GxDB_CongratulateInfo::clear_table_id() {
  table_id_ = 0u;
  clear_has_table_id();
}
inline ::google::protobuf::uint32 GxDB_CongratulateInfo::table_id() const {
  return table_id_;
}
inline void GxDB_CongratulateInfo::set_table_id(::google::protobuf::uint32 value) {
  set_has_table_id();
  table_id_ = value;
}

// optional uint32 is_achieve = 2;
inline bool GxDB_CongratulateInfo::has_is_achieve() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GxDB_CongratulateInfo::set_has_is_achieve() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GxDB_CongratulateInfo::clear_has_is_achieve() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GxDB_CongratulateInfo::clear_is_achieve() {
  is_achieve_ = 0u;
  clear_has_is_achieve();
}
inline ::google::protobuf::uint32 GxDB_CongratulateInfo::is_achieve() const {
  return is_achieve_;
}
inline void GxDB_CongratulateInfo::set_is_achieve(::google::protobuf::uint32 value) {
  set_has_is_achieve();
  is_achieve_ = value;
}

// optional uint32 been_congratulated_count = 3;
inline bool GxDB_CongratulateInfo::has_been_congratulated_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GxDB_CongratulateInfo::set_has_been_congratulated_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GxDB_CongratulateInfo::clear_has_been_congratulated_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GxDB_CongratulateInfo::clear_been_congratulated_count() {
  been_congratulated_count_ = 0u;
  clear_has_been_congratulated_count();
}
inline ::google::protobuf::uint32 GxDB_CongratulateInfo::been_congratulated_count() const {
  return been_congratulated_count_;
}
inline void GxDB_CongratulateInfo::set_been_congratulated_count(::google::protobuf::uint32 value) {
  set_has_been_congratulated_count();
  been_congratulated_count_ = value;
}

// optional uint32 operate_type = 4;
inline bool GxDB_CongratulateInfo::has_operate_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GxDB_CongratulateInfo::set_has_operate_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GxDB_CongratulateInfo::clear_has_operate_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GxDB_CongratulateInfo::clear_operate_type() {
  operate_type_ = 0u;
  clear_has_operate_type();
}
inline ::google::protobuf::uint32 GxDB_CongratulateInfo::operate_type() const {
  return operate_type_;
}
inline void GxDB_CongratulateInfo::set_operate_type(::google::protobuf::uint32 value) {
  set_has_operate_type();
  operate_type_ = value;
}

// optional uint64 active_time = 5;
inline bool GxDB_CongratulateInfo::has_active_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GxDB_CongratulateInfo::set_has_active_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GxDB_CongratulateInfo::clear_has_active_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GxDB_CongratulateInfo::clear_active_time() {
  active_time_ = GOOGLE_ULONGLONG(0);
  clear_has_active_time();
}
inline ::google::protobuf::uint64 GxDB_CongratulateInfo::active_time() const {
  return active_time_;
}
inline void GxDB_CongratulateInfo::set_active_time(::google::protobuf::uint64 value) {
  set_has_active_time();
  active_time_ = value;
}

// -------------------------------------------------------------------

// GxDB_CongratulateRewardLog

// repeated .pb.GxDB_CongratulateInfo info = 1;
inline int GxDB_CongratulateRewardLog::info_size() const {
  return info_.size();
}
inline void GxDB_CongratulateRewardLog::clear_info() {
  info_.Clear();
}
inline const ::pb::GxDB_CongratulateInfo& GxDB_CongratulateRewardLog::info(int index) const {
  return info_.Get(index);
}
inline ::pb::GxDB_CongratulateInfo* GxDB_CongratulateRewardLog::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::pb::GxDB_CongratulateInfo* GxDB_CongratulateRewardLog::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_CongratulateInfo >&
GxDB_CongratulateRewardLog::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_CongratulateInfo >*
GxDB_CongratulateRewardLog::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// GxDB_CongratulateBeenCongratualted

// repeated .pb.C2GS_Congratulate_Accept info = 1;
inline int GxDB_CongratulateBeenCongratualted::info_size() const {
  return info_.size();
}
inline void GxDB_CongratulateBeenCongratualted::clear_info() {
  info_.Clear();
}
inline const ::pb::C2GS_Congratulate_Accept& GxDB_CongratulateBeenCongratualted::info(int index) const {
  return info_.Get(index);
}
inline ::pb::C2GS_Congratulate_Accept* GxDB_CongratulateBeenCongratualted::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::pb::C2GS_Congratulate_Accept* GxDB_CongratulateBeenCongratualted::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::C2GS_Congratulate_Accept >&
GxDB_CongratulateBeenCongratualted::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::C2GS_Congratulate_Accept >*
GxDB_CongratulateBeenCongratualted::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// GS2C_Lottery_Daily_Reward

// repeated uint32 table_id = 1;
inline int GS2C_Lottery_Daily_Reward::table_id_size() const {
  return table_id_.size();
}
inline void GS2C_Lottery_Daily_Reward::clear_table_id() {
  table_id_.Clear();
}
inline ::google::protobuf::uint32 GS2C_Lottery_Daily_Reward::table_id(int index) const {
  return table_id_.Get(index);
}
inline void GS2C_Lottery_Daily_Reward::set_table_id(int index, ::google::protobuf::uint32 value) {
  table_id_.Set(index, value);
}
inline void GS2C_Lottery_Daily_Reward::add_table_id(::google::protobuf::uint32 value) {
  table_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GS2C_Lottery_Daily_Reward::table_id() const {
  return table_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GS2C_Lottery_Daily_Reward::mutable_table_id() {
  return &table_id_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Rank_2eproto__INCLUDED
