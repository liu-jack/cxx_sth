// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Character.proto

#ifndef PROTOBUF_Character_2eproto__INCLUDED
#define PROTOBUF_Character_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommomDef.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Character_2eproto();
void protobuf_AssignDesc_Character_2eproto();
void protobuf_ShutdownFile_Character_2eproto();

class GS2C_CharacterCreate;
class GS2C_ChangeBattleCharacter;
class GS2C_BattleCharacter;
class GS2C_CharacterStorage;
class GS2C_CharacterUpdate;
class C2GS_UseItemsToTarget;
class C2GS_UpgradeQuality;
class GS2C_Combat_Show_Data;
class GS2C_Dinner_Data;
class GS2C_Dinner_Resp;

// ===================================================================

class GS2C_CharacterCreate : public ::google::protobuf::Message {
 public:
  GS2C_CharacterCreate();
  virtual ~GS2C_CharacterCreate();

  GS2C_CharacterCreate(const GS2C_CharacterCreate& from);

  inline GS2C_CharacterCreate& operator=(const GS2C_CharacterCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_CharacterCreate& default_instance();

  void Swap(GS2C_CharacterCreate* other);

  // implements Message ----------------------------------------------

  GS2C_CharacterCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_CharacterCreate& from);
  void MergeFrom(const GS2C_CharacterCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 protoID = 2;
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoIDFieldNumber = 2;
  inline ::google::protobuf::uint32 protoid() const;
  inline void set_protoid(::google::protobuf::uint32 value);

  // optional .pb.Int32List values = 3;
  inline bool has_values() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 3;
  inline const ::pb::Int32List& values() const;
  inline ::pb::Int32List* mutable_values();
  inline ::pb::Int32List* release_values();
  inline void set_allocated_values(::pb::Int32List* values);

  // optional bool isjuexing = 4;
  inline bool has_isjuexing() const;
  inline void clear_isjuexing();
  static const int kIsjuexingFieldNumber = 4;
  inline bool isjuexing() const;
  inline void set_isjuexing(bool value);

  // optional uint64 juxingtime = 5;
  inline bool has_juxingtime() const;
  inline void clear_juxingtime();
  static const int kJuxingtimeFieldNumber = 5;
  inline ::google::protobuf::uint64 juxingtime() const;
  inline void set_juxingtime(::google::protobuf::uint64 value);

  // optional uint32 quality = 6;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 6;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // optional uint32 cur_city_id = 7;
  inline bool has_cur_city_id() const;
  inline void clear_cur_city_id();
  static const int kCurCityIdFieldNumber = 7;
  inline ::google::protobuf::uint32 cur_city_id() const;
  inline void set_cur_city_id(::google::protobuf::uint32 value);

  // optional uint64 dungeon_owner = 8;
  inline bool has_dungeon_owner() const;
  inline void clear_dungeon_owner();
  static const int kDungeonOwnerFieldNumber = 8;
  inline ::google::protobuf::uint64 dungeon_owner() const;
  inline void set_dungeon_owner(::google::protobuf::uint64 value);

  // optional uint32 combatgroupID = 9;
  inline bool has_combatgroupid() const;
  inline void clear_combatgroupid();
  static const int kCombatgroupIDFieldNumber = 9;
  inline ::google::protobuf::uint32 combatgroupid() const;
  inline void set_combatgroupid(::google::protobuf::uint32 value);

  // optional bool isInCombat = 10;
  inline bool has_isincombat() const;
  inline void clear_isincombat();
  static const int kIsInCombatFieldNumber = 10;
  inline bool isincombat() const;
  inline void set_isincombat(bool value);

  // optional uint32 combatType = 11;
  inline bool has_combattype() const;
  inline void clear_combattype();
  static const int kCombatTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 combattype() const;
  inline void set_combattype(::google::protobuf::uint32 value);

  // optional bool is_fighting = 12;
  inline bool has_is_fighting() const;
  inline void clear_is_fighting();
  static const int kIsFightingFieldNumber = 12;
  inline bool is_fighting() const;
  inline void set_is_fighting(bool value);

  // optional bool isFakeChar = 13;
  inline bool has_isfakechar() const;
  inline void clear_isfakechar();
  static const int kIsFakeCharFieldNumber = 13;
  inline bool isfakechar() const;
  inline void set_isfakechar(bool value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_CharacterCreate)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_values();
  inline void clear_has_values();
  inline void set_has_isjuexing();
  inline void clear_has_isjuexing();
  inline void set_has_juxingtime();
  inline void clear_has_juxingtime();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_cur_city_id();
  inline void clear_has_cur_city_id();
  inline void set_has_dungeon_owner();
  inline void clear_has_dungeon_owner();
  inline void set_has_combatgroupid();
  inline void clear_has_combatgroupid();
  inline void set_has_isincombat();
  inline void clear_has_isincombat();
  inline void set_has_combattype();
  inline void clear_has_combattype();
  inline void set_has_is_fighting();
  inline void clear_has_is_fighting();
  inline void set_has_isfakechar();
  inline void clear_has_isfakechar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 protoid_;
  ::pb::Int32List* values_;
  ::google::protobuf::uint64 juxingtime_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 cur_city_id_;
  ::google::protobuf::uint64 dungeon_owner_;
  ::google::protobuf::uint32 combatgroupid_;
  bool isjuexing_;
  bool isincombat_;
  bool is_fighting_;
  bool isfakechar_;
  ::google::protobuf::uint32 combattype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_Character_2eproto();
  friend void protobuf_AssignDesc_Character_2eproto();
  friend void protobuf_ShutdownFile_Character_2eproto();

  void InitAsDefaultInstance();
  static GS2C_CharacterCreate* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_ChangeBattleCharacter : public ::google::protobuf::Message {
 public:
  GS2C_ChangeBattleCharacter();
  virtual ~GS2C_ChangeBattleCharacter();

  GS2C_ChangeBattleCharacter(const GS2C_ChangeBattleCharacter& from);

  inline GS2C_ChangeBattleCharacter& operator=(const GS2C_ChangeBattleCharacter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_ChangeBattleCharacter& default_instance();

  void Swap(GS2C_ChangeBattleCharacter* other);

  // implements Message ----------------------------------------------

  GS2C_ChangeBattleCharacter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_ChangeBattleCharacter& from);
  void MergeFrom(const GS2C_ChangeBattleCharacter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool is_zhaomu = 1;
  inline bool has_is_zhaomu() const;
  inline void clear_is_zhaomu();
  static const int kIsZhaomuFieldNumber = 1;
  inline bool is_zhaomu() const;
  inline void set_is_zhaomu(bool value);

  // optional uint32 card_id = 2;
  inline bool has_card_id() const;
  inline void clear_card_id();
  static const int kCardIdFieldNumber = 2;
  inline ::google::protobuf::uint32 card_id() const;
  inline void set_card_id(::google::protobuf::uint32 value);

  // optional .pb.Uint32List battle_array = 3;
  inline bool has_battle_array() const;
  inline void clear_battle_array();
  static const int kBattleArrayFieldNumber = 3;
  inline const ::pb::Uint32List& battle_array() const;
  inline ::pb::Uint32List* mutable_battle_array();
  inline ::pb::Uint32List* release_battle_array();
  inline void set_allocated_battle_array(::pb::Uint32List* battle_array);

  // optional bool crossret = 4;
  inline bool has_crossret() const;
  inline void clear_crossret();
  static const int kCrossretFieldNumber = 4;
  inline bool crossret() const;
  inline void set_crossret(bool value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_ChangeBattleCharacter)
 private:
  inline void set_has_is_zhaomu();
  inline void clear_has_is_zhaomu();
  inline void set_has_card_id();
  inline void clear_has_card_id();
  inline void set_has_battle_array();
  inline void clear_has_battle_array();
  inline void set_has_crossret();
  inline void clear_has_crossret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 card_id_;
  bool is_zhaomu_;
  bool crossret_;
  ::pb::Uint32List* battle_array_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Character_2eproto();
  friend void protobuf_AssignDesc_Character_2eproto();
  friend void protobuf_ShutdownFile_Character_2eproto();

  void InitAsDefaultInstance();
  static GS2C_ChangeBattleCharacter* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_BattleCharacter : public ::google::protobuf::Message {
 public:
  GS2C_BattleCharacter();
  virtual ~GS2C_BattleCharacter();

  GS2C_BattleCharacter(const GS2C_BattleCharacter& from);

  inline GS2C_BattleCharacter& operator=(const GS2C_BattleCharacter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_BattleCharacter& default_instance();

  void Swap(GS2C_BattleCharacter* other);

  // implements Message ----------------------------------------------

  GS2C_BattleCharacter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_BattleCharacter& from);
  void MergeFrom(const GS2C_BattleCharacter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.Uint32List battle_array = 1;
  inline bool has_battle_array() const;
  inline void clear_battle_array();
  static const int kBattleArrayFieldNumber = 1;
  inline const ::pb::Uint32List& battle_array() const;
  inline ::pb::Uint32List* mutable_battle_array();
  inline ::pb::Uint32List* release_battle_array();
  inline void set_allocated_battle_array(::pb::Uint32List* battle_array);

  // @@protoc_insertion_point(class_scope:pb.GS2C_BattleCharacter)
 private:
  inline void set_has_battle_array();
  inline void clear_has_battle_array();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::Uint32List* battle_array_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Character_2eproto();
  friend void protobuf_AssignDesc_Character_2eproto();
  friend void protobuf_ShutdownFile_Character_2eproto();

  void InitAsDefaultInstance();
  static GS2C_BattleCharacter* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_CharacterStorage : public ::google::protobuf::Message {
 public:
  GS2C_CharacterStorage();
  virtual ~GS2C_CharacterStorage();

  GS2C_CharacterStorage(const GS2C_CharacterStorage& from);

  inline GS2C_CharacterStorage& operator=(const GS2C_CharacterStorage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_CharacterStorage& default_instance();

  void Swap(GS2C_CharacterStorage* other);

  // implements Message ----------------------------------------------

  GS2C_CharacterStorage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_CharacterStorage& from);
  void MergeFrom(const GS2C_CharacterStorage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.GS2C_CharacterCreate characters = 1;
  inline int characters_size() const;
  inline void clear_characters();
  static const int kCharactersFieldNumber = 1;
  inline const ::pb::GS2C_CharacterCreate& characters(int index) const;
  inline ::pb::GS2C_CharacterCreate* mutable_characters(int index);
  inline ::pb::GS2C_CharacterCreate* add_characters();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::GS2C_CharacterCreate >&
      characters() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::GS2C_CharacterCreate >*
      mutable_characters();

  // optional .pb.GS2C_BattleCharacter battle_character = 2;
  inline bool has_battle_character() const;
  inline void clear_battle_character();
  static const int kBattleCharacterFieldNumber = 2;
  inline const ::pb::GS2C_BattleCharacter& battle_character() const;
  inline ::pb::GS2C_BattleCharacter* mutable_battle_character();
  inline ::pb::GS2C_BattleCharacter* release_battle_character();
  inline void set_allocated_battle_character(::pb::GS2C_BattleCharacter* battle_character);

  // @@protoc_insertion_point(class_scope:pb.GS2C_CharacterStorage)
 private:
  inline void set_has_battle_character();
  inline void clear_has_battle_character();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::GS2C_CharacterCreate > characters_;
  ::pb::GS2C_BattleCharacter* battle_character_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Character_2eproto();
  friend void protobuf_AssignDesc_Character_2eproto();
  friend void protobuf_ShutdownFile_Character_2eproto();

  void InitAsDefaultInstance();
  static GS2C_CharacterStorage* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_CharacterUpdate : public ::google::protobuf::Message {
 public:
  GS2C_CharacterUpdate();
  virtual ~GS2C_CharacterUpdate();

  GS2C_CharacterUpdate(const GS2C_CharacterUpdate& from);

  inline GS2C_CharacterUpdate& operator=(const GS2C_CharacterUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_CharacterUpdate& default_instance();

  void Swap(GS2C_CharacterUpdate* other);

  // implements Message ----------------------------------------------

  GS2C_CharacterUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_CharacterUpdate& from);
  void MergeFrom(const GS2C_CharacterUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .pb.Int32ListUpdate update_values = 2;
  inline bool has_update_values() const;
  inline void clear_update_values();
  static const int kUpdateValuesFieldNumber = 2;
  inline const ::pb::Int32ListUpdate& update_values() const;
  inline ::pb::Int32ListUpdate* mutable_update_values();
  inline ::pb::Int32ListUpdate* release_update_values();
  inline void set_allocated_update_values(::pb::Int32ListUpdate* update_values);

  // optional uint64 juxingtime = 3;
  inline bool has_juxingtime() const;
  inline void clear_juxingtime();
  static const int kJuxingtimeFieldNumber = 3;
  inline ::google::protobuf::uint64 juxingtime() const;
  inline void set_juxingtime(::google::protobuf::uint64 value);

  // optional uint32 cur_city_id = 4;
  inline bool has_cur_city_id() const;
  inline void clear_cur_city_id();
  static const int kCurCityIdFieldNumber = 4;
  inline ::google::protobuf::uint32 cur_city_id() const;
  inline void set_cur_city_id(::google::protobuf::uint32 value);

  // optional uint32 isInCombat = 5;
  inline bool has_isincombat() const;
  inline void clear_isincombat();
  static const int kIsInCombatFieldNumber = 5;
  inline ::google::protobuf::uint32 isincombat() const;
  inline void set_isincombat(::google::protobuf::uint32 value);

  // optional uint32 combatGroupId = 6;
  inline bool has_combatgroupid() const;
  inline void clear_combatgroupid();
  static const int kCombatGroupIdFieldNumber = 6;
  inline ::google::protobuf::uint32 combatgroupid() const;
  inline void set_combatgroupid(::google::protobuf::uint32 value);

  // optional bool isFakeChar = 7;
  inline bool has_isfakechar() const;
  inline void clear_isfakechar();
  static const int kIsFakeCharFieldNumber = 7;
  inline bool isfakechar() const;
  inline void set_isfakechar(bool value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_CharacterUpdate)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_update_values();
  inline void clear_has_update_values();
  inline void set_has_juxingtime();
  inline void clear_has_juxingtime();
  inline void set_has_cur_city_id();
  inline void clear_has_cur_city_id();
  inline void set_has_isincombat();
  inline void clear_has_isincombat();
  inline void set_has_combatgroupid();
  inline void clear_has_combatgroupid();
  inline void set_has_isfakechar();
  inline void clear_has_isfakechar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::Int32ListUpdate* update_values_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 cur_city_id_;
  ::google::protobuf::uint64 juxingtime_;
  ::google::protobuf::uint32 isincombat_;
  ::google::protobuf::uint32 combatgroupid_;
  bool isfakechar_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Character_2eproto();
  friend void protobuf_AssignDesc_Character_2eproto();
  friend void protobuf_ShutdownFile_Character_2eproto();

  void InitAsDefaultInstance();
  static GS2C_CharacterUpdate* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_UseItemsToTarget : public ::google::protobuf::Message {
 public:
  C2GS_UseItemsToTarget();
  virtual ~C2GS_UseItemsToTarget();

  C2GS_UseItemsToTarget(const C2GS_UseItemsToTarget& from);

  inline C2GS_UseItemsToTarget& operator=(const C2GS_UseItemsToTarget& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_UseItemsToTarget& default_instance();

  void Swap(C2GS_UseItemsToTarget* other);

  // implements Message ----------------------------------------------

  C2GS_UseItemsToTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_UseItemsToTarget& from);
  void MergeFrom(const C2GS_UseItemsToTarget& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 target_id = 1;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 1;
  inline ::google::protobuf::uint32 target_id() const;
  inline void set_target_id(::google::protobuf::uint32 value);

  // required uint32 NR_cards = 2;
  inline bool has_nr_cards() const;
  inline void clear_nr_cards();
  static const int kNRCardsFieldNumber = 2;
  inline ::google::protobuf::uint32 nr_cards() const;
  inline void set_nr_cards(::google::protobuf::uint32 value);

  // optional uint32 card_type = 3;
  inline bool has_card_type() const;
  inline void clear_card_type();
  static const int kCardTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 card_type() const;
  inline void set_card_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_UseItemsToTarget)
 private:
  inline void set_has_target_id();
  inline void clear_has_target_id();
  inline void set_has_nr_cards();
  inline void clear_has_nr_cards();
  inline void set_has_card_type();
  inline void clear_has_card_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 target_id_;
  ::google::protobuf::uint32 nr_cards_;
  ::google::protobuf::uint32 card_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Character_2eproto();
  friend void protobuf_AssignDesc_Character_2eproto();
  friend void protobuf_ShutdownFile_Character_2eproto();

  void InitAsDefaultInstance();
  static C2GS_UseItemsToTarget* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_UpgradeQuality : public ::google::protobuf::Message {
 public:
  C2GS_UpgradeQuality();
  virtual ~C2GS_UpgradeQuality();

  C2GS_UpgradeQuality(const C2GS_UpgradeQuality& from);

  inline C2GS_UpgradeQuality& operator=(const C2GS_UpgradeQuality& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_UpgradeQuality& default_instance();

  void Swap(C2GS_UpgradeQuality* other);

  // implements Message ----------------------------------------------

  C2GS_UpgradeQuality* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_UpgradeQuality& from);
  void MergeFrom(const C2GS_UpgradeQuality& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // optional .pb.Uint32List material_char_ids = 2;
  inline bool has_material_char_ids() const;
  inline void clear_material_char_ids();
  static const int kMaterialCharIdsFieldNumber = 2;
  inline const ::pb::Uint32List& material_char_ids() const;
  inline ::pb::Uint32List* mutable_material_char_ids();
  inline ::pb::Uint32List* release_material_char_ids();
  inline void set_allocated_material_char_ids(::pb::Uint32List* material_char_ids);

  // @@protoc_insertion_point(class_scope:pb.C2GS_UpgradeQuality)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_material_char_ids();
  inline void clear_has_material_char_ids();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::Uint32List* material_char_ids_;
  ::google::protobuf::uint32 char_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Character_2eproto();
  friend void protobuf_AssignDesc_Character_2eproto();
  friend void protobuf_ShutdownFile_Character_2eproto();

  void InitAsDefaultInstance();
  static C2GS_UpgradeQuality* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Combat_Show_Data : public ::google::protobuf::Message {
 public:
  GS2C_Combat_Show_Data();
  virtual ~GS2C_Combat_Show_Data();

  GS2C_Combat_Show_Data(const GS2C_Combat_Show_Data& from);

  inline GS2C_Combat_Show_Data& operator=(const GS2C_Combat_Show_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Combat_Show_Data& default_instance();

  void Swap(GS2C_Combat_Show_Data* other);

  // implements Message ----------------------------------------------

  GS2C_Combat_Show_Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Combat_Show_Data& from);
  void MergeFrom(const GS2C_Combat_Show_Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // optional uint32 soldierLv = 2;
  inline bool has_soldierlv() const;
  inline void clear_soldierlv();
  static const int kSoldierLvFieldNumber = 2;
  inline ::google::protobuf::uint32 soldierlv() const;
  inline void set_soldierlv(::google::protobuf::uint32 value);

  // repeated uint32 soldierCnt = 3;
  inline int soldiercnt_size() const;
  inline void clear_soldiercnt();
  static const int kSoldierCntFieldNumber = 3;
  inline ::google::protobuf::uint32 soldiercnt(int index) const;
  inline void set_soldiercnt(int index, ::google::protobuf::uint32 value);
  inline void add_soldiercnt(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      soldiercnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_soldiercnt();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Combat_Show_Data)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_soldierlv();
  inline void clear_has_soldierlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 char_id_;
  ::google::protobuf::uint32 soldierlv_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > soldiercnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Character_2eproto();
  friend void protobuf_AssignDesc_Character_2eproto();
  friend void protobuf_ShutdownFile_Character_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Combat_Show_Data* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Dinner_Data : public ::google::protobuf::Message {
 public:
  GS2C_Dinner_Data();
  virtual ~GS2C_Dinner_Data();

  GS2C_Dinner_Data(const GS2C_Dinner_Data& from);

  inline GS2C_Dinner_Data& operator=(const GS2C_Dinner_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Dinner_Data& default_instance();

  void Swap(GS2C_Dinner_Data* other);

  // implements Message ----------------------------------------------

  GS2C_Dinner_Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Dinner_Data& from);
  void MergeFrom(const GS2C_Dinner_Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dinner_num = 1;
  inline bool has_dinner_num() const;
  inline void clear_dinner_num();
  static const int kDinnerNumFieldNumber = 1;
  inline ::google::protobuf::uint32 dinner_num() const;
  inline void set_dinner_num(::google::protobuf::uint32 value);

  // required uint32 next_time = 2;
  inline bool has_next_time() const;
  inline void clear_next_time();
  static const int kNextTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 next_time() const;
  inline void set_next_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Dinner_Data)
 private:
  inline void set_has_dinner_num();
  inline void clear_has_dinner_num();
  inline void set_has_next_time();
  inline void clear_has_next_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dinner_num_;
  ::google::protobuf::uint32 next_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Character_2eproto();
  friend void protobuf_AssignDesc_Character_2eproto();
  friend void protobuf_ShutdownFile_Character_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Dinner_Data* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Dinner_Resp : public ::google::protobuf::Message {
 public:
  GS2C_Dinner_Resp();
  virtual ~GS2C_Dinner_Resp();

  GS2C_Dinner_Resp(const GS2C_Dinner_Resp& from);

  inline GS2C_Dinner_Resp& operator=(const GS2C_Dinner_Resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Dinner_Resp& default_instance();

  void Swap(GS2C_Dinner_Resp* other);

  // implements Message ----------------------------------------------

  GS2C_Dinner_Resp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Dinner_Resp& from);
  void MergeFrom(const GS2C_Dinner_Resp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Dinner_Resp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Character_2eproto();
  friend void protobuf_AssignDesc_Character_2eproto();
  friend void protobuf_ShutdownFile_Character_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Dinner_Resp* default_instance_;
};
// ===================================================================


// ===================================================================

// GS2C_CharacterCreate

// required uint32 id = 1;
inline bool GS2C_CharacterCreate::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_CharacterCreate::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_CharacterCreate::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_CharacterCreate::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GS2C_CharacterCreate::id() const {
  return id_;
}
inline void GS2C_CharacterCreate::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 protoID = 2;
inline bool GS2C_CharacterCreate::has_protoid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_CharacterCreate::set_has_protoid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_CharacterCreate::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_CharacterCreate::clear_protoid() {
  protoid_ = 0u;
  clear_has_protoid();
}
inline ::google::protobuf::uint32 GS2C_CharacterCreate::protoid() const {
  return protoid_;
}
inline void GS2C_CharacterCreate::set_protoid(::google::protobuf::uint32 value) {
  set_has_protoid();
  protoid_ = value;
}

// optional .pb.Int32List values = 3;
inline bool GS2C_CharacterCreate::has_values() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_CharacterCreate::set_has_values() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_CharacterCreate::clear_has_values() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_CharacterCreate::clear_values() {
  if (values_ != NULL) values_->::pb::Int32List::Clear();
  clear_has_values();
}
inline const ::pb::Int32List& GS2C_CharacterCreate::values() const {
  return values_ != NULL ? *values_ : *default_instance_->values_;
}
inline ::pb::Int32List* GS2C_CharacterCreate::mutable_values() {
  set_has_values();
  if (values_ == NULL) values_ = new ::pb::Int32List;
  return values_;
}
inline ::pb::Int32List* GS2C_CharacterCreate::release_values() {
  clear_has_values();
  ::pb::Int32List* temp = values_;
  values_ = NULL;
  return temp;
}
inline void GS2C_CharacterCreate::set_allocated_values(::pb::Int32List* values) {
  delete values_;
  values_ = values;
  if (values) {
    set_has_values();
  } else {
    clear_has_values();
  }
}

// optional bool isjuexing = 4;
inline bool GS2C_CharacterCreate::has_isjuexing() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GS2C_CharacterCreate::set_has_isjuexing() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GS2C_CharacterCreate::clear_has_isjuexing() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GS2C_CharacterCreate::clear_isjuexing() {
  isjuexing_ = false;
  clear_has_isjuexing();
}
inline bool GS2C_CharacterCreate::isjuexing() const {
  return isjuexing_;
}
inline void GS2C_CharacterCreate::set_isjuexing(bool value) {
  set_has_isjuexing();
  isjuexing_ = value;
}

// optional uint64 juxingtime = 5;
inline bool GS2C_CharacterCreate::has_juxingtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GS2C_CharacterCreate::set_has_juxingtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GS2C_CharacterCreate::clear_has_juxingtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GS2C_CharacterCreate::clear_juxingtime() {
  juxingtime_ = GOOGLE_ULONGLONG(0);
  clear_has_juxingtime();
}
inline ::google::protobuf::uint64 GS2C_CharacterCreate::juxingtime() const {
  return juxingtime_;
}
inline void GS2C_CharacterCreate::set_juxingtime(::google::protobuf::uint64 value) {
  set_has_juxingtime();
  juxingtime_ = value;
}

// optional uint32 quality = 6;
inline bool GS2C_CharacterCreate::has_quality() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GS2C_CharacterCreate::set_has_quality() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GS2C_CharacterCreate::clear_has_quality() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GS2C_CharacterCreate::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 GS2C_CharacterCreate::quality() const {
  return quality_;
}
inline void GS2C_CharacterCreate::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
}

// optional uint32 cur_city_id = 7;
inline bool GS2C_CharacterCreate::has_cur_city_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GS2C_CharacterCreate::set_has_cur_city_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GS2C_CharacterCreate::clear_has_cur_city_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GS2C_CharacterCreate::clear_cur_city_id() {
  cur_city_id_ = 0u;
  clear_has_cur_city_id();
}
inline ::google::protobuf::uint32 GS2C_CharacterCreate::cur_city_id() const {
  return cur_city_id_;
}
inline void GS2C_CharacterCreate::set_cur_city_id(::google::protobuf::uint32 value) {
  set_has_cur_city_id();
  cur_city_id_ = value;
}

// optional uint64 dungeon_owner = 8;
inline bool GS2C_CharacterCreate::has_dungeon_owner() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GS2C_CharacterCreate::set_has_dungeon_owner() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GS2C_CharacterCreate::clear_has_dungeon_owner() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GS2C_CharacterCreate::clear_dungeon_owner() {
  dungeon_owner_ = GOOGLE_ULONGLONG(0);
  clear_has_dungeon_owner();
}
inline ::google::protobuf::uint64 GS2C_CharacterCreate::dungeon_owner() const {
  return dungeon_owner_;
}
inline void GS2C_CharacterCreate::set_dungeon_owner(::google::protobuf::uint64 value) {
  set_has_dungeon_owner();
  dungeon_owner_ = value;
}

// optional uint32 combatgroupID = 9;
inline bool GS2C_CharacterCreate::has_combatgroupid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GS2C_CharacterCreate::set_has_combatgroupid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GS2C_CharacterCreate::clear_has_combatgroupid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GS2C_CharacterCreate::clear_combatgroupid() {
  combatgroupid_ = 0u;
  clear_has_combatgroupid();
}
inline ::google::protobuf::uint32 GS2C_CharacterCreate::combatgroupid() const {
  return combatgroupid_;
}
inline void GS2C_CharacterCreate::set_combatgroupid(::google::protobuf::uint32 value) {
  set_has_combatgroupid();
  combatgroupid_ = value;
}

// optional bool isInCombat = 10;
inline bool GS2C_CharacterCreate::has_isincombat() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GS2C_CharacterCreate::set_has_isincombat() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GS2C_CharacterCreate::clear_has_isincombat() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GS2C_CharacterCreate::clear_isincombat() {
  isincombat_ = false;
  clear_has_isincombat();
}
inline bool GS2C_CharacterCreate::isincombat() const {
  return isincombat_;
}
inline void GS2C_CharacterCreate::set_isincombat(bool value) {
  set_has_isincombat();
  isincombat_ = value;
}

// optional uint32 combatType = 11;
inline bool GS2C_CharacterCreate::has_combattype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GS2C_CharacterCreate::set_has_combattype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GS2C_CharacterCreate::clear_has_combattype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GS2C_CharacterCreate::clear_combattype() {
  combattype_ = 0u;
  clear_has_combattype();
}
inline ::google::protobuf::uint32 GS2C_CharacterCreate::combattype() const {
  return combattype_;
}
inline void GS2C_CharacterCreate::set_combattype(::google::protobuf::uint32 value) {
  set_has_combattype();
  combattype_ = value;
}

// optional bool is_fighting = 12;
inline bool GS2C_CharacterCreate::has_is_fighting() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GS2C_CharacterCreate::set_has_is_fighting() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GS2C_CharacterCreate::clear_has_is_fighting() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GS2C_CharacterCreate::clear_is_fighting() {
  is_fighting_ = false;
  clear_has_is_fighting();
}
inline bool GS2C_CharacterCreate::is_fighting() const {
  return is_fighting_;
}
inline void GS2C_CharacterCreate::set_is_fighting(bool value) {
  set_has_is_fighting();
  is_fighting_ = value;
}

// optional bool isFakeChar = 13;
inline bool GS2C_CharacterCreate::has_isfakechar() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GS2C_CharacterCreate::set_has_isfakechar() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GS2C_CharacterCreate::clear_has_isfakechar() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GS2C_CharacterCreate::clear_isfakechar() {
  isfakechar_ = false;
  clear_has_isfakechar();
}
inline bool GS2C_CharacterCreate::isfakechar() const {
  return isfakechar_;
}
inline void GS2C_CharacterCreate::set_isfakechar(bool value) {
  set_has_isfakechar();
  isfakechar_ = value;
}

// -------------------------------------------------------------------

// GS2C_ChangeBattleCharacter

// required bool is_zhaomu = 1;
inline bool GS2C_ChangeBattleCharacter::has_is_zhaomu() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_ChangeBattleCharacter::set_has_is_zhaomu() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_ChangeBattleCharacter::clear_has_is_zhaomu() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_ChangeBattleCharacter::clear_is_zhaomu() {
  is_zhaomu_ = false;
  clear_has_is_zhaomu();
}
inline bool GS2C_ChangeBattleCharacter::is_zhaomu() const {
  return is_zhaomu_;
}
inline void GS2C_ChangeBattleCharacter::set_is_zhaomu(bool value) {
  set_has_is_zhaomu();
  is_zhaomu_ = value;
}

// optional uint32 card_id = 2;
inline bool GS2C_ChangeBattleCharacter::has_card_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_ChangeBattleCharacter::set_has_card_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_ChangeBattleCharacter::clear_has_card_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_ChangeBattleCharacter::clear_card_id() {
  card_id_ = 0u;
  clear_has_card_id();
}
inline ::google::protobuf::uint32 GS2C_ChangeBattleCharacter::card_id() const {
  return card_id_;
}
inline void GS2C_ChangeBattleCharacter::set_card_id(::google::protobuf::uint32 value) {
  set_has_card_id();
  card_id_ = value;
}

// optional .pb.Uint32List battle_array = 3;
inline bool GS2C_ChangeBattleCharacter::has_battle_array() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_ChangeBattleCharacter::set_has_battle_array() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_ChangeBattleCharacter::clear_has_battle_array() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_ChangeBattleCharacter::clear_battle_array() {
  if (battle_array_ != NULL) battle_array_->::pb::Uint32List::Clear();
  clear_has_battle_array();
}
inline const ::pb::Uint32List& GS2C_ChangeBattleCharacter::battle_array() const {
  return battle_array_ != NULL ? *battle_array_ : *default_instance_->battle_array_;
}
inline ::pb::Uint32List* GS2C_ChangeBattleCharacter::mutable_battle_array() {
  set_has_battle_array();
  if (battle_array_ == NULL) battle_array_ = new ::pb::Uint32List;
  return battle_array_;
}
inline ::pb::Uint32List* GS2C_ChangeBattleCharacter::release_battle_array() {
  clear_has_battle_array();
  ::pb::Uint32List* temp = battle_array_;
  battle_array_ = NULL;
  return temp;
}
inline void GS2C_ChangeBattleCharacter::set_allocated_battle_array(::pb::Uint32List* battle_array) {
  delete battle_array_;
  battle_array_ = battle_array;
  if (battle_array) {
    set_has_battle_array();
  } else {
    clear_has_battle_array();
  }
}

// optional bool crossret = 4;
inline bool GS2C_ChangeBattleCharacter::has_crossret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GS2C_ChangeBattleCharacter::set_has_crossret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GS2C_ChangeBattleCharacter::clear_has_crossret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GS2C_ChangeBattleCharacter::clear_crossret() {
  crossret_ = false;
  clear_has_crossret();
}
inline bool GS2C_ChangeBattleCharacter::crossret() const {
  return crossret_;
}
inline void GS2C_ChangeBattleCharacter::set_crossret(bool value) {
  set_has_crossret();
  crossret_ = value;
}

// -------------------------------------------------------------------

// GS2C_BattleCharacter

// optional .pb.Uint32List battle_array = 1;
inline bool GS2C_BattleCharacter::has_battle_array() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_BattleCharacter::set_has_battle_array() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_BattleCharacter::clear_has_battle_array() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_BattleCharacter::clear_battle_array() {
  if (battle_array_ != NULL) battle_array_->::pb::Uint32List::Clear();
  clear_has_battle_array();
}
inline const ::pb::Uint32List& GS2C_BattleCharacter::battle_array() const {
  return battle_array_ != NULL ? *battle_array_ : *default_instance_->battle_array_;
}
inline ::pb::Uint32List* GS2C_BattleCharacter::mutable_battle_array() {
  set_has_battle_array();
  if (battle_array_ == NULL) battle_array_ = new ::pb::Uint32List;
  return battle_array_;
}
inline ::pb::Uint32List* GS2C_BattleCharacter::release_battle_array() {
  clear_has_battle_array();
  ::pb::Uint32List* temp = battle_array_;
  battle_array_ = NULL;
  return temp;
}
inline void GS2C_BattleCharacter::set_allocated_battle_array(::pb::Uint32List* battle_array) {
  delete battle_array_;
  battle_array_ = battle_array;
  if (battle_array) {
    set_has_battle_array();
  } else {
    clear_has_battle_array();
  }
}

// -------------------------------------------------------------------

// GS2C_CharacterStorage

// repeated .pb.GS2C_CharacterCreate characters = 1;
inline int GS2C_CharacterStorage::characters_size() const {
  return characters_.size();
}
inline void GS2C_CharacterStorage::clear_characters() {
  characters_.Clear();
}
inline const ::pb::GS2C_CharacterCreate& GS2C_CharacterStorage::characters(int index) const {
  return characters_.Get(index);
}
inline ::pb::GS2C_CharacterCreate* GS2C_CharacterStorage::mutable_characters(int index) {
  return characters_.Mutable(index);
}
inline ::pb::GS2C_CharacterCreate* GS2C_CharacterStorage::add_characters() {
  return characters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::GS2C_CharacterCreate >&
GS2C_CharacterStorage::characters() const {
  return characters_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::GS2C_CharacterCreate >*
GS2C_CharacterStorage::mutable_characters() {
  return &characters_;
}

// optional .pb.GS2C_BattleCharacter battle_character = 2;
inline bool GS2C_CharacterStorage::has_battle_character() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_CharacterStorage::set_has_battle_character() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_CharacterStorage::clear_has_battle_character() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_CharacterStorage::clear_battle_character() {
  if (battle_character_ != NULL) battle_character_->::pb::GS2C_BattleCharacter::Clear();
  clear_has_battle_character();
}
inline const ::pb::GS2C_BattleCharacter& GS2C_CharacterStorage::battle_character() const {
  return battle_character_ != NULL ? *battle_character_ : *default_instance_->battle_character_;
}
inline ::pb::GS2C_BattleCharacter* GS2C_CharacterStorage::mutable_battle_character() {
  set_has_battle_character();
  if (battle_character_ == NULL) battle_character_ = new ::pb::GS2C_BattleCharacter;
  return battle_character_;
}
inline ::pb::GS2C_BattleCharacter* GS2C_CharacterStorage::release_battle_character() {
  clear_has_battle_character();
  ::pb::GS2C_BattleCharacter* temp = battle_character_;
  battle_character_ = NULL;
  return temp;
}
inline void GS2C_CharacterStorage::set_allocated_battle_character(::pb::GS2C_BattleCharacter* battle_character) {
  delete battle_character_;
  battle_character_ = battle_character;
  if (battle_character) {
    set_has_battle_character();
  } else {
    clear_has_battle_character();
  }
}

// -------------------------------------------------------------------

// GS2C_CharacterUpdate

// required uint32 id = 1;
inline bool GS2C_CharacterUpdate::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_CharacterUpdate::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_CharacterUpdate::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_CharacterUpdate::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GS2C_CharacterUpdate::id() const {
  return id_;
}
inline void GS2C_CharacterUpdate::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional .pb.Int32ListUpdate update_values = 2;
inline bool GS2C_CharacterUpdate::has_update_values() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_CharacterUpdate::set_has_update_values() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_CharacterUpdate::clear_has_update_values() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_CharacterUpdate::clear_update_values() {
  if (update_values_ != NULL) update_values_->::pb::Int32ListUpdate::Clear();
  clear_has_update_values();
}
inline const ::pb::Int32ListUpdate& GS2C_CharacterUpdate::update_values() const {
  return update_values_ != NULL ? *update_values_ : *default_instance_->update_values_;
}
inline ::pb::Int32ListUpdate* GS2C_CharacterUpdate::mutable_update_values() {
  set_has_update_values();
  if (update_values_ == NULL) update_values_ = new ::pb::Int32ListUpdate;
  return update_values_;
}
inline ::pb::Int32ListUpdate* GS2C_CharacterUpdate::release_update_values() {
  clear_has_update_values();
  ::pb::Int32ListUpdate* temp = update_values_;
  update_values_ = NULL;
  return temp;
}
inline void GS2C_CharacterUpdate::set_allocated_update_values(::pb::Int32ListUpdate* update_values) {
  delete update_values_;
  update_values_ = update_values;
  if (update_values) {
    set_has_update_values();
  } else {
    clear_has_update_values();
  }
}

// optional uint64 juxingtime = 3;
inline bool GS2C_CharacterUpdate::has_juxingtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_CharacterUpdate::set_has_juxingtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_CharacterUpdate::clear_has_juxingtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_CharacterUpdate::clear_juxingtime() {
  juxingtime_ = GOOGLE_ULONGLONG(0);
  clear_has_juxingtime();
}
inline ::google::protobuf::uint64 GS2C_CharacterUpdate::juxingtime() const {
  return juxingtime_;
}
inline void GS2C_CharacterUpdate::set_juxingtime(::google::protobuf::uint64 value) {
  set_has_juxingtime();
  juxingtime_ = value;
}

// optional uint32 cur_city_id = 4;
inline bool GS2C_CharacterUpdate::has_cur_city_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GS2C_CharacterUpdate::set_has_cur_city_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GS2C_CharacterUpdate::clear_has_cur_city_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GS2C_CharacterUpdate::clear_cur_city_id() {
  cur_city_id_ = 0u;
  clear_has_cur_city_id();
}
inline ::google::protobuf::uint32 GS2C_CharacterUpdate::cur_city_id() const {
  return cur_city_id_;
}
inline void GS2C_CharacterUpdate::set_cur_city_id(::google::protobuf::uint32 value) {
  set_has_cur_city_id();
  cur_city_id_ = value;
}

// optional uint32 isInCombat = 5;
inline bool GS2C_CharacterUpdate::has_isincombat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GS2C_CharacterUpdate::set_has_isincombat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GS2C_CharacterUpdate::clear_has_isincombat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GS2C_CharacterUpdate::clear_isincombat() {
  isincombat_ = 0u;
  clear_has_isincombat();
}
inline ::google::protobuf::uint32 GS2C_CharacterUpdate::isincombat() const {
  return isincombat_;
}
inline void GS2C_CharacterUpdate::set_isincombat(::google::protobuf::uint32 value) {
  set_has_isincombat();
  isincombat_ = value;
}

// optional uint32 combatGroupId = 6;
inline bool GS2C_CharacterUpdate::has_combatgroupid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GS2C_CharacterUpdate::set_has_combatgroupid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GS2C_CharacterUpdate::clear_has_combatgroupid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GS2C_CharacterUpdate::clear_combatgroupid() {
  combatgroupid_ = 0u;
  clear_has_combatgroupid();
}
inline ::google::protobuf::uint32 GS2C_CharacterUpdate::combatgroupid() const {
  return combatgroupid_;
}
inline void GS2C_CharacterUpdate::set_combatgroupid(::google::protobuf::uint32 value) {
  set_has_combatgroupid();
  combatgroupid_ = value;
}

// optional bool isFakeChar = 7;
inline bool GS2C_CharacterUpdate::has_isfakechar() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GS2C_CharacterUpdate::set_has_isfakechar() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GS2C_CharacterUpdate::clear_has_isfakechar() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GS2C_CharacterUpdate::clear_isfakechar() {
  isfakechar_ = false;
  clear_has_isfakechar();
}
inline bool GS2C_CharacterUpdate::isfakechar() const {
  return isfakechar_;
}
inline void GS2C_CharacterUpdate::set_isfakechar(bool value) {
  set_has_isfakechar();
  isfakechar_ = value;
}

// -------------------------------------------------------------------

// C2GS_UseItemsToTarget

// required uint32 target_id = 1;
inline bool C2GS_UseItemsToTarget::has_target_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_UseItemsToTarget::set_has_target_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_UseItemsToTarget::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_UseItemsToTarget::clear_target_id() {
  target_id_ = 0u;
  clear_has_target_id();
}
inline ::google::protobuf::uint32 C2GS_UseItemsToTarget::target_id() const {
  return target_id_;
}
inline void C2GS_UseItemsToTarget::set_target_id(::google::protobuf::uint32 value) {
  set_has_target_id();
  target_id_ = value;
}

// required uint32 NR_cards = 2;
inline bool C2GS_UseItemsToTarget::has_nr_cards() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2GS_UseItemsToTarget::set_has_nr_cards() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2GS_UseItemsToTarget::clear_has_nr_cards() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2GS_UseItemsToTarget::clear_nr_cards() {
  nr_cards_ = 0u;
  clear_has_nr_cards();
}
inline ::google::protobuf::uint32 C2GS_UseItemsToTarget::nr_cards() const {
  return nr_cards_;
}
inline void C2GS_UseItemsToTarget::set_nr_cards(::google::protobuf::uint32 value) {
  set_has_nr_cards();
  nr_cards_ = value;
}

// optional uint32 card_type = 3;
inline bool C2GS_UseItemsToTarget::has_card_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2GS_UseItemsToTarget::set_has_card_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2GS_UseItemsToTarget::clear_has_card_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2GS_UseItemsToTarget::clear_card_type() {
  card_type_ = 0u;
  clear_has_card_type();
}
inline ::google::protobuf::uint32 C2GS_UseItemsToTarget::card_type() const {
  return card_type_;
}
inline void C2GS_UseItemsToTarget::set_card_type(::google::protobuf::uint32 value) {
  set_has_card_type();
  card_type_ = value;
}

// -------------------------------------------------------------------

// C2GS_UpgradeQuality

// required uint32 char_id = 1;
inline bool C2GS_UpgradeQuality::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_UpgradeQuality::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_UpgradeQuality::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_UpgradeQuality::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 C2GS_UpgradeQuality::char_id() const {
  return char_id_;
}
inline void C2GS_UpgradeQuality::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// optional .pb.Uint32List material_char_ids = 2;
inline bool C2GS_UpgradeQuality::has_material_char_ids() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2GS_UpgradeQuality::set_has_material_char_ids() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2GS_UpgradeQuality::clear_has_material_char_ids() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2GS_UpgradeQuality::clear_material_char_ids() {
  if (material_char_ids_ != NULL) material_char_ids_->::pb::Uint32List::Clear();
  clear_has_material_char_ids();
}
inline const ::pb::Uint32List& C2GS_UpgradeQuality::material_char_ids() const {
  return material_char_ids_ != NULL ? *material_char_ids_ : *default_instance_->material_char_ids_;
}
inline ::pb::Uint32List* C2GS_UpgradeQuality::mutable_material_char_ids() {
  set_has_material_char_ids();
  if (material_char_ids_ == NULL) material_char_ids_ = new ::pb::Uint32List;
  return material_char_ids_;
}
inline ::pb::Uint32List* C2GS_UpgradeQuality::release_material_char_ids() {
  clear_has_material_char_ids();
  ::pb::Uint32List* temp = material_char_ids_;
  material_char_ids_ = NULL;
  return temp;
}
inline void C2GS_UpgradeQuality::set_allocated_material_char_ids(::pb::Uint32List* material_char_ids) {
  delete material_char_ids_;
  material_char_ids_ = material_char_ids;
  if (material_char_ids) {
    set_has_material_char_ids();
  } else {
    clear_has_material_char_ids();
  }
}

// -------------------------------------------------------------------

// GS2C_Combat_Show_Data

// required uint32 char_id = 1;
inline bool GS2C_Combat_Show_Data::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Combat_Show_Data::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Combat_Show_Data::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Combat_Show_Data::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 GS2C_Combat_Show_Data::char_id() const {
  return char_id_;
}
inline void GS2C_Combat_Show_Data::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// optional uint32 soldierLv = 2;
inline bool GS2C_Combat_Show_Data::has_soldierlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Combat_Show_Data::set_has_soldierlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Combat_Show_Data::clear_has_soldierlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Combat_Show_Data::clear_soldierlv() {
  soldierlv_ = 0u;
  clear_has_soldierlv();
}
inline ::google::protobuf::uint32 GS2C_Combat_Show_Data::soldierlv() const {
  return soldierlv_;
}
inline void GS2C_Combat_Show_Data::set_soldierlv(::google::protobuf::uint32 value) {
  set_has_soldierlv();
  soldierlv_ = value;
}

// repeated uint32 soldierCnt = 3;
inline int GS2C_Combat_Show_Data::soldiercnt_size() const {
  return soldiercnt_.size();
}
inline void GS2C_Combat_Show_Data::clear_soldiercnt() {
  soldiercnt_.Clear();
}
inline ::google::protobuf::uint32 GS2C_Combat_Show_Data::soldiercnt(int index) const {
  return soldiercnt_.Get(index);
}
inline void GS2C_Combat_Show_Data::set_soldiercnt(int index, ::google::protobuf::uint32 value) {
  soldiercnt_.Set(index, value);
}
inline void GS2C_Combat_Show_Data::add_soldiercnt(::google::protobuf::uint32 value) {
  soldiercnt_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GS2C_Combat_Show_Data::soldiercnt() const {
  return soldiercnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GS2C_Combat_Show_Data::mutable_soldiercnt() {
  return &soldiercnt_;
}

// -------------------------------------------------------------------

// GS2C_Dinner_Data

// required uint32 dinner_num = 1;
inline bool GS2C_Dinner_Data::has_dinner_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Dinner_Data::set_has_dinner_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Dinner_Data::clear_has_dinner_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Dinner_Data::clear_dinner_num() {
  dinner_num_ = 0u;
  clear_has_dinner_num();
}
inline ::google::protobuf::uint32 GS2C_Dinner_Data::dinner_num() const {
  return dinner_num_;
}
inline void GS2C_Dinner_Data::set_dinner_num(::google::protobuf::uint32 value) {
  set_has_dinner_num();
  dinner_num_ = value;
}

// required uint32 next_time = 2;
inline bool GS2C_Dinner_Data::has_next_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Dinner_Data::set_has_next_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Dinner_Data::clear_has_next_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Dinner_Data::clear_next_time() {
  next_time_ = 0u;
  clear_has_next_time();
}
inline ::google::protobuf::uint32 GS2C_Dinner_Data::next_time() const {
  return next_time_;
}
inline void GS2C_Dinner_Data::set_next_time(::google::protobuf::uint32 value) {
  set_has_next_time();
  next_time_ = value;
}

// -------------------------------------------------------------------

// GS2C_Dinner_Resp

// required uint32 ret = 1;
inline bool GS2C_Dinner_Resp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Dinner_Resp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Dinner_Resp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Dinner_Resp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 GS2C_Dinner_Resp::ret() const {
  return ret_;
}
inline void GS2C_Dinner_Resp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Character_2eproto__INCLUDED
