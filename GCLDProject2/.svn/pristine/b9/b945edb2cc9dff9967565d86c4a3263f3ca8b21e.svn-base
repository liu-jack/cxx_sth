// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerOpcode.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ServerOpcode.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::EnumDescriptor* ServerOpcode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ServerOpcode_2eproto() {
  protobuf_AddDesc_ServerOpcode_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ServerOpcode.proto");
  GOOGLE_CHECK(file != NULL);
  ServerOpcode_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ServerOpcode_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_ServerOpcode_2eproto() {
}

void protobuf_AddDesc_ServerOpcode_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022ServerOpcode.proto\022\002pb*\356A\n\014ServerOpcod"
    "e\022\n\n\006S_PING\020\001\022\n\n\006S_PONG\020\002\022\021\n\rSG2C_REGIST"
    "ER\020\003\022\025\n\021SG2C_REGISTER_RET\020\004\022\024\n\020SG2C_UPDA"
    "TE_INFO\020\005\022\032\n\026SG2C_GET_LOGIN_SERVERS\020\006\022\036\n"
    "\032SG2C_GET_LOGIN_SERVERS_RET\020\007\022\032\n\026SG2C_GE"
    "T_CROSS_SERVERS\020\010\022\036\n\032SG2C_GET_CROSS_SERV"
    "ERS_RET\020\t\022\"\n\036SG2C_BROADCAST_TO_LOGIN_SER"
    "VER\020\n\022\035\n\031SG2C_GET_EVENT_LOG_SERVER\020\013\022!\n\035"
    "SG2C_GET_EVENT_LOG_SERVER_RET\020\014\022\033\n\027SG2C_"
    "EXCHANGE_GIFT_CODE\020\r\022\037\n\033SG2C_EXCHANGE_GI"
    "FT_CODE_RET\020\016\022\021\n\rSG2C_FEEDBACK\020\017\022\025\n\021SG2C"
    "_FEEDBACK_RET\020\020\022\021\n\rSG2L_REGISTER\020\021\022\025\n\021SG"
    "2L_REGISTER_RET\020\022\022\021\n\rSG2B_REGISTER\020\023\022\025\n\021"
    "SG2B_REGISTER_RET\020\024\022\021\n\rSG2R_REGISTER\020\025\022\025"
    "\n\021SG2R_REGISTER_RET\020\026\022\021\n\rSG2E_REGISTER\020\027"
    "\022\025\n\021SG2E_REGISTER_RET\020\030\022\016\n\nSG2E_EVENT\020\031\022"
    "\032\n\026SC2G_ADD_LOGIN_SERVERS\020\032\022\035\n\031SC2G_ADD_"
    "EVENT_LOG_SERVER\020\033\022\032\n\026SC2G_ADD_CROSS_SER"
    "VERS\020\034\022\034\n\030SC2G_WEB_GET_PLAYER_LIST\020\035\022 \n\034"
    "SC2G_WEB_GET_PLAYER_LIST_RET\020\036\022\020\n\014SC2G_W"
    "EB_PAY\020\037\022\024\n\020SC2G_WEB_PAY_RET\020 \022\032\n\026SC2G_S"
    "END_SERVERS_MAIL\020!\022\031\n\025SC2G_SEND_PLAYER_M"
    "AIL\020\"\022\035\n\031SC2G_SEND_PLAYER_MAIL_RET\020#\022\026\n\022"
    "SC2G_PLAYER_FORBID\020$\022\032\n\026SC2G_PLAYER_FORB"
    "ID_RET\020%\022\027\n\023SC2G_SET_PLAYER_VIP\020&\022\033\n\027SC2"
    "G_SET_PLAYER_VIP_RET\020\'\022\033\n\027SC2G_RECREATE_"
    "PAY_ORDER\020(\022\037\n\033SC2G_RECREATE_PAY_ORDER_R"
    "ET\020)\022\034\n\030SC2G_SEND_SERVERS_NOTICE\020*\022\037\n\033SC"
    "2G_SERVERS_HOT_RES_RELOAD\020+\022 \n\034SC2G_GET_"
    "ONLINE_PLAYER_COUNT\020,\022$\n SG2C_GET_ONLINE"
    "_PLAYER_COUNT_RET\020-\022\030\n\024SC2G_GET_SERVER_I"
    "NFO\020.\022\034\n\030SG2C_GET_SERVER_INFO_RET\020/\022$\n S"
    "C2G_SERVERS_HOT_PAY_ITEM_RELOAD\0200\022\035\n\031SC2"
    "G_SERVERS_SAVE_DBPROXY\0201\022\022\n\016SC2L_BROADCA"
    "ST\0202\022\035\n\031SC2L_ADD_EVENT_LOG_SERVER\0203\022\035\n\031S"
    "C2B_ADD_EVENT_LOG_SERVER\0204\022\035\n\031SC2R_ADD_E"
    "VENT_LOG_SERVER\0205\022\021\n\rSR2C_REGISTER\0206\022\025\n\021"
    "SR2C_REGISTER_RET\0207\022\031\n\025SR2C_GET_LOBBY_SE"
    "RVER\0208\022\035\n\031SR2C_GET_LOBBY_SERVER_RET\0209\022\035\n"
    "\031SR2C_GET_EVENT_LOG_SERVER\020:\022!\n\035SR2C_GET"
    "_EVENT_LOG_SERVER_RET\020;\022\031\n\025SR2C_GET_GAME"
    "_SERVERS\020<\022\035\n\031SR2C_GET_GAME_SERVERS_RET\020"
    "=\022\021\n\rSR2B_REGISTER\020>\022\025\n\021SR2B_REGISTER_RE"
    "T\020\?\022\021\n\rSR2G_REGISTER\020@\022\025\n\021SR2G_REGISTER_"
    "RET\020A\022\021\n\rSR2E_REGISTER\020B\022\025\n\021SR2E_REGISTE"
    "R_RET\020C\022\016\n\nSR2E_EVENT\020D\022\021\n\rSB2C_REGISTER"
    "\020E\022\025\n\021SB2C_REGISTER_RET\020F\022\035\n\031SB2C_GET_EV"
    "ENT_LOG_SERVER\020G\022!\n\035SB2C_GET_EVENT_LOG_S"
    "ERVER_RET\020H\022\021\n\rSB2E_REGISTER\020I\022\025\n\021SB2E_R"
    "EGISTER_RET\020J\022\016\n\nSB2E_EVENT\020K\022\021\n\rSL2E_RE"
    "GISTER\020L\022\025\n\021SL2E_REGISTER_RET\020M\022\016\n\nSL2E_"
    "EVENT\020N\022\021\n\rSL2C_REGISTER\020O\022\025\n\021SL2C_REGIS"
    "TER_RET\020P\022\035\n\031SL2C_GET_EVENT_LOG_SERVER\020Q"
    "\022!\n\035SL2C_GET_EVENT_LOG_SERVER_RET\020R\022\021\n\rS"
    "E2C_REGISTER\020S\022\025\n\021SE2C_REGISTER_RET\020T\022\021\n"
    "\rSP2G_MAIL_MSG\020U\022\031\n\025SD2G_LOADINGGUILDINF"
    "O\020V\022(\n$SD2G_GUILD_SEARCH_PLAYERSINFO_RES"
    "PON\020W\022\031\n\025SD2G_GET_SLOTITEMINFO\020X\022\036\n\032SD2G"
    "_GET_PLAYERINFO_RESPON\020Y\022\036\n\032SD2G_IS_PLAY"
    "EREXIST_RESPON\020Z\022\027\n\023SD2G_LOADFRIENDINFO\020"
    "[\022)\n%SD2G_SOCIAL_SEARCH_PLAYERSINFO_RESP"
    "ON\020\\\022#\n\037SD2G_GET_PLAYER_APPEND_DATA_RET\020"
    "]\022\037\n\033SD2G_PLAYER_CACHE_DATA_SYNC\020^\022!\n\035SD"
    "2G_PLAYER_CACHE_REMOVE_SYNC\020_\022\021\n\rSG2D_RE"
    "GISTER\020x\022\025\n\021SD2G_REGISTER_RET\020y\022\032\n\026SG2D_"
    "SAVE_PLAYER_CACHE\020z\022\037\n\033SG2D_GET_PLAYER_A"
    "PPEND_DATA\020{\022\036\n\032SG2D_BROADCAST_OFFLINE_M"
    "SG\020|\022\036\n\032SD2G_BROADCAST_OFFLINE_RET\020}\022\030\n\024"
    "SG2D_GET_PLAYER_LIST\020~\022\034\n\030SD2G_GET_PLAYE"
    "R_LIST_RET\020\177\022\027\n\022SG2D_CREATE_PLAYER\020\200\001\022\033\n"
    "\026SD2G_CREATE_PLAYER_RET\020\201\001\022\027\n\022SG2D_SELSE"
    "C_PALYER\020\202\001\022\033\n\026SD2G_SELSEC_PALYER_RET\020\203\001"
    "\022\030\n\023SG2D_PLAYER_OFFLINE\020\204\001\022\034\n\027SG2D_CREAT"
    "E_PLAYER_DATA\020\205\001\022 \n\033SG2D_UPDATA_STAGELEV"
    "EL_INFO\020\206\001\022$\n\037SD2G_UPDATA_STAGELEVEL_INF"
    "O_RET\020\207\001\022\032\n\025SG2D_GET_SLOTITEMINFO\020\210\001\022\030\n\023"
    "SG2D_GET_PLAYERINFO\020\211\001\022\030\n\023SG2D_IS_PLAYER"
    "EXIST\020\212\001\022\033\n\026SG2D_UPDATE_GUILD_DATA\020\213\001\022\"\n"
    "\035SG2D_UPDATE_GUILD_MEMBER_DATA\020\214\001\022\"\n\035SG2"
    "D_GUILD_SEARCH_PLAYERSINFO\020\215\001\022\025\n\020SG2D_CR"
    "EAT_GUILD\020\216\001\022\031\n\024SD2G_CREAT_GUILD_RET\020\217\001\022"
    "\034\n\027SG2D_UPDATE_FRIEND_DATA\020\220\001\022#\n\036SG2D_SO"
    "CIAL_SEARCH_PLAYERSINFO\020\221\001\022\030\n\023SG2D_FRIEN"
    "D_OPERATE\020\222\001\022\034\n\027SD2G_FRIEND_OPERATE_RET\020"
    "\223\001\022\033\n\026SG2D_SAVE_MALL_PROMOTE\020\224\001\022#\n\036SG2D_"
    "CHECK_MAIL_RECIVERS_EXIST\020\225\001\022\'\n\"SD2G_CHE"
    "CK_MAIL_RECIVERS_EXIST_RET\020\226\001\022\032\n\025SG2D_MA"
    "IL_RECEVE_MAIL\020\227\001\022\035\n\030SG2D_MAIL_UPDATEMAI"
    "LINFO\020\230\001\022!\n\034SD2G_MAIL_UPDATEMAILINFO_RET"
    "\020\231\001\022\024\n\017SG2D_UPDATE_BAG\020\232\001\022\035\n\030SG2D_UPDATE"
    "_PLAYER_VALUE\020\233\001\022\025\n\020SG2D_CREATE_CHAR\020\234\001\022"
    "\025\n\020SG2D_UPDATE_CHAR\020\235\001\022\026\n\021SG2D_DELETE_CH"
    "ARS\020\236\001\022\035\n\030SG2D_UPDATE_BATTLE_CHARS\020\237\001\022\026\n"
    "\021SG2D_UPDATE_QUEST\020\240\001\022\030\n\023SG2D_COMPLETE_Q"
    "UEST\020\241\001\022!\n\034SG2D_UPDATE_BEHAVIOR_COUNTER\020"
    "\242\001\022%\n SG2D_UPDATE_SELL_RANDOM_PROGRAME\020\243"
    "\001\022\"\n\035SG2D_UPDATE_SELL_PROGRAM_INFO\020\244\001\022\036\n"
    "\031SG2D_UPDATE_PLAYER_STRING\020\245\001\022\034\n\027SG2D_UP"
    "DATE_LOOT_RECORD\020\246\001\022\037\n\032SG2D_UPDATE_LOTTE"
    "RY_RECORD\020\247\001\022\035\n\030SG2D_WEB_GET_PLAYER_LIST"
    "\020\250\001\022!\n\034SD2G_WEB_GET_PLAYER_LIST_RET\020\251\001\022#"
    "\n\036SG2D_PVP_CREATE_VIRTUAL_PLAYER\020\252\001\022\'\n\"S"
    "D2G_PVP_CREATE_VIRTUAL_PLAYER_RET\020\253\001\022\031\n\024"
    "SG2D_PVP_ENTRY_ARENA\020\254\001\022\035\n\030SD2G_PVP_ENTR"
    "Y_ARENA_RET\020\255\001\022\037\n\032SG2D_PVP_ARENA_PLAYER_"
    "INFO\020\256\001\022#\n\036SD2G_PVP_ARENA_PLAYER_INFO_RE"
    "T\020\257\001\022%\n SG2D_PVP_ARENA_FIGHT_RESULT_INFO"
    "\020\260\001\022)\n$SD2G_PVP_ARENA_FIGHT_RESULT_INFO_"
    "RET\020\261\001\022%\n SG2D_PVP_ARENA_FIGLE_RECORD_IN"
    "FO\020\262\001\022)\n$SD2G_PVP_ARENA_FIGLE_RECORD_INF"
    "O_RET\020\263\001\022\034\n\027SG2D_PLAYER_CHANGE_NAME\020\264\001\022 "
    "\n\033SD2G_PLAYER_CHANGE_NAME_RET\020\265\001\022$\n\037SG2D"
    "_PLAYER_SET_NAME_AND_HEADID\020\266\001\022(\n#SD2G_P"
    "LAYER_SET_NAME_AND_HEADID_RET\020\267\001\022\034\n\027SG2D"
    "_SERVER_GOBAL_VALUE\020\270\001\022 \n\033SD2G_SERVER_GO"
    "BAL_VALUE_RET\020\271\001\022\"\n\035SG2D_PVP_GET_REWARD_"
    "RANK_LIST\020\272\001\022&\n!SD2G_PVP_GET_REWARD_RANK"
    "_LIST_RET\020\273\001\022 \n\033SG2D_PVP_ARENA_RANKING_L"
    "IST\020\274\001\022$\n\037SD2G_PVP_ARENA_RANKING_LIST_RE"
    "T\020\275\001\022\036\n\031SG2D_UPDATE_ENDLESS_LEVEL\020\276\001\022\021\n\014"
    "SG2D_WEB_PAY\020\277\001\022\025\n\020SG2D_WEB_PAY_RET\020\300\001\022\036"
    "\n\031SG2D_UPDATE_MODULE_RECORD\020\301\001\022 \n\033SG2D_U"
    "PDATE_BUILDING_RECORD\020\302\001\022\031\n\024SG2D_UNLOCK_"
    "FORBIDEN\020\303\001\022\035\n\030SD2G_UNLOCK_FORBIDEN_RET\020"
    "\304\001\022\026\n\021SG2D_SAVE_DBPROXY\020\305\001\022\031\n\024SW2C_GET_S"
    "ERVER_LIST\020\306\001\022\035\n\030SW2C_GET_SERVER_LIST_RE"
    "T\020\307\001\022\031\n\024SW2C_GET_PLAYER_LIST\020\310\001\022\035\n\030SW2C_"
    "GET_PLAYER_LIST_RET\020\311\001\022\r\n\010SW2C_PAY\020\312\001\022\021\n"
    "\014SW2C_PAY_RET\020\313\001\022\033\n\026SW2C_SEND_SERVERS_MA"
    "IL\020\314\001\022\037\n\032SW2C_SEND_SERVERS_MAIL_RET\020\315\001\022\032"
    "\n\025SW2C_SEND_PLAYER_MAIL\020\316\001\022\036\n\031SW2C_SEND_"
    "PLAYER_MAIL_RET\020\317\001\022\027\n\022SW2C_PLAYER_FORBID"
    "\020\320\001\022\033\n\026SW2C_PLAYER_FORBID_RET\020\321\001\022\030\n\023SW2C"
    "_SET_PLAYER_VIP\020\322\001\022\034\n\027SW2C_SET_PLAYER_VI"
    "P_RET\020\323\001\022\034\n\027SW2C_RECREATE_PAY_ORDER\020\324\001\022 "
    "\n\033SW2C_RECREATE_PAY_ORDER_RET\020\325\001\022\035\n\030SW2C"
    "_SEND_SERVERS_NOTICE\020\326\001\022!\n\034SW2C_SEND_SER"
    "VERS_NOTICE_RET\020\327\001\022 \n\033SW2C_SERVERS_HOT_R"
    "ES_RELOAD\020\330\001\022$\n\037SW2C_SERVERS_HOT_RES_REL"
    "OAD_RET\020\331\001\022\032\n\025SW2C_CREATE_GIFT_CODE\020\332\001\022\036"
    "\n\031SW2C_CREATE_GIFT_CODE_RET\020\333\001\022!\n\034SW2C_G"
    "ET_ONLINE_PLAYER_COUNT\020\334\001\022%\n SW2C_GET_ON"
    "LINE_PLAYER_COUNT_RET\020\335\001\022\031\n\024SW2C_GET_SER"
    "VER_INFO\020\336\001\022\035\n\030SW2C_GET_SERVER_INFO_RET\020"
    "\337\001\022\030\n\023SG2D_PVP_MARK_FIGHT\020\340\001\022\034\n\027SG2D_PVP"
    "_MARK_FIGHT_RET\020\341\001\022\033\n\026SG2D_UPDATA_FUBEN_"
    "BASE\020\342\001\022\037\n\032SG2D_UPDATA_FUBEN_RESOURCE\020\343\001"
    "\022 \n\033SG2D_UPDATA_FUBEN_PASSSTAGE\020\344\001\022\026\n\021SG"
    "2D_COUNTRY_BASE\020\345\001\022\032\n\025SG2D_COUNTRY_ADD_C"
    "ITY\020\346\001\022\032\n\025SG2D_COUNTRY_DEL_CITY\020\347\001\022\032\n\025SG"
    "2D_COUNTRY_ALL_INFO\020\350\001\022\032\n\025SD2G_COUNTRY_A"
    "LL_INFO\020\351\001\022$\n\037SG2D_COUNTRY_LEVLE_UP_TASK"
    "_RANK\020\352\001\022$\n\037SD2G_COUNTRY_LEVLE_UP_TASK_R"
    "ANK\020\353\001\022\030\n\023SG2D_MARKET_COLLECT\020\354\001\022\026\n\021SG2D"
    "_MARKET_BLACK\020\355\001\022\024\n\017SG2D_MARKET_BUY\020\356\001\022\030"
    "\n\023SG2D_MARKET_MYSTERY\020\357\001\022\030\n\023SG2D_ALTAR_A"
    "LL_INFO\020\360\001\022\033\n\026SG2D_DUNGEON_BASE_INFO\020\361\001\022"
    "\032\n\025SG2D_DUNGEON_ADD_HERO\020\362\001\022\032\n\025SG2D_DUNG"
    "EON_DEL_HERO\020\363\001\022\031\n\024SG2D_BAO_QI_ALL_INFO\020"
    "\364\001\022\027\n\022SG2D_UPDATE_SMITHY\020\365\001\022\031\n\024SG2D_PALA"
    "CE_ALL_INFO\020\366\001\022\031\n\024SD2G_PALACE_ALL_INFO\020\367"
    "\001\022!\n\034SG2D_PALACE_ACHIEVEMENT_INFO\020\370\001\022!\n\034"
    "SD2G_PALACE_ACHIEVEMENT_INFO\020\371\001\022\030\n\023SG2D_"
    "MAP_LOGIC_BASE\020\372\001\022%\n SG2D_MAP_LOGIC_UPDA"
    "TE_CITY_EVENT\020\373\001\022\025\n\020SG2D_MAP_FOG_REC\020\374\001\022"
    "!\n\034SG2D_UPDATA_TECHNOLOGY_STUDY\020\375\001\022\"\n\035SG"
    "2R_REGIST_CROSS_PLAYER_INFO\020\376\001\022\032\n\025SB2G_G"
    "ET_COUNTRY_INFO\020\377\001\022\036\n\031SB2G_GET_COUNTRY_I"
    "NFO_RET\020\200\002\022\037\n\032SB2G_UPDATE_CROSS_WAR_INFO"
    "\020\201\002\022\030\n\023SG2D_CRUSADE_UPDATE\020\202\002\022\034\n\027SG2D_DA"
    "ILY_QUEST_UPDATE\020\203\002\022\036\n\031SG2D_GROW_UP_QUES"
    "T_UPDATE\020\204\002\022$\n\037SG2D_GROW_UP_QUEST_GROUP_"
    "UPDATE\020\205\002\022\030\n\023SG2D_SIGN_UP_UPDATE\020\206\002\0223\n.S"
    "G2D_ACTIVITY_PASS_STAGE_REWARD_DIAMOND_U"
    "PDATE\020\207\002\022\"\n\035SG2D_ACTIVITY_STAR_BOX_UPDAT"
    "E\020\210\002\022\"\n\035SG2D_ACTIVITY_STAR_BOX_DELETE\020\211\002"
    "\022\036\n\031SC2G_UPDATE_ACTVIITY_DATA\020\212\002\022\"\n\035SC2G"
    "_UPDATE_ACTVIITY_DATA_RET\020\213\002\022\036\n\031SG2D_UPD"
    "ATE_ACTIIVTY_DATA\020\214\002\022\"\n\035SG2D_UPDATE_ACTI"
    "VITY_DATA_RET\020\215\002\022\036\n\031SD2G_UPDATE_ACTIVITY"
    "_DATA\020\216\002\022\"\n\035SD2G_UPDATE_ACTIVITY_DATA_RE"
    "T\020\217\002\022\034\n\027SD2G_LOAD_ACTIIVTY_INFO\020\220\002\022 \n\033SD"
    "2G_LOAD_ACTIIVTY_INFO_RET\020\221\002\022#\n\036SG2D_GRO"
    "W_UP_QUEST_DELETE_INFO\020\222\002\022*\n%SG2D_PASS_S"
    "TAGE_REWARD_DIAMOND_DELETE\020\223\002\022\030\n\023SG2D_ZH"
    "ENGWU_UPDATE\020\224\002\022(\n#SG2D_ACTIVITY_GENERAL"
    "_REWARD_UPDATE\020\225\002\022(\n#SG2D_ACTIVITY_GENER"
    "AL_REWARD_DELETE\020\226\002\022(\n#SG2D_WORLD_FIGHT_"
    "ACHIEVEMENT_UPDATE\020\227\002\022\030\n\023SG2D_SELECT_COU"
    "NTRY\020\230\002\022\034\n\027SD2G_SELECT_COUNTRY_RET\020\231\002\022\035\n"
    "\030SD2G_PLAYER_HAS_ALL_SYNC\020\232\002\022!\n\034SG2D_SEI"
    "GE_FORCE_DATA_UPDATE\020\233\002\022\037\n\032SG2D_SAVE_ALL"
    "_PLAYER_CACHE\020\234\002\022%\n SG2D_CONTINUE_OCCUPY"
    "_CITY_UPDATE\020\235\002\022&\n!SD2G_ACTIVITY_COUNTRY"
    "_OCCUPY_CITY\020\236\002\022-\n(SG2D_ACTIVITY_COUNTRY"
    "_OCCUPY_CITY_UPDATE\020\237\002\022\035\n\030SG2D_CONGRATUL"
    "ATE_UPDATE\020\240\002\022&\n!SG2D_CONGRATULATE_BEEN_"
    "CON_UPTATE\020\241\002\022\032\n\025SL2S_NOTICE_WAR_STATE\020\254"
    "\002\022\032\n\025SL2G_NOTICE_WAR_START\020\255\002\022\032\n\025SL2R_NO"
    "TICE_WAR_START\020\256\002\022\036\n\031SL2G_COLLECT_COUNTR"
    "Y_INFO\020\257\002\022\"\n\035SG2L_COLLECT_COUNTRY_INFO_R"
    "ET\020\260\002\022\035\n\030SL2G_DEVIDE_CROSS_SERVER\020\261\002\022\035\n\030"
    "SL2R_DEVIDE_CROSS_SERVER\020\262\002\022\035\n\030SG2R_UPDA"
    "TE_PLAYER_VALUE\020\263\002\022\033\n\026SR2G_QUIT_CROSS_SE"
    "RVER\020\264\002\022\025\n\020SG2R_OFFICE_INFO\020\265\002\022\036\n\031SR2G_C"
    "ross_Result_Country\020\266\002\022\"\n\035SG2R_UPDATE_PL"
    "AYER_CHAR_VALUE\020\267\002\022\034\n\027SR2G_NOTICE_CLOSE_"
    "CROSS\020\270\002\022\027\n\022SR2G_Change_Awards\020\271\002\022\037\n\032SG2"
    "R_Check_Can_Change_Hero\020\272\002\022\030\n\023SG2B_Ask_C"
    "ross_Info\020\273\002\022\034\n\027SB2G_Ask_Cross_Info_Ret\020"
    "\274\002\022\033\n\026SR2G_Award_Take_Player\020\275\002\022\030\n\023SERVE"
    "R_OPCODE_COUNT\020\276\002", 8457);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerOpcode.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ServerOpcode_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ServerOpcode_2eproto {
  StaticDescriptorInitializer_ServerOpcode_2eproto() {
    protobuf_AddDesc_ServerOpcode_2eproto();
  }
} static_descriptor_initializer_ServerOpcode_2eproto_;
const ::google::protobuf::EnumDescriptor* ServerOpcode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerOpcode_descriptor_;
}
bool ServerOpcode_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 197:
    case 198:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 219:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 239:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 248:
    case 249:
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
    case 256:
    case 257:
    case 258:
    case 259:
    case 260:
    case 261:
    case 262:
    case 263:
    case 264:
    case 265:
    case 266:
    case 267:
    case 268:
    case 269:
    case 270:
    case 271:
    case 272:
    case 273:
    case 274:
    case 275:
    case 276:
    case 277:
    case 278:
    case 279:
    case 280:
    case 281:
    case 282:
    case 283:
    case 284:
    case 285:
    case 286:
    case 287:
    case 288:
    case 289:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 308:
    case 309:
    case 310:
    case 311:
    case 312:
    case 313:
    case 314:
    case 315:
    case 316:
    case 317:
    case 318:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
