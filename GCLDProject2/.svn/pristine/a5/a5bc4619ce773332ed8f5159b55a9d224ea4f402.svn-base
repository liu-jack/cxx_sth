// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Fuben.proto

#ifndef PROTOBUF_Fuben_2eproto__INCLUDED
#define PROTOBUF_Fuben_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommomDef.pb.h"
#include "Combat.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Fuben_2eproto();
void protobuf_AssignDesc_Fuben_2eproto();
void protobuf_ShutdownFile_Fuben_2eproto();

class GS2C_Resource_Stage;
class Stage_Info;
class BranchFubenInfo;
class C2GS_take_branch_fuben_star;
class GS2C_take_branch_fuben_star_rsp;
class HideFubenInfo;
class GS2C_Fuben_All_Info;
class C2GS_Enter_Stage;
class GS2C_Pass_Stage;
class C2GS_TakeResource;
class GS2C_TakeResource;
class C2GS_ResetResource;
class GS2C_ResetResource;
class C2GS_Select_Crusade;
class GS2C_Select_Ret;
class GS2C_Crusade_Reset;
class C2GS_Fog_Reward;
class GS2C_Fog_Reward;
class GS2C_Open_Fog_Info;
class Seige_Force_info;
class GS2C_Seige_Force_All_Info;
class C2GS_Seige_Force_Level_Up;
class GS2C_Seige_Force_Level_Up_Rsp;
class C2GS_Seige_Force_Buy_Army;
class GS2C_Seige_Force_Buy_Army_Rsp;
class C2GS_Seige_Force_Use_Army;
class GS2C_Seige_Force_Use_Army_Rsp;
class GxDB_Seige_Force_Info_Pack;
class C2GS_Take_Month_Card_Reward;
class GS2C_Take_Month_Card_Reward_Rsp;
class BaseContinueMsg;
class GS2C_ContinueOccupyCity;
class GxDB_ContinueOccupyCityInfo;
class GS2C_ContinueOccupyCitySuccess;

enum RR_T_RESULT {
  RR_T_RESULT_SUCCESS = 1,
  RR_T_RESULT_FAILED = 2,
  RR_T_RESULT_OTHER_REASON = 3,
  RR_T_RESULT_HAS_TAKE = 4
};
bool RR_T_RESULT_IsValid(int value);
const RR_T_RESULT RR_T_RESULT_MIN = RR_T_RESULT_SUCCESS;
const RR_T_RESULT RR_T_RESULT_MAX = RR_T_RESULT_HAS_TAKE;
const int RR_T_RESULT_ARRAYSIZE = RR_T_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* RR_T_RESULT_descriptor();
inline const ::std::string& RR_T_RESULT_Name(RR_T_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    RR_T_RESULT_descriptor(), value);
}
inline bool RR_T_RESULT_Parse(
    const ::std::string& name, RR_T_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RR_T_RESULT>(
    RR_T_RESULT_descriptor(), name, value);
}
enum RR_RESULT {
  RR_RESULT_SUCCESS = 1,
  RR_RESULT_NOT_ENOUGH_GOLD = 2,
  RR_RESULT_OTHER_REASON = 3
};
bool RR_RESULT_IsValid(int value);
const RR_RESULT RR_RESULT_MIN = RR_RESULT_SUCCESS;
const RR_RESULT RR_RESULT_MAX = RR_RESULT_OTHER_REASON;
const int RR_RESULT_ARRAYSIZE = RR_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* RR_RESULT_descriptor();
inline const ::std::string& RR_RESULT_Name(RR_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    RR_RESULT_descriptor(), value);
}
inline bool RR_RESULT_Parse(
    const ::std::string& name, RR_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RR_RESULT>(
    RR_RESULT_descriptor(), name, value);
}
enum E_SEIGE_FORCE {
  OPERATE_SUCCESS = 1,
  OPERATE_FAILED = 2,
  OPERATE_GOLD_NOT_ENOUGH = 3,
  OPERATE_ITEM_NOT_ENOUGH = 4,
  OPERATE_BUY_HAS_DONE = 5,
  OPERATE_ARMY_ID_INVALID = 6,
  OPERATE_DONOT_HAVE_ARMY = 7,
  OPERATE_ADD_REINFORCE_ERR = 8,
  OPERATE_NOT_ENOUGH_LEFT_TIMES = 9,
  OPERATE_SEIGE_ARMY_COUNT_LIMIT = 10
};
bool E_SEIGE_FORCE_IsValid(int value);
const E_SEIGE_FORCE E_SEIGE_FORCE_MIN = OPERATE_SUCCESS;
const E_SEIGE_FORCE E_SEIGE_FORCE_MAX = OPERATE_SEIGE_ARMY_COUNT_LIMIT;
const int E_SEIGE_FORCE_ARRAYSIZE = E_SEIGE_FORCE_MAX + 1;

const ::google::protobuf::EnumDescriptor* E_SEIGE_FORCE_descriptor();
inline const ::std::string& E_SEIGE_FORCE_Name(E_SEIGE_FORCE value) {
  return ::google::protobuf::internal::NameOfEnum(
    E_SEIGE_FORCE_descriptor(), value);
}
inline bool E_SEIGE_FORCE_Parse(
    const ::std::string& name, E_SEIGE_FORCE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<E_SEIGE_FORCE>(
    E_SEIGE_FORCE_descriptor(), name, value);
}
// ===================================================================

class GS2C_Resource_Stage : public ::google::protobuf::Message {
 public:
  GS2C_Resource_Stage();
  virtual ~GS2C_Resource_Stage();

  GS2C_Resource_Stage(const GS2C_Resource_Stage& from);

  inline GS2C_Resource_Stage& operator=(const GS2C_Resource_Stage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Resource_Stage& default_instance();

  void Swap(GS2C_Resource_Stage* other);

  // implements Message ----------------------------------------------

  GS2C_Resource_Stage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Resource_Stage& from);
  void MergeFrom(const GS2C_Resource_Stage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stage_id = 1;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::uint32 stage_id() const;
  inline void set_stage_id(::google::protobuf::uint32 value);

  // optional uint32 times = 2;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);

  // optional int64 data_valid_time = 3;
  inline bool has_data_valid_time() const;
  inline void clear_data_valid_time();
  static const int kDataValidTimeFieldNumber = 3;
  inline ::google::protobuf::int64 data_valid_time() const;
  inline void set_data_valid_time(::google::protobuf::int64 value);

  // optional uint32 quest_times = 4;
  inline bool has_quest_times() const;
  inline void clear_quest_times();
  static const int kQuestTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 quest_times() const;
  inline void set_quest_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Resource_Stage)
 private:
  inline void set_has_stage_id();
  inline void clear_has_stage_id();
  inline void set_has_times();
  inline void clear_has_times();
  inline void set_has_data_valid_time();
  inline void clear_has_data_valid_time();
  inline void set_has_quest_times();
  inline void clear_has_quest_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 stage_id_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::int64 data_valid_time_;
  ::google::protobuf::uint32 quest_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Resource_Stage* default_instance_;
};
// -------------------------------------------------------------------

class Stage_Info : public ::google::protobuf::Message {
 public:
  Stage_Info();
  virtual ~Stage_Info();

  Stage_Info(const Stage_Info& from);

  inline Stage_Info& operator=(const Stage_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stage_Info& default_instance();

  void Swap(Stage_Info* other);

  // implements Message ----------------------------------------------

  Stage_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Stage_Info& from);
  void MergeFrom(const Stage_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stage_type = 1;
  inline bool has_stage_type() const;
  inline void clear_stage_type();
  static const int kStageTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 stage_type() const;
  inline void set_stage_type(::google::protobuf::uint32 value);

  // optional uint32 pass_count = 2;
  inline bool has_pass_count() const;
  inline void clear_pass_count();
  static const int kPassCountFieldNumber = 2;
  inline ::google::protobuf::uint32 pass_count() const;
  inline void set_pass_count(::google::protobuf::uint32 value);

  // optional uint32 is_take_reward = 3;
  inline bool has_is_take_reward() const;
  inline void clear_is_take_reward();
  static const int kIsTakeRewardFieldNumber = 3;
  inline ::google::protobuf::uint32 is_take_reward() const;
  inline void set_is_take_reward(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.Stage_Info)
 private:
  inline void set_has_stage_type();
  inline void clear_has_stage_type();
  inline void set_has_pass_count();
  inline void clear_has_pass_count();
  inline void set_has_is_take_reward();
  inline void clear_has_is_take_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 stage_type_;
  ::google::protobuf::uint32 pass_count_;
  ::google::protobuf::uint32 is_take_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static Stage_Info* default_instance_;
};
// -------------------------------------------------------------------

class BranchFubenInfo : public ::google::protobuf::Message {
 public:
  BranchFubenInfo();
  virtual ~BranchFubenInfo();

  BranchFubenInfo(const BranchFubenInfo& from);

  inline BranchFubenInfo& operator=(const BranchFubenInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BranchFubenInfo& default_instance();

  void Swap(BranchFubenInfo* other);

  // implements Message ----------------------------------------------

  BranchFubenInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BranchFubenInfo& from);
  void MergeFrom(const BranchFubenInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stage_id = 1;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::uint32 stage_id() const;
  inline void set_stage_id(::google::protobuf::uint32 value);

  // optional bool is_passed = 2;
  inline bool has_is_passed() const;
  inline void clear_is_passed();
  static const int kIsPassedFieldNumber = 2;
  inline bool is_passed() const;
  inline void set_is_passed(bool value);

  // optional bool is_take_star = 3;
  inline bool has_is_take_star() const;
  inline void clear_is_take_star();
  static const int kIsTakeStarFieldNumber = 3;
  inline bool is_take_star() const;
  inline void set_is_take_star(bool value);

  // optional uint32 branch_group_id = 4;
  inline bool has_branch_group_id() const;
  inline void clear_branch_group_id();
  static const int kBranchGroupIdFieldNumber = 4;
  inline ::google::protobuf::uint32 branch_group_id() const;
  inline void set_branch_group_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.BranchFubenInfo)
 private:
  inline void set_has_stage_id();
  inline void clear_has_stage_id();
  inline void set_has_is_passed();
  inline void clear_has_is_passed();
  inline void set_has_is_take_star();
  inline void clear_has_is_take_star();
  inline void set_has_branch_group_id();
  inline void clear_has_branch_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 stage_id_;
  bool is_passed_;
  bool is_take_star_;
  ::google::protobuf::uint32 branch_group_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static BranchFubenInfo* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_take_branch_fuben_star : public ::google::protobuf::Message {
 public:
  C2GS_take_branch_fuben_star();
  virtual ~C2GS_take_branch_fuben_star();

  C2GS_take_branch_fuben_star(const C2GS_take_branch_fuben_star& from);

  inline C2GS_take_branch_fuben_star& operator=(const C2GS_take_branch_fuben_star& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_take_branch_fuben_star& default_instance();

  void Swap(C2GS_take_branch_fuben_star* other);

  // implements Message ----------------------------------------------

  C2GS_take_branch_fuben_star* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_take_branch_fuben_star& from);
  void MergeFrom(const C2GS_take_branch_fuben_star& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 branch_stageId = 1;
  inline bool has_branch_stageid() const;
  inline void clear_branch_stageid();
  static const int kBranchStageIdFieldNumber = 1;
  inline ::google::protobuf::uint32 branch_stageid() const;
  inline void set_branch_stageid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_take_branch_fuben_star)
 private:
  inline void set_has_branch_stageid();
  inline void clear_has_branch_stageid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 branch_stageid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static C2GS_take_branch_fuben_star* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_take_branch_fuben_star_rsp : public ::google::protobuf::Message {
 public:
  GS2C_take_branch_fuben_star_rsp();
  virtual ~GS2C_take_branch_fuben_star_rsp();

  GS2C_take_branch_fuben_star_rsp(const GS2C_take_branch_fuben_star_rsp& from);

  inline GS2C_take_branch_fuben_star_rsp& operator=(const GS2C_take_branch_fuben_star_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_take_branch_fuben_star_rsp& default_instance();

  void Swap(GS2C_take_branch_fuben_star_rsp* other);

  // implements Message ----------------------------------------------

  GS2C_take_branch_fuben_star_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_take_branch_fuben_star_rsp& from);
  void MergeFrom(const GS2C_take_branch_fuben_star_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // repeated .pb.StReward reward = 2;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::pb::StReward& reward(int index) const;
  inline ::pb::StReward* mutable_reward(int index);
  inline ::pb::StReward* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:pb.GS2C_take_branch_fuben_star_rsp)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::StReward > reward_;
  bool success_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_take_branch_fuben_star_rsp* default_instance_;
};
// -------------------------------------------------------------------

class HideFubenInfo : public ::google::protobuf::Message {
 public:
  HideFubenInfo();
  virtual ~HideFubenInfo();

  HideFubenInfo(const HideFubenInfo& from);

  inline HideFubenInfo& operator=(const HideFubenInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HideFubenInfo& default_instance();

  void Swap(HideFubenInfo* other);

  // implements Message ----------------------------------------------

  HideFubenInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HideFubenInfo& from);
  void MergeFrom(const HideFubenInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hide_stage_id = 1;
  inline bool has_hide_stage_id() const;
  inline void clear_hide_stage_id();
  static const int kHideStageIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hide_stage_id() const;
  inline void set_hide_stage_id(::google::protobuf::uint32 value);

  // optional uint32 free_times = 2;
  inline bool has_free_times() const;
  inline void clear_free_times();
  static const int kFreeTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 free_times() const;
  inline void set_free_times(::google::protobuf::uint32 value);

  // optional uint32 count_times = 3;
  inline bool has_count_times() const;
  inline void clear_count_times();
  static const int kCountTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 count_times() const;
  inline void set_count_times(::google::protobuf::uint32 value);

  // optional uint32 kill_monster = 4;
  inline bool has_kill_monster() const;
  inline void clear_kill_monster();
  static const int kKillMonsterFieldNumber = 4;
  inline ::google::protobuf::uint32 kill_monster() const;
  inline void set_kill_monster(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.HideFubenInfo)
 private:
  inline void set_has_hide_stage_id();
  inline void clear_has_hide_stage_id();
  inline void set_has_free_times();
  inline void clear_has_free_times();
  inline void set_has_count_times();
  inline void clear_has_count_times();
  inline void set_has_kill_monster();
  inline void clear_has_kill_monster();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hide_stage_id_;
  ::google::protobuf::uint32 free_times_;
  ::google::protobuf::uint32 count_times_;
  ::google::protobuf::uint32 kill_monster_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static HideFubenInfo* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Fuben_All_Info : public ::google::protobuf::Message {
 public:
  GS2C_Fuben_All_Info();
  virtual ~GS2C_Fuben_All_Info();

  GS2C_Fuben_All_Info(const GS2C_Fuben_All_Info& from);

  inline GS2C_Fuben_All_Info& operator=(const GS2C_Fuben_All_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Fuben_All_Info& default_instance();

  void Swap(GS2C_Fuben_All_Info* other);

  // implements Message ----------------------------------------------

  GS2C_Fuben_All_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Fuben_All_Info& from);
  void MergeFrom(const GS2C_Fuben_All_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cur_fuben_id = 1;
  inline bool has_cur_fuben_id() const;
  inline void clear_cur_fuben_id();
  static const int kCurFubenIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cur_fuben_id() const;
  inline void set_cur_fuben_id(::google::protobuf::uint32 value);

  // optional uint32 cur_stage_id = 2;
  inline bool has_cur_stage_id() const;
  inline void clear_cur_stage_id();
  static const int kCurStageIdFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_stage_id() const;
  inline void set_cur_stage_id(::google::protobuf::uint32 value);

  // optional uint32 NR_stars = 3;
  inline bool has_nr_stars() const;
  inline void clear_nr_stars();
  static const int kNRStarsFieldNumber = 3;
  inline ::google::protobuf::uint32 nr_stars() const;
  inline void set_nr_stars(::google::protobuf::uint32 value);

  // repeated .pb.Stage_Info pass_stage_info = 5;
  inline int pass_stage_info_size() const;
  inline void clear_pass_stage_info();
  static const int kPassStageInfoFieldNumber = 5;
  inline const ::pb::Stage_Info& pass_stage_info(int index) const;
  inline ::pb::Stage_Info* mutable_pass_stage_info(int index);
  inline ::pb::Stage_Info* add_pass_stage_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Stage_Info >&
      pass_stage_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Stage_Info >*
      mutable_pass_stage_info();

  // optional .pb.GS2C_Combat_Crusade crusade_info = 6;
  inline bool has_crusade_info() const;
  inline void clear_crusade_info();
  static const int kCrusadeInfoFieldNumber = 6;
  inline const ::pb::GS2C_Combat_Crusade& crusade_info() const;
  inline ::pb::GS2C_Combat_Crusade* mutable_crusade_info();
  inline ::pb::GS2C_Combat_Crusade* release_crusade_info();
  inline void set_allocated_crusade_info(::pb::GS2C_Combat_Crusade* crusade_info);

  // optional .pb.GxDB_Combat_Crusade crusade_info_db = 7;
  inline bool has_crusade_info_db() const;
  inline void clear_crusade_info_db();
  static const int kCrusadeInfoDbFieldNumber = 7;
  inline const ::pb::GxDB_Combat_Crusade& crusade_info_db() const;
  inline ::pb::GxDB_Combat_Crusade* mutable_crusade_info_db();
  inline ::pb::GxDB_Combat_Crusade* release_crusade_info_db();
  inline void set_allocated_crusade_info_db(::pb::GxDB_Combat_Crusade* crusade_info_db);

  // repeated .pb.BranchFubenInfo branch_info = 8;
  inline int branch_info_size() const;
  inline void clear_branch_info();
  static const int kBranchInfoFieldNumber = 8;
  inline const ::pb::BranchFubenInfo& branch_info(int index) const;
  inline ::pb::BranchFubenInfo* mutable_branch_info(int index);
  inline ::pb::BranchFubenInfo* add_branch_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::BranchFubenInfo >&
      branch_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::BranchFubenInfo >*
      mutable_branch_info();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Fuben_All_Info)
 private:
  inline void set_has_cur_fuben_id();
  inline void clear_has_cur_fuben_id();
  inline void set_has_cur_stage_id();
  inline void clear_has_cur_stage_id();
  inline void set_has_nr_stars();
  inline void clear_has_nr_stars();
  inline void set_has_crusade_info();
  inline void clear_has_crusade_info();
  inline void set_has_crusade_info_db();
  inline void clear_has_crusade_info_db();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cur_fuben_id_;
  ::google::protobuf::uint32 cur_stage_id_;
  ::google::protobuf::RepeatedPtrField< ::pb::Stage_Info > pass_stage_info_;
  ::pb::GS2C_Combat_Crusade* crusade_info_;
  ::pb::GxDB_Combat_Crusade* crusade_info_db_;
  ::google::protobuf::RepeatedPtrField< ::pb::BranchFubenInfo > branch_info_;
  ::google::protobuf::uint32 nr_stars_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Fuben_All_Info* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Enter_Stage : public ::google::protobuf::Message {
 public:
  C2GS_Enter_Stage();
  virtual ~C2GS_Enter_Stage();

  C2GS_Enter_Stage(const C2GS_Enter_Stage& from);

  inline C2GS_Enter_Stage& operator=(const C2GS_Enter_Stage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Enter_Stage& default_instance();

  void Swap(C2GS_Enter_Stage* other);

  // implements Message ----------------------------------------------

  C2GS_Enter_Stage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Enter_Stage& from);
  void MergeFrom(const C2GS_Enter_Stage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 stage_id = 1;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::uint32 stage_id() const;
  inline void set_stage_id(::google::protobuf::uint32 value);

  // repeated uint32 hero_id = 2;
  inline int hero_id_size() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id(int index) const;
  inline void set_hero_id(int index, ::google::protobuf::uint32 value);
  inline void add_hero_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_id();

  // @@protoc_insertion_point(class_scope:pb.C2GS_Enter_Stage)
 private:
  inline void set_has_stage_id();
  inline void clear_has_stage_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_id_;
  ::google::protobuf::uint32 stage_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Enter_Stage* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Pass_Stage : public ::google::protobuf::Message {
 public:
  GS2C_Pass_Stage();
  virtual ~GS2C_Pass_Stage();

  GS2C_Pass_Stage(const GS2C_Pass_Stage& from);

  inline GS2C_Pass_Stage& operator=(const GS2C_Pass_Stage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Pass_Stage& default_instance();

  void Swap(GS2C_Pass_Stage* other);

  // implements Message ----------------------------------------------

  GS2C_Pass_Stage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Pass_Stage& from);
  void MergeFrom(const GS2C_Pass_Stage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool is_win = 1;
  inline bool has_is_win() const;
  inline void clear_is_win();
  static const int kIsWinFieldNumber = 1;
  inline bool is_win() const;
  inline void set_is_win(bool value);

  // required uint32 stage_id = 2;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 2;
  inline ::google::protobuf::uint32 stage_id() const;
  inline void set_stage_id(::google::protobuf::uint32 value);

  // required uint32 fuben_id = 3;
  inline bool has_fuben_id() const;
  inline void clear_fuben_id();
  static const int kFubenIdFieldNumber = 3;
  inline ::google::protobuf::uint32 fuben_id() const;
  inline void set_fuben_id(::google::protobuf::uint32 value);

  // repeated .pb.StReward rewards = 4;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 4;
  inline const ::pb::StReward& rewards(int index) const;
  inline ::pb::StReward* mutable_rewards(int index);
  inline ::pb::StReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Pass_Stage)
 private:
  inline void set_has_is_win();
  inline void clear_has_is_win();
  inline void set_has_stage_id();
  inline void clear_has_stage_id();
  inline void set_has_fuben_id();
  inline void clear_has_fuben_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool is_win_;
  ::google::protobuf::uint32 stage_id_;
  ::google::protobuf::RepeatedPtrField< ::pb::StReward > rewards_;
  ::google::protobuf::uint32 fuben_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Pass_Stage* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_TakeResource : public ::google::protobuf::Message {
 public:
  C2GS_TakeResource();
  virtual ~C2GS_TakeResource();

  C2GS_TakeResource(const C2GS_TakeResource& from);

  inline C2GS_TakeResource& operator=(const C2GS_TakeResource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_TakeResource& default_instance();

  void Swap(C2GS_TakeResource* other);

  // implements Message ----------------------------------------------

  C2GS_TakeResource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_TakeResource& from);
  void MergeFrom(const C2GS_TakeResource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 stage_id = 1;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::uint32 stage_id() const;
  inline void set_stage_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_TakeResource)
 private:
  inline void set_has_stage_id();
  inline void clear_has_stage_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 stage_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static C2GS_TakeResource* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_TakeResource : public ::google::protobuf::Message {
 public:
  GS2C_TakeResource();
  virtual ~GS2C_TakeResource();

  GS2C_TakeResource(const GS2C_TakeResource& from);

  inline GS2C_TakeResource& operator=(const GS2C_TakeResource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_TakeResource& default_instance();

  void Swap(GS2C_TakeResource* other);

  // implements Message ----------------------------------------------

  GS2C_TakeResource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_TakeResource& from);
  void MergeFrom(const GS2C_TakeResource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.StReward reward = 1;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::pb::StReward& reward(int index) const;
  inline ::pb::StReward* mutable_reward(int index);
  inline ::pb::StReward* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
      mutable_reward();

  // optional .pb.GS2C_Resource_Stage info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::pb::GS2C_Resource_Stage& info() const;
  inline ::pb::GS2C_Resource_Stage* mutable_info();
  inline ::pb::GS2C_Resource_Stage* release_info();
  inline void set_allocated_info(::pb::GS2C_Resource_Stage* info);

  // optional .pb.RR_T_RESULT result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::pb::RR_T_RESULT result() const;
  inline void set_result(::pb::RR_T_RESULT value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_TakeResource)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::StReward > reward_;
  ::pb::GS2C_Resource_Stage* info_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_TakeResource* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_ResetResource : public ::google::protobuf::Message {
 public:
  C2GS_ResetResource();
  virtual ~C2GS_ResetResource();

  C2GS_ResetResource(const C2GS_ResetResource& from);

  inline C2GS_ResetResource& operator=(const C2GS_ResetResource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_ResetResource& default_instance();

  void Swap(C2GS_ResetResource* other);

  // implements Message ----------------------------------------------

  C2GS_ResetResource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_ResetResource& from);
  void MergeFrom(const C2GS_ResetResource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 stage_id = 1;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::uint32 stage_id() const;
  inline void set_stage_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_ResetResource)
 private:
  inline void set_has_stage_id();
  inline void clear_has_stage_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 stage_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static C2GS_ResetResource* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_ResetResource : public ::google::protobuf::Message {
 public:
  GS2C_ResetResource();
  virtual ~GS2C_ResetResource();

  GS2C_ResetResource(const GS2C_ResetResource& from);

  inline GS2C_ResetResource& operator=(const GS2C_ResetResource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_ResetResource& default_instance();

  void Swap(GS2C_ResetResource* other);

  // implements Message ----------------------------------------------

  GS2C_ResetResource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_ResetResource& from);
  void MergeFrom(const GS2C_ResetResource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.RR_RESULT result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::pb::RR_RESULT result() const;
  inline void set_result(::pb::RR_RESULT value);

  // optional .pb.GS2C_Resource_Stage info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::pb::GS2C_Resource_Stage& info() const;
  inline ::pb::GS2C_Resource_Stage* mutable_info();
  inline ::pb::GS2C_Resource_Stage* release_info();
  inline void set_allocated_info(::pb::GS2C_Resource_Stage* info);

  // @@protoc_insertion_point(class_scope:pb.GS2C_ResetResource)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::GS2C_Resource_Stage* info_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_ResetResource* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Select_Crusade : public ::google::protobuf::Message {
 public:
  C2GS_Select_Crusade();
  virtual ~C2GS_Select_Crusade();

  C2GS_Select_Crusade(const C2GS_Select_Crusade& from);

  inline C2GS_Select_Crusade& operator=(const C2GS_Select_Crusade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Select_Crusade& default_instance();

  void Swap(C2GS_Select_Crusade* other);

  // implements Message ----------------------------------------------

  C2GS_Select_Crusade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Select_Crusade& from);
  void MergeFrom(const C2GS_Select_Crusade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 crusade_id = 1;
  inline bool has_crusade_id() const;
  inline void clear_crusade_id();
  static const int kCrusadeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 crusade_id() const;
  inline void set_crusade_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Select_Crusade)
 private:
  inline void set_has_crusade_id();
  inline void clear_has_crusade_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 crusade_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Select_Crusade* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Select_Ret : public ::google::protobuf::Message {
 public:
  GS2C_Select_Ret();
  virtual ~GS2C_Select_Ret();

  GS2C_Select_Ret(const GS2C_Select_Ret& from);

  inline GS2C_Select_Ret& operator=(const GS2C_Select_Ret& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Select_Ret& default_instance();

  void Swap(GS2C_Select_Ret* other);

  // implements Message ----------------------------------------------

  GS2C_Select_Ret* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Select_Ret& from);
  void MergeFrom(const GS2C_Select_Ret& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool isSelectSuc = 1;
  inline bool has_isselectsuc() const;
  inline void clear_isselectsuc();
  static const int kIsSelectSucFieldNumber = 1;
  inline bool isselectsuc() const;
  inline void set_isselectsuc(bool value);

  // optional .pb.GS2C_Combat_Crusade crusadeinfo = 2;
  inline bool has_crusadeinfo() const;
  inline void clear_crusadeinfo();
  static const int kCrusadeinfoFieldNumber = 2;
  inline const ::pb::GS2C_Combat_Crusade& crusadeinfo() const;
  inline ::pb::GS2C_Combat_Crusade* mutable_crusadeinfo();
  inline ::pb::GS2C_Combat_Crusade* release_crusadeinfo();
  inline void set_allocated_crusadeinfo(::pb::GS2C_Combat_Crusade* crusadeinfo);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Select_Ret)
 private:
  inline void set_has_isselectsuc();
  inline void clear_has_isselectsuc();
  inline void set_has_crusadeinfo();
  inline void clear_has_crusadeinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::GS2C_Combat_Crusade* crusadeinfo_;
  bool isselectsuc_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Select_Ret* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Crusade_Reset : public ::google::protobuf::Message {
 public:
  GS2C_Crusade_Reset();
  virtual ~GS2C_Crusade_Reset();

  GS2C_Crusade_Reset(const GS2C_Crusade_Reset& from);

  inline GS2C_Crusade_Reset& operator=(const GS2C_Crusade_Reset& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Crusade_Reset& default_instance();

  void Swap(GS2C_Crusade_Reset* other);

  // implements Message ----------------------------------------------

  GS2C_Crusade_Reset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Crusade_Reset& from);
  void MergeFrom(const GS2C_Crusade_Reset& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool reset = 1;
  inline bool has_reset() const;
  inline void clear_reset();
  static const int kResetFieldNumber = 1;
  inline bool reset() const;
  inline void set_reset(bool value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Crusade_Reset)
 private:
  inline void set_has_reset();
  inline void clear_has_reset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool reset_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Crusade_Reset* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Fog_Reward : public ::google::protobuf::Message {
 public:
  C2GS_Fog_Reward();
  virtual ~C2GS_Fog_Reward();

  C2GS_Fog_Reward(const C2GS_Fog_Reward& from);

  inline C2GS_Fog_Reward& operator=(const C2GS_Fog_Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Fog_Reward& default_instance();

  void Swap(C2GS_Fog_Reward* other);

  // implements Message ----------------------------------------------

  C2GS_Fog_Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Fog_Reward& from);
  void MergeFrom(const C2GS_Fog_Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Fog_Reward)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Fog_Reward* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Fog_Reward : public ::google::protobuf::Message {
 public:
  GS2C_Fog_Reward();
  virtual ~GS2C_Fog_Reward();

  GS2C_Fog_Reward(const GS2C_Fog_Reward& from);

  inline GS2C_Fog_Reward& operator=(const GS2C_Fog_Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Fog_Reward& default_instance();

  void Swap(GS2C_Fog_Reward* other);

  // implements Message ----------------------------------------------

  GS2C_Fog_Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Fog_Reward& from);
  void MergeFrom(const GS2C_Fog_Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .pb.StReward rewards = 1;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::pb::StReward& rewards() const;
  inline ::pb::StReward* mutable_rewards();
  inline ::pb::StReward* release_rewards();
  inline void set_allocated_rewards(::pb::StReward* rewards);

  // optional .pb.RR_T_RESULT result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::pb::RR_T_RESULT result() const;
  inline void set_result(::pb::RR_T_RESULT value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Fog_Reward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rewards();
  inline void clear_has_rewards();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::StReward* rewards_;
  ::google::protobuf::uint32 id_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Fog_Reward* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Open_Fog_Info : public ::google::protobuf::Message {
 public:
  GS2C_Open_Fog_Info();
  virtual ~GS2C_Open_Fog_Info();

  GS2C_Open_Fog_Info(const GS2C_Open_Fog_Info& from);

  inline GS2C_Open_Fog_Info& operator=(const GS2C_Open_Fog_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Open_Fog_Info& default_instance();

  void Swap(GS2C_Open_Fog_Info* other);

  // implements Message ----------------------------------------------

  GS2C_Open_Fog_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Open_Fog_Info& from);
  void MergeFrom(const GS2C_Open_Fog_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint64 start_time = 2;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 start_time() const;
  inline void set_start_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Open_Fog_Info)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_start_time();
  inline void clear_has_start_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 start_time_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Open_Fog_Info* default_instance_;
};
// -------------------------------------------------------------------

class Seige_Force_info : public ::google::protobuf::Message {
 public:
  Seige_Force_info();
  virtual ~Seige_Force_info();

  Seige_Force_info(const Seige_Force_info& from);

  inline Seige_Force_info& operator=(const Seige_Force_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Seige_Force_info& default_instance();

  void Swap(Seige_Force_info* other);

  // implements Message ----------------------------------------------

  Seige_Force_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Seige_Force_info& from);
  void MergeFrom(const Seige_Force_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 army_id = 1;
  inline bool has_army_id() const;
  inline void clear_army_id();
  static const int kArmyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 army_id() const;
  inline void set_army_id(::google::protobuf::uint32 value);

  // optional uint32 left_times = 2;
  inline bool has_left_times() const;
  inline void clear_left_times();
  static const int kLeftTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 left_times() const;
  inline void set_left_times(::google::protobuf::uint32 value);

  // optional uint32 cur_all_times = 3;
  inline bool has_cur_all_times() const;
  inline void clear_cur_all_times();
  static const int kCurAllTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 cur_all_times() const;
  inline void set_cur_all_times(::google::protobuf::uint32 value);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 cur_exp = 5;
  inline bool has_cur_exp() const;
  inline void clear_cur_exp();
  static const int kCurExpFieldNumber = 5;
  inline ::google::protobuf::uint32 cur_exp() const;
  inline void set_cur_exp(::google::protobuf::uint32 value);

  // optional uint32 skill_id = 6;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 6;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);

  // repeated uint32 specific_ids = 7;
  inline int specific_ids_size() const;
  inline void clear_specific_ids();
  static const int kSpecificIdsFieldNumber = 7;
  inline ::google::protobuf::uint32 specific_ids(int index) const;
  inline void set_specific_ids(int index, ::google::protobuf::uint32 value);
  inline void add_specific_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      specific_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_specific_ids();

  // repeated uint32 terrain = 8;
  inline int terrain_size() const;
  inline void clear_terrain();
  static const int kTerrainFieldNumber = 8;
  inline ::google::protobuf::uint32 terrain(int index) const;
  inline void set_terrain(int index, ::google::protobuf::uint32 value);
  inline void add_terrain(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      terrain() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_terrain();

  // optional uint32 military_power = 9;
  inline bool has_military_power() const;
  inline void clear_military_power();
  static const int kMilitaryPowerFieldNumber = 9;
  inline ::google::protobuf::uint32 military_power() const;
  inline void set_military_power(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.Seige_Force_info)
 private:
  inline void set_has_army_id();
  inline void clear_has_army_id();
  inline void set_has_left_times();
  inline void clear_has_left_times();
  inline void set_has_cur_all_times();
  inline void clear_has_cur_all_times();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_cur_exp();
  inline void clear_has_cur_exp();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_military_power();
  inline void clear_has_military_power();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 army_id_;
  ::google::protobuf::uint32 left_times_;
  ::google::protobuf::uint32 cur_all_times_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 cur_exp_;
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > specific_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > terrain_;
  ::google::protobuf::uint32 military_power_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static Seige_Force_info* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Seige_Force_All_Info : public ::google::protobuf::Message {
 public:
  GS2C_Seige_Force_All_Info();
  virtual ~GS2C_Seige_Force_All_Info();

  GS2C_Seige_Force_All_Info(const GS2C_Seige_Force_All_Info& from);

  inline GS2C_Seige_Force_All_Info& operator=(const GS2C_Seige_Force_All_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Seige_Force_All_Info& default_instance();

  void Swap(GS2C_Seige_Force_All_Info* other);

  // implements Message ----------------------------------------------

  GS2C_Seige_Force_All_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Seige_Force_All_Info& from);
  void MergeFrom(const GS2C_Seige_Force_All_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.Seige_Force_info info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::Seige_Force_info& info(int index) const;
  inline ::pb::Seige_Force_info* mutable_info(int index);
  inline ::pb::Seige_Force_info* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Seige_Force_info >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Seige_Force_info >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Seige_Force_All_Info)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::Seige_Force_info > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Seige_Force_All_Info* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Seige_Force_Level_Up : public ::google::protobuf::Message {
 public:
  C2GS_Seige_Force_Level_Up();
  virtual ~C2GS_Seige_Force_Level_Up();

  C2GS_Seige_Force_Level_Up(const C2GS_Seige_Force_Level_Up& from);

  inline C2GS_Seige_Force_Level_Up& operator=(const C2GS_Seige_Force_Level_Up& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Seige_Force_Level_Up& default_instance();

  void Swap(C2GS_Seige_Force_Level_Up* other);

  // implements Message ----------------------------------------------

  C2GS_Seige_Force_Level_Up* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Seige_Force_Level_Up& from);
  void MergeFrom(const C2GS_Seige_Force_Level_Up& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 army_id = 1;
  inline bool has_army_id() const;
  inline void clear_army_id();
  static const int kArmyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 army_id() const;
  inline void set_army_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Seige_Force_Level_Up)
 private:
  inline void set_has_army_id();
  inline void clear_has_army_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 army_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Seige_Force_Level_Up* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Seige_Force_Level_Up_Rsp : public ::google::protobuf::Message {
 public:
  GS2C_Seige_Force_Level_Up_Rsp();
  virtual ~GS2C_Seige_Force_Level_Up_Rsp();

  GS2C_Seige_Force_Level_Up_Rsp(const GS2C_Seige_Force_Level_Up_Rsp& from);

  inline GS2C_Seige_Force_Level_Up_Rsp& operator=(const GS2C_Seige_Force_Level_Up_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Seige_Force_Level_Up_Rsp& default_instance();

  void Swap(GS2C_Seige_Force_Level_Up_Rsp* other);

  // implements Message ----------------------------------------------

  GS2C_Seige_Force_Level_Up_Rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Seige_Force_Level_Up_Rsp& from);
  void MergeFrom(const GS2C_Seige_Force_Level_Up_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 critical = 1;
  inline bool has_critical() const;
  inline void clear_critical();
  static const int kCriticalFieldNumber = 1;
  inline ::google::protobuf::uint32 critical() const;
  inline void set_critical(::google::protobuf::uint32 value);

  // optional uint32 exp_of_this_time = 2;
  inline bool has_exp_of_this_time() const;
  inline void clear_exp_of_this_time();
  static const int kExpOfThisTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 exp_of_this_time() const;
  inline void set_exp_of_this_time(::google::protobuf::uint32 value);

  // optional .pb.Seige_Force_info change_info = 3;
  inline bool has_change_info() const;
  inline void clear_change_info();
  static const int kChangeInfoFieldNumber = 3;
  inline const ::pb::Seige_Force_info& change_info() const;
  inline ::pb::Seige_Force_info* mutable_change_info();
  inline ::pb::Seige_Force_info* release_change_info();
  inline void set_allocated_change_info(::pb::Seige_Force_info* change_info);

  // required .pb.E_SEIGE_FORCE result = 4;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline ::pb::E_SEIGE_FORCE result() const;
  inline void set_result(::pb::E_SEIGE_FORCE value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Seige_Force_Level_Up_Rsp)
 private:
  inline void set_has_critical();
  inline void clear_has_critical();
  inline void set_has_exp_of_this_time();
  inline void clear_has_exp_of_this_time();
  inline void set_has_change_info();
  inline void clear_has_change_info();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 critical_;
  ::google::protobuf::uint32 exp_of_this_time_;
  ::pb::Seige_Force_info* change_info_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Seige_Force_Level_Up_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Seige_Force_Buy_Army : public ::google::protobuf::Message {
 public:
  C2GS_Seige_Force_Buy_Army();
  virtual ~C2GS_Seige_Force_Buy_Army();

  C2GS_Seige_Force_Buy_Army(const C2GS_Seige_Force_Buy_Army& from);

  inline C2GS_Seige_Force_Buy_Army& operator=(const C2GS_Seige_Force_Buy_Army& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Seige_Force_Buy_Army& default_instance();

  void Swap(C2GS_Seige_Force_Buy_Army* other);

  // implements Message ----------------------------------------------

  C2GS_Seige_Force_Buy_Army* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Seige_Force_Buy_Army& from);
  void MergeFrom(const C2GS_Seige_Force_Buy_Army& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 army_id = 1;
  inline bool has_army_id() const;
  inline void clear_army_id();
  static const int kArmyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 army_id() const;
  inline void set_army_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Seige_Force_Buy_Army)
 private:
  inline void set_has_army_id();
  inline void clear_has_army_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 army_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Seige_Force_Buy_Army* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Seige_Force_Buy_Army_Rsp : public ::google::protobuf::Message {
 public:
  GS2C_Seige_Force_Buy_Army_Rsp();
  virtual ~GS2C_Seige_Force_Buy_Army_Rsp();

  GS2C_Seige_Force_Buy_Army_Rsp(const GS2C_Seige_Force_Buy_Army_Rsp& from);

  inline GS2C_Seige_Force_Buy_Army_Rsp& operator=(const GS2C_Seige_Force_Buy_Army_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Seige_Force_Buy_Army_Rsp& default_instance();

  void Swap(GS2C_Seige_Force_Buy_Army_Rsp* other);

  // implements Message ----------------------------------------------

  GS2C_Seige_Force_Buy_Army_Rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Seige_Force_Buy_Army_Rsp& from);
  void MergeFrom(const GS2C_Seige_Force_Buy_Army_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 army_id = 1;
  inline bool has_army_id() const;
  inline void clear_army_id();
  static const int kArmyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 army_id() const;
  inline void set_army_id(::google::protobuf::uint32 value);

  // optional .pb.E_SEIGE_FORCE result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::pb::E_SEIGE_FORCE result() const;
  inline void set_result(::pb::E_SEIGE_FORCE value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Seige_Force_Buy_Army_Rsp)
 private:
  inline void set_has_army_id();
  inline void clear_has_army_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 army_id_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Seige_Force_Buy_Army_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Seige_Force_Use_Army : public ::google::protobuf::Message {
 public:
  C2GS_Seige_Force_Use_Army();
  virtual ~C2GS_Seige_Force_Use_Army();

  C2GS_Seige_Force_Use_Army(const C2GS_Seige_Force_Use_Army& from);

  inline C2GS_Seige_Force_Use_Army& operator=(const C2GS_Seige_Force_Use_Army& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Seige_Force_Use_Army& default_instance();

  void Swap(C2GS_Seige_Force_Use_Army* other);

  // implements Message ----------------------------------------------

  C2GS_Seige_Force_Use_Army* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Seige_Force_Use_Army& from);
  void MergeFrom(const C2GS_Seige_Force_Use_Army& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 army_id = 1;
  inline bool has_army_id() const;
  inline void clear_army_id();
  static const int kArmyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 army_id() const;
  inline void set_army_id(::google::protobuf::uint32 value);

  // required uint32 group_unique_id = 2;
  inline bool has_group_unique_id() const;
  inline void clear_group_unique_id();
  static const int kGroupUniqueIdFieldNumber = 2;
  inline ::google::protobuf::uint32 group_unique_id() const;
  inline void set_group_unique_id(::google::protobuf::uint32 value);

  // optional uint32 cityid = 3;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityidFieldNumber = 3;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Seige_Force_Use_Army)
 private:
  inline void set_has_army_id();
  inline void clear_has_army_id();
  inline void set_has_group_unique_id();
  inline void clear_has_group_unique_id();
  inline void set_has_cityid();
  inline void clear_has_cityid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 army_id_;
  ::google::protobuf::uint32 group_unique_id_;
  ::google::protobuf::uint32 cityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Seige_Force_Use_Army* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Seige_Force_Use_Army_Rsp : public ::google::protobuf::Message {
 public:
  GS2C_Seige_Force_Use_Army_Rsp();
  virtual ~GS2C_Seige_Force_Use_Army_Rsp();

  GS2C_Seige_Force_Use_Army_Rsp(const GS2C_Seige_Force_Use_Army_Rsp& from);

  inline GS2C_Seige_Force_Use_Army_Rsp& operator=(const GS2C_Seige_Force_Use_Army_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Seige_Force_Use_Army_Rsp& default_instance();

  void Swap(GS2C_Seige_Force_Use_Army_Rsp* other);

  // implements Message ----------------------------------------------

  GS2C_Seige_Force_Use_Army_Rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Seige_Force_Use_Army_Rsp& from);
  void MergeFrom(const GS2C_Seige_Force_Use_Army_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 army_id = 1;
  inline bool has_army_id() const;
  inline void clear_army_id();
  static const int kArmyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 army_id() const;
  inline void set_army_id(::google::protobuf::uint32 value);

  // optional .pb.E_SEIGE_FORCE result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::pb::E_SEIGE_FORCE result() const;
  inline void set_result(::pb::E_SEIGE_FORCE value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Seige_Force_Use_Army_Rsp)
 private:
  inline void set_has_army_id();
  inline void clear_has_army_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 army_id_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Seige_Force_Use_Army_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_Seige_Force_Info_Pack : public ::google::protobuf::Message {
 public:
  GxDB_Seige_Force_Info_Pack();
  virtual ~GxDB_Seige_Force_Info_Pack();

  GxDB_Seige_Force_Info_Pack(const GxDB_Seige_Force_Info_Pack& from);

  inline GxDB_Seige_Force_Info_Pack& operator=(const GxDB_Seige_Force_Info_Pack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Seige_Force_Info_Pack& default_instance();

  void Swap(GxDB_Seige_Force_Info_Pack* other);

  // implements Message ----------------------------------------------

  GxDB_Seige_Force_Info_Pack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Seige_Force_Info_Pack& from);
  void MergeFrom(const GxDB_Seige_Force_Info_Pack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.Seige_Force_info info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::Seige_Force_info& info(int index) const;
  inline ::pb::Seige_Force_info* mutable_info(int index);
  inline ::pb::Seige_Force_info* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Seige_Force_info >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Seige_Force_info >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:pb.GxDB_Seige_Force_Info_Pack)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::Seige_Force_info > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Seige_Force_Info_Pack* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Take_Month_Card_Reward : public ::google::protobuf::Message {
 public:
  C2GS_Take_Month_Card_Reward();
  virtual ~C2GS_Take_Month_Card_Reward();

  C2GS_Take_Month_Card_Reward(const C2GS_Take_Month_Card_Reward& from);

  inline C2GS_Take_Month_Card_Reward& operator=(const C2GS_Take_Month_Card_Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Take_Month_Card_Reward& default_instance();

  void Swap(C2GS_Take_Month_Card_Reward* other);

  // implements Message ----------------------------------------------

  C2GS_Take_Month_Card_Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Take_Month_Card_Reward& from);
  void MergeFrom(const C2GS_Take_Month_Card_Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 card_type = 1;
  inline bool has_card_type() const;
  inline void clear_card_type();
  static const int kCardTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 card_type() const;
  inline void set_card_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Take_Month_Card_Reward)
 private:
  inline void set_has_card_type();
  inline void clear_has_card_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 card_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Take_Month_Card_Reward* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Take_Month_Card_Reward_Rsp : public ::google::protobuf::Message {
 public:
  GS2C_Take_Month_Card_Reward_Rsp();
  virtual ~GS2C_Take_Month_Card_Reward_Rsp();

  GS2C_Take_Month_Card_Reward_Rsp(const GS2C_Take_Month_Card_Reward_Rsp& from);

  inline GS2C_Take_Month_Card_Reward_Rsp& operator=(const GS2C_Take_Month_Card_Reward_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Take_Month_Card_Reward_Rsp& default_instance();

  void Swap(GS2C_Take_Month_Card_Reward_Rsp* other);

  // implements Message ----------------------------------------------

  GS2C_Take_Month_Card_Reward_Rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Take_Month_Card_Reward_Rsp& from);
  void MergeFrom(const GS2C_Take_Month_Card_Reward_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional uint32 card_type = 2;
  inline bool has_card_type() const;
  inline void clear_card_type();
  static const int kCardTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 card_type() const;
  inline void set_card_type(::google::protobuf::uint32 value);

  // repeated .pb.StReward reward = 3;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::pb::StReward& reward(int index) const;
  inline ::pb::StReward* mutable_reward(int index);
  inline ::pb::StReward* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Take_Month_Card_Reward_Rsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_card_type();
  inline void clear_has_card_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 card_type_;
  ::google::protobuf::RepeatedPtrField< ::pb::StReward > reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Take_Month_Card_Reward_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class BaseContinueMsg : public ::google::protobuf::Message {
 public:
  BaseContinueMsg();
  virtual ~BaseContinueMsg();

  BaseContinueMsg(const BaseContinueMsg& from);

  inline BaseContinueMsg& operator=(const BaseContinueMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseContinueMsg& default_instance();

  void Swap(BaseContinueMsg* other);

  // implements Message ----------------------------------------------

  BaseContinueMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BaseContinueMsg& from);
  void MergeFrom(const BaseContinueMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 con_occupy_citys = 1;
  inline bool has_con_occupy_citys() const;
  inline void clear_con_occupy_citys();
  static const int kConOccupyCitysFieldNumber = 1;
  inline ::google::protobuf::uint32 con_occupy_citys() const;
  inline void set_con_occupy_citys(::google::protobuf::uint32 value);

  // optional uint64 active_time = 2;
  inline bool has_active_time() const;
  inline void clear_active_time();
  static const int kActiveTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 active_time() const;
  inline void set_active_time(::google::protobuf::uint64 value);

  // optional uint64 finish_time = 3;
  inline bool has_finish_time() const;
  inline void clear_finish_time();
  static const int kFinishTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 finish_time() const;
  inline void set_finish_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.BaseContinueMsg)
 private:
  inline void set_has_con_occupy_citys();
  inline void clear_has_con_occupy_citys();
  inline void set_has_active_time();
  inline void clear_has_active_time();
  inline void set_has_finish_time();
  inline void clear_has_finish_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 active_time_;
  ::google::protobuf::uint64 finish_time_;
  ::google::protobuf::uint32 con_occupy_citys_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static BaseContinueMsg* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_ContinueOccupyCity : public ::google::protobuf::Message {
 public:
  GS2C_ContinueOccupyCity();
  virtual ~GS2C_ContinueOccupyCity();

  GS2C_ContinueOccupyCity(const GS2C_ContinueOccupyCity& from);

  inline GS2C_ContinueOccupyCity& operator=(const GS2C_ContinueOccupyCity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_ContinueOccupyCity& default_instance();

  void Swap(GS2C_ContinueOccupyCity* other);

  // implements Message ----------------------------------------------

  GS2C_ContinueOccupyCity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_ContinueOccupyCity& from);
  void MergeFrom(const GS2C_ContinueOccupyCity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.BaseContinueMsg info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::BaseContinueMsg& info() const;
  inline ::pb::BaseContinueMsg* mutable_info();
  inline ::pb::BaseContinueMsg* release_info();
  inline void set_allocated_info(::pb::BaseContinueMsg* info);

  // @@protoc_insertion_point(class_scope:pb.GS2C_ContinueOccupyCity)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::BaseContinueMsg* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_ContinueOccupyCity* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_ContinueOccupyCityInfo : public ::google::protobuf::Message {
 public:
  GxDB_ContinueOccupyCityInfo();
  virtual ~GxDB_ContinueOccupyCityInfo();

  GxDB_ContinueOccupyCityInfo(const GxDB_ContinueOccupyCityInfo& from);

  inline GxDB_ContinueOccupyCityInfo& operator=(const GxDB_ContinueOccupyCityInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_ContinueOccupyCityInfo& default_instance();

  void Swap(GxDB_ContinueOccupyCityInfo* other);

  // implements Message ----------------------------------------------

  GxDB_ContinueOccupyCityInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_ContinueOccupyCityInfo& from);
  void MergeFrom(const GxDB_ContinueOccupyCityInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.BaseContinueMsg info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::BaseContinueMsg& info(int index) const;
  inline ::pb::BaseContinueMsg* mutable_info(int index);
  inline ::pb::BaseContinueMsg* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::BaseContinueMsg >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::BaseContinueMsg >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:pb.GxDB_ContinueOccupyCityInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::BaseContinueMsg > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GxDB_ContinueOccupyCityInfo* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_ContinueOccupyCitySuccess : public ::google::protobuf::Message {
 public:
  GS2C_ContinueOccupyCitySuccess();
  virtual ~GS2C_ContinueOccupyCitySuccess();

  GS2C_ContinueOccupyCitySuccess(const GS2C_ContinueOccupyCitySuccess& from);

  inline GS2C_ContinueOccupyCitySuccess& operator=(const GS2C_ContinueOccupyCitySuccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_ContinueOccupyCitySuccess& default_instance();

  void Swap(GS2C_ContinueOccupyCitySuccess* other);

  // implements Message ----------------------------------------------

  GS2C_ContinueOccupyCitySuccess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_ContinueOccupyCitySuccess& from);
  void MergeFrom(const GS2C_ContinueOccupyCitySuccess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 con_occupy_citys = 1;
  inline bool has_con_occupy_citys() const;
  inline void clear_con_occupy_citys();
  static const int kConOccupyCitysFieldNumber = 1;
  inline ::google::protobuf::uint32 con_occupy_citys() const;
  inline void set_con_occupy_citys(::google::protobuf::uint32 value);

  // optional uint32 exploit_value = 2;
  inline bool has_exploit_value() const;
  inline void clear_exploit_value();
  static const int kExploitValueFieldNumber = 2;
  inline ::google::protobuf::uint32 exploit_value() const;
  inline void set_exploit_value(::google::protobuf::uint32 value);

  // optional uint32 need_to_occupy_city = 3;
  inline bool has_need_to_occupy_city() const;
  inline void clear_need_to_occupy_city();
  static const int kNeedToOccupyCityFieldNumber = 3;
  inline ::google::protobuf::uint32 need_to_occupy_city() const;
  inline void set_need_to_occupy_city(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_ContinueOccupyCitySuccess)
 private:
  inline void set_has_con_occupy_citys();
  inline void clear_has_con_occupy_citys();
  inline void set_has_exploit_value();
  inline void clear_has_exploit_value();
  inline void set_has_need_to_occupy_city();
  inline void clear_has_need_to_occupy_city();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 con_occupy_citys_;
  ::google::protobuf::uint32 exploit_value_;
  ::google::protobuf::uint32 need_to_occupy_city_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Fuben_2eproto();
  friend void protobuf_AssignDesc_Fuben_2eproto();
  friend void protobuf_ShutdownFile_Fuben_2eproto();

  void InitAsDefaultInstance();
  static GS2C_ContinueOccupyCitySuccess* default_instance_;
};
// ===================================================================


// ===================================================================

// GS2C_Resource_Stage

// optional uint32 stage_id = 1;
inline bool GS2C_Resource_Stage::has_stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Resource_Stage::set_has_stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Resource_Stage::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Resource_Stage::clear_stage_id() {
  stage_id_ = 0u;
  clear_has_stage_id();
}
inline ::google::protobuf::uint32 GS2C_Resource_Stage::stage_id() const {
  return stage_id_;
}
inline void GS2C_Resource_Stage::set_stage_id(::google::protobuf::uint32 value) {
  set_has_stage_id();
  stage_id_ = value;
}

// optional uint32 times = 2;
inline bool GS2C_Resource_Stage::has_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Resource_Stage::set_has_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Resource_Stage::clear_has_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Resource_Stage::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 GS2C_Resource_Stage::times() const {
  return times_;
}
inline void GS2C_Resource_Stage::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
}

// optional int64 data_valid_time = 3;
inline bool GS2C_Resource_Stage::has_data_valid_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_Resource_Stage::set_has_data_valid_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_Resource_Stage::clear_has_data_valid_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_Resource_Stage::clear_data_valid_time() {
  data_valid_time_ = GOOGLE_LONGLONG(0);
  clear_has_data_valid_time();
}
inline ::google::protobuf::int64 GS2C_Resource_Stage::data_valid_time() const {
  return data_valid_time_;
}
inline void GS2C_Resource_Stage::set_data_valid_time(::google::protobuf::int64 value) {
  set_has_data_valid_time();
  data_valid_time_ = value;
}

// optional uint32 quest_times = 4;
inline bool GS2C_Resource_Stage::has_quest_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GS2C_Resource_Stage::set_has_quest_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GS2C_Resource_Stage::clear_has_quest_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GS2C_Resource_Stage::clear_quest_times() {
  quest_times_ = 0u;
  clear_has_quest_times();
}
inline ::google::protobuf::uint32 GS2C_Resource_Stage::quest_times() const {
  return quest_times_;
}
inline void GS2C_Resource_Stage::set_quest_times(::google::protobuf::uint32 value) {
  set_has_quest_times();
  quest_times_ = value;
}

// -------------------------------------------------------------------

// Stage_Info

// optional uint32 stage_type = 1;
inline bool Stage_Info::has_stage_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Stage_Info::set_has_stage_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Stage_Info::clear_has_stage_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Stage_Info::clear_stage_type() {
  stage_type_ = 0u;
  clear_has_stage_type();
}
inline ::google::protobuf::uint32 Stage_Info::stage_type() const {
  return stage_type_;
}
inline void Stage_Info::set_stage_type(::google::protobuf::uint32 value) {
  set_has_stage_type();
  stage_type_ = value;
}

// optional uint32 pass_count = 2;
inline bool Stage_Info::has_pass_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Stage_Info::set_has_pass_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Stage_Info::clear_has_pass_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Stage_Info::clear_pass_count() {
  pass_count_ = 0u;
  clear_has_pass_count();
}
inline ::google::protobuf::uint32 Stage_Info::pass_count() const {
  return pass_count_;
}
inline void Stage_Info::set_pass_count(::google::protobuf::uint32 value) {
  set_has_pass_count();
  pass_count_ = value;
}

// optional uint32 is_take_reward = 3;
inline bool Stage_Info::has_is_take_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Stage_Info::set_has_is_take_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Stage_Info::clear_has_is_take_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Stage_Info::clear_is_take_reward() {
  is_take_reward_ = 0u;
  clear_has_is_take_reward();
}
inline ::google::protobuf::uint32 Stage_Info::is_take_reward() const {
  return is_take_reward_;
}
inline void Stage_Info::set_is_take_reward(::google::protobuf::uint32 value) {
  set_has_is_take_reward();
  is_take_reward_ = value;
}

// -------------------------------------------------------------------

// BranchFubenInfo

// optional uint32 stage_id = 1;
inline bool BranchFubenInfo::has_stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BranchFubenInfo::set_has_stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BranchFubenInfo::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BranchFubenInfo::clear_stage_id() {
  stage_id_ = 0u;
  clear_has_stage_id();
}
inline ::google::protobuf::uint32 BranchFubenInfo::stage_id() const {
  return stage_id_;
}
inline void BranchFubenInfo::set_stage_id(::google::protobuf::uint32 value) {
  set_has_stage_id();
  stage_id_ = value;
}

// optional bool is_passed = 2;
inline bool BranchFubenInfo::has_is_passed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BranchFubenInfo::set_has_is_passed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BranchFubenInfo::clear_has_is_passed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BranchFubenInfo::clear_is_passed() {
  is_passed_ = false;
  clear_has_is_passed();
}
inline bool BranchFubenInfo::is_passed() const {
  return is_passed_;
}
inline void BranchFubenInfo::set_is_passed(bool value) {
  set_has_is_passed();
  is_passed_ = value;
}

// optional bool is_take_star = 3;
inline bool BranchFubenInfo::has_is_take_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BranchFubenInfo::set_has_is_take_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BranchFubenInfo::clear_has_is_take_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BranchFubenInfo::clear_is_take_star() {
  is_take_star_ = false;
  clear_has_is_take_star();
}
inline bool BranchFubenInfo::is_take_star() const {
  return is_take_star_;
}
inline void BranchFubenInfo::set_is_take_star(bool value) {
  set_has_is_take_star();
  is_take_star_ = value;
}

// optional uint32 branch_group_id = 4;
inline bool BranchFubenInfo::has_branch_group_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BranchFubenInfo::set_has_branch_group_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BranchFubenInfo::clear_has_branch_group_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BranchFubenInfo::clear_branch_group_id() {
  branch_group_id_ = 0u;
  clear_has_branch_group_id();
}
inline ::google::protobuf::uint32 BranchFubenInfo::branch_group_id() const {
  return branch_group_id_;
}
inline void BranchFubenInfo::set_branch_group_id(::google::protobuf::uint32 value) {
  set_has_branch_group_id();
  branch_group_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_take_branch_fuben_star

// required uint32 branch_stageId = 1;
inline bool C2GS_take_branch_fuben_star::has_branch_stageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_take_branch_fuben_star::set_has_branch_stageid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_take_branch_fuben_star::clear_has_branch_stageid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_take_branch_fuben_star::clear_branch_stageid() {
  branch_stageid_ = 0u;
  clear_has_branch_stageid();
}
inline ::google::protobuf::uint32 C2GS_take_branch_fuben_star::branch_stageid() const {
  return branch_stageid_;
}
inline void C2GS_take_branch_fuben_star::set_branch_stageid(::google::protobuf::uint32 value) {
  set_has_branch_stageid();
  branch_stageid_ = value;
}

// -------------------------------------------------------------------

// GS2C_take_branch_fuben_star_rsp

// optional bool success = 1;
inline bool GS2C_take_branch_fuben_star_rsp::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_take_branch_fuben_star_rsp::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_take_branch_fuben_star_rsp::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_take_branch_fuben_star_rsp::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool GS2C_take_branch_fuben_star_rsp::success() const {
  return success_;
}
inline void GS2C_take_branch_fuben_star_rsp::set_success(bool value) {
  set_has_success();
  success_ = value;
}

// repeated .pb.StReward reward = 2;
inline int GS2C_take_branch_fuben_star_rsp::reward_size() const {
  return reward_.size();
}
inline void GS2C_take_branch_fuben_star_rsp::clear_reward() {
  reward_.Clear();
}
inline const ::pb::StReward& GS2C_take_branch_fuben_star_rsp::reward(int index) const {
  return reward_.Get(index);
}
inline ::pb::StReward* GS2C_take_branch_fuben_star_rsp::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::pb::StReward* GS2C_take_branch_fuben_star_rsp::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
GS2C_take_branch_fuben_star_rsp::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
GS2C_take_branch_fuben_star_rsp::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// HideFubenInfo

// required uint32 hide_stage_id = 1;
inline bool HideFubenInfo::has_hide_stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HideFubenInfo::set_has_hide_stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HideFubenInfo::clear_has_hide_stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HideFubenInfo::clear_hide_stage_id() {
  hide_stage_id_ = 0u;
  clear_has_hide_stage_id();
}
inline ::google::protobuf::uint32 HideFubenInfo::hide_stage_id() const {
  return hide_stage_id_;
}
inline void HideFubenInfo::set_hide_stage_id(::google::protobuf::uint32 value) {
  set_has_hide_stage_id();
  hide_stage_id_ = value;
}

// optional uint32 free_times = 2;
inline bool HideFubenInfo::has_free_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HideFubenInfo::set_has_free_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HideFubenInfo::clear_has_free_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HideFubenInfo::clear_free_times() {
  free_times_ = 0u;
  clear_has_free_times();
}
inline ::google::protobuf::uint32 HideFubenInfo::free_times() const {
  return free_times_;
}
inline void HideFubenInfo::set_free_times(::google::protobuf::uint32 value) {
  set_has_free_times();
  free_times_ = value;
}

// optional uint32 count_times = 3;
inline bool HideFubenInfo::has_count_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HideFubenInfo::set_has_count_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HideFubenInfo::clear_has_count_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HideFubenInfo::clear_count_times() {
  count_times_ = 0u;
  clear_has_count_times();
}
inline ::google::protobuf::uint32 HideFubenInfo::count_times() const {
  return count_times_;
}
inline void HideFubenInfo::set_count_times(::google::protobuf::uint32 value) {
  set_has_count_times();
  count_times_ = value;
}

// optional uint32 kill_monster = 4;
inline bool HideFubenInfo::has_kill_monster() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HideFubenInfo::set_has_kill_monster() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HideFubenInfo::clear_has_kill_monster() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HideFubenInfo::clear_kill_monster() {
  kill_monster_ = 0u;
  clear_has_kill_monster();
}
inline ::google::protobuf::uint32 HideFubenInfo::kill_monster() const {
  return kill_monster_;
}
inline void HideFubenInfo::set_kill_monster(::google::protobuf::uint32 value) {
  set_has_kill_monster();
  kill_monster_ = value;
}

// -------------------------------------------------------------------

// GS2C_Fuben_All_Info

// optional uint32 cur_fuben_id = 1;
inline bool GS2C_Fuben_All_Info::has_cur_fuben_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Fuben_All_Info::set_has_cur_fuben_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Fuben_All_Info::clear_has_cur_fuben_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Fuben_All_Info::clear_cur_fuben_id() {
  cur_fuben_id_ = 0u;
  clear_has_cur_fuben_id();
}
inline ::google::protobuf::uint32 GS2C_Fuben_All_Info::cur_fuben_id() const {
  return cur_fuben_id_;
}
inline void GS2C_Fuben_All_Info::set_cur_fuben_id(::google::protobuf::uint32 value) {
  set_has_cur_fuben_id();
  cur_fuben_id_ = value;
}

// optional uint32 cur_stage_id = 2;
inline bool GS2C_Fuben_All_Info::has_cur_stage_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Fuben_All_Info::set_has_cur_stage_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Fuben_All_Info::clear_has_cur_stage_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Fuben_All_Info::clear_cur_stage_id() {
  cur_stage_id_ = 0u;
  clear_has_cur_stage_id();
}
inline ::google::protobuf::uint32 GS2C_Fuben_All_Info::cur_stage_id() const {
  return cur_stage_id_;
}
inline void GS2C_Fuben_All_Info::set_cur_stage_id(::google::protobuf::uint32 value) {
  set_has_cur_stage_id();
  cur_stage_id_ = value;
}

// optional uint32 NR_stars = 3;
inline bool GS2C_Fuben_All_Info::has_nr_stars() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_Fuben_All_Info::set_has_nr_stars() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_Fuben_All_Info::clear_has_nr_stars() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_Fuben_All_Info::clear_nr_stars() {
  nr_stars_ = 0u;
  clear_has_nr_stars();
}
inline ::google::protobuf::uint32 GS2C_Fuben_All_Info::nr_stars() const {
  return nr_stars_;
}
inline void GS2C_Fuben_All_Info::set_nr_stars(::google::protobuf::uint32 value) {
  set_has_nr_stars();
  nr_stars_ = value;
}

// repeated .pb.Stage_Info pass_stage_info = 5;
inline int GS2C_Fuben_All_Info::pass_stage_info_size() const {
  return pass_stage_info_.size();
}
inline void GS2C_Fuben_All_Info::clear_pass_stage_info() {
  pass_stage_info_.Clear();
}
inline const ::pb::Stage_Info& GS2C_Fuben_All_Info::pass_stage_info(int index) const {
  return pass_stage_info_.Get(index);
}
inline ::pb::Stage_Info* GS2C_Fuben_All_Info::mutable_pass_stage_info(int index) {
  return pass_stage_info_.Mutable(index);
}
inline ::pb::Stage_Info* GS2C_Fuben_All_Info::add_pass_stage_info() {
  return pass_stage_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Stage_Info >&
GS2C_Fuben_All_Info::pass_stage_info() const {
  return pass_stage_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Stage_Info >*
GS2C_Fuben_All_Info::mutable_pass_stage_info() {
  return &pass_stage_info_;
}

// optional .pb.GS2C_Combat_Crusade crusade_info = 6;
inline bool GS2C_Fuben_All_Info::has_crusade_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GS2C_Fuben_All_Info::set_has_crusade_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GS2C_Fuben_All_Info::clear_has_crusade_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GS2C_Fuben_All_Info::clear_crusade_info() {
  if (crusade_info_ != NULL) crusade_info_->::pb::GS2C_Combat_Crusade::Clear();
  clear_has_crusade_info();
}
inline const ::pb::GS2C_Combat_Crusade& GS2C_Fuben_All_Info::crusade_info() const {
  return crusade_info_ != NULL ? *crusade_info_ : *default_instance_->crusade_info_;
}
inline ::pb::GS2C_Combat_Crusade* GS2C_Fuben_All_Info::mutable_crusade_info() {
  set_has_crusade_info();
  if (crusade_info_ == NULL) crusade_info_ = new ::pb::GS2C_Combat_Crusade;
  return crusade_info_;
}
inline ::pb::GS2C_Combat_Crusade* GS2C_Fuben_All_Info::release_crusade_info() {
  clear_has_crusade_info();
  ::pb::GS2C_Combat_Crusade* temp = crusade_info_;
  crusade_info_ = NULL;
  return temp;
}
inline void GS2C_Fuben_All_Info::set_allocated_crusade_info(::pb::GS2C_Combat_Crusade* crusade_info) {
  delete crusade_info_;
  crusade_info_ = crusade_info;
  if (crusade_info) {
    set_has_crusade_info();
  } else {
    clear_has_crusade_info();
  }
}

// optional .pb.GxDB_Combat_Crusade crusade_info_db = 7;
inline bool GS2C_Fuben_All_Info::has_crusade_info_db() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GS2C_Fuben_All_Info::set_has_crusade_info_db() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GS2C_Fuben_All_Info::clear_has_crusade_info_db() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GS2C_Fuben_All_Info::clear_crusade_info_db() {
  if (crusade_info_db_ != NULL) crusade_info_db_->::pb::GxDB_Combat_Crusade::Clear();
  clear_has_crusade_info_db();
}
inline const ::pb::GxDB_Combat_Crusade& GS2C_Fuben_All_Info::crusade_info_db() const {
  return crusade_info_db_ != NULL ? *crusade_info_db_ : *default_instance_->crusade_info_db_;
}
inline ::pb::GxDB_Combat_Crusade* GS2C_Fuben_All_Info::mutable_crusade_info_db() {
  set_has_crusade_info_db();
  if (crusade_info_db_ == NULL) crusade_info_db_ = new ::pb::GxDB_Combat_Crusade;
  return crusade_info_db_;
}
inline ::pb::GxDB_Combat_Crusade* GS2C_Fuben_All_Info::release_crusade_info_db() {
  clear_has_crusade_info_db();
  ::pb::GxDB_Combat_Crusade* temp = crusade_info_db_;
  crusade_info_db_ = NULL;
  return temp;
}
inline void GS2C_Fuben_All_Info::set_allocated_crusade_info_db(::pb::GxDB_Combat_Crusade* crusade_info_db) {
  delete crusade_info_db_;
  crusade_info_db_ = crusade_info_db;
  if (crusade_info_db) {
    set_has_crusade_info_db();
  } else {
    clear_has_crusade_info_db();
  }
}

// repeated .pb.BranchFubenInfo branch_info = 8;
inline int GS2C_Fuben_All_Info::branch_info_size() const {
  return branch_info_.size();
}
inline void GS2C_Fuben_All_Info::clear_branch_info() {
  branch_info_.Clear();
}
inline const ::pb::BranchFubenInfo& GS2C_Fuben_All_Info::branch_info(int index) const {
  return branch_info_.Get(index);
}
inline ::pb::BranchFubenInfo* GS2C_Fuben_All_Info::mutable_branch_info(int index) {
  return branch_info_.Mutable(index);
}
inline ::pb::BranchFubenInfo* GS2C_Fuben_All_Info::add_branch_info() {
  return branch_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::BranchFubenInfo >&
GS2C_Fuben_All_Info::branch_info() const {
  return branch_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::BranchFubenInfo >*
GS2C_Fuben_All_Info::mutable_branch_info() {
  return &branch_info_;
}

// -------------------------------------------------------------------

// C2GS_Enter_Stage

// required uint32 stage_id = 1;
inline bool C2GS_Enter_Stage::has_stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Enter_Stage::set_has_stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Enter_Stage::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Enter_Stage::clear_stage_id() {
  stage_id_ = 0u;
  clear_has_stage_id();
}
inline ::google::protobuf::uint32 C2GS_Enter_Stage::stage_id() const {
  return stage_id_;
}
inline void C2GS_Enter_Stage::set_stage_id(::google::protobuf::uint32 value) {
  set_has_stage_id();
  stage_id_ = value;
}

// repeated uint32 hero_id = 2;
inline int C2GS_Enter_Stage::hero_id_size() const {
  return hero_id_.size();
}
inline void C2GS_Enter_Stage::clear_hero_id() {
  hero_id_.Clear();
}
inline ::google::protobuf::uint32 C2GS_Enter_Stage::hero_id(int index) const {
  return hero_id_.Get(index);
}
inline void C2GS_Enter_Stage::set_hero_id(int index, ::google::protobuf::uint32 value) {
  hero_id_.Set(index, value);
}
inline void C2GS_Enter_Stage::add_hero_id(::google::protobuf::uint32 value) {
  hero_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
C2GS_Enter_Stage::hero_id() const {
  return hero_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
C2GS_Enter_Stage::mutable_hero_id() {
  return &hero_id_;
}

// -------------------------------------------------------------------

// GS2C_Pass_Stage

// required bool is_win = 1;
inline bool GS2C_Pass_Stage::has_is_win() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Pass_Stage::set_has_is_win() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Pass_Stage::clear_has_is_win() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Pass_Stage::clear_is_win() {
  is_win_ = false;
  clear_has_is_win();
}
inline bool GS2C_Pass_Stage::is_win() const {
  return is_win_;
}
inline void GS2C_Pass_Stage::set_is_win(bool value) {
  set_has_is_win();
  is_win_ = value;
}

// required uint32 stage_id = 2;
inline bool GS2C_Pass_Stage::has_stage_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Pass_Stage::set_has_stage_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Pass_Stage::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Pass_Stage::clear_stage_id() {
  stage_id_ = 0u;
  clear_has_stage_id();
}
inline ::google::protobuf::uint32 GS2C_Pass_Stage::stage_id() const {
  return stage_id_;
}
inline void GS2C_Pass_Stage::set_stage_id(::google::protobuf::uint32 value) {
  set_has_stage_id();
  stage_id_ = value;
}

// required uint32 fuben_id = 3;
inline bool GS2C_Pass_Stage::has_fuben_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_Pass_Stage::set_has_fuben_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_Pass_Stage::clear_has_fuben_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_Pass_Stage::clear_fuben_id() {
  fuben_id_ = 0u;
  clear_has_fuben_id();
}
inline ::google::protobuf::uint32 GS2C_Pass_Stage::fuben_id() const {
  return fuben_id_;
}
inline void GS2C_Pass_Stage::set_fuben_id(::google::protobuf::uint32 value) {
  set_has_fuben_id();
  fuben_id_ = value;
}

// repeated .pb.StReward rewards = 4;
inline int GS2C_Pass_Stage::rewards_size() const {
  return rewards_.size();
}
inline void GS2C_Pass_Stage::clear_rewards() {
  rewards_.Clear();
}
inline const ::pb::StReward& GS2C_Pass_Stage::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::pb::StReward* GS2C_Pass_Stage::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::pb::StReward* GS2C_Pass_Stage::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
GS2C_Pass_Stage::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
GS2C_Pass_Stage::mutable_rewards() {
  return &rewards_;
}

// -------------------------------------------------------------------

// C2GS_TakeResource

// required uint32 stage_id = 1;
inline bool C2GS_TakeResource::has_stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_TakeResource::set_has_stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_TakeResource::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_TakeResource::clear_stage_id() {
  stage_id_ = 0u;
  clear_has_stage_id();
}
inline ::google::protobuf::uint32 C2GS_TakeResource::stage_id() const {
  return stage_id_;
}
inline void C2GS_TakeResource::set_stage_id(::google::protobuf::uint32 value) {
  set_has_stage_id();
  stage_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_TakeResource

// repeated .pb.StReward reward = 1;
inline int GS2C_TakeResource::reward_size() const {
  return reward_.size();
}
inline void GS2C_TakeResource::clear_reward() {
  reward_.Clear();
}
inline const ::pb::StReward& GS2C_TakeResource::reward(int index) const {
  return reward_.Get(index);
}
inline ::pb::StReward* GS2C_TakeResource::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::pb::StReward* GS2C_TakeResource::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
GS2C_TakeResource::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
GS2C_TakeResource::mutable_reward() {
  return &reward_;
}

// optional .pb.GS2C_Resource_Stage info = 2;
inline bool GS2C_TakeResource::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_TakeResource::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_TakeResource::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_TakeResource::clear_info() {
  if (info_ != NULL) info_->::pb::GS2C_Resource_Stage::Clear();
  clear_has_info();
}
inline const ::pb::GS2C_Resource_Stage& GS2C_TakeResource::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::pb::GS2C_Resource_Stage* GS2C_TakeResource::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::pb::GS2C_Resource_Stage;
  return info_;
}
inline ::pb::GS2C_Resource_Stage* GS2C_TakeResource::release_info() {
  clear_has_info();
  ::pb::GS2C_Resource_Stage* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GS2C_TakeResource::set_allocated_info(::pb::GS2C_Resource_Stage* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// optional .pb.RR_T_RESULT result = 3;
inline bool GS2C_TakeResource::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_TakeResource::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_TakeResource::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_TakeResource::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::pb::RR_T_RESULT GS2C_TakeResource::result() const {
  return static_cast< ::pb::RR_T_RESULT >(result_);
}
inline void GS2C_TakeResource::set_result(::pb::RR_T_RESULT value) {
  assert(::pb::RR_T_RESULT_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// C2GS_ResetResource

// required uint32 stage_id = 1;
inline bool C2GS_ResetResource::has_stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_ResetResource::set_has_stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_ResetResource::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_ResetResource::clear_stage_id() {
  stage_id_ = 0u;
  clear_has_stage_id();
}
inline ::google::protobuf::uint32 C2GS_ResetResource::stage_id() const {
  return stage_id_;
}
inline void C2GS_ResetResource::set_stage_id(::google::protobuf::uint32 value) {
  set_has_stage_id();
  stage_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_ResetResource

// optional .pb.RR_RESULT result = 1;
inline bool GS2C_ResetResource::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_ResetResource::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_ResetResource::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_ResetResource::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::pb::RR_RESULT GS2C_ResetResource::result() const {
  return static_cast< ::pb::RR_RESULT >(result_);
}
inline void GS2C_ResetResource::set_result(::pb::RR_RESULT value) {
  assert(::pb::RR_RESULT_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional .pb.GS2C_Resource_Stage info = 2;
inline bool GS2C_ResetResource::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_ResetResource::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_ResetResource::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_ResetResource::clear_info() {
  if (info_ != NULL) info_->::pb::GS2C_Resource_Stage::Clear();
  clear_has_info();
}
inline const ::pb::GS2C_Resource_Stage& GS2C_ResetResource::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::pb::GS2C_Resource_Stage* GS2C_ResetResource::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::pb::GS2C_Resource_Stage;
  return info_;
}
inline ::pb::GS2C_Resource_Stage* GS2C_ResetResource::release_info() {
  clear_has_info();
  ::pb::GS2C_Resource_Stage* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GS2C_ResetResource::set_allocated_info(::pb::GS2C_Resource_Stage* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// C2GS_Select_Crusade

// required uint32 crusade_id = 1;
inline bool C2GS_Select_Crusade::has_crusade_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Select_Crusade::set_has_crusade_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Select_Crusade::clear_has_crusade_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Select_Crusade::clear_crusade_id() {
  crusade_id_ = 0u;
  clear_has_crusade_id();
}
inline ::google::protobuf::uint32 C2GS_Select_Crusade::crusade_id() const {
  return crusade_id_;
}
inline void C2GS_Select_Crusade::set_crusade_id(::google::protobuf::uint32 value) {
  set_has_crusade_id();
  crusade_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Select_Ret

// required bool isSelectSuc = 1;
inline bool GS2C_Select_Ret::has_isselectsuc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Select_Ret::set_has_isselectsuc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Select_Ret::clear_has_isselectsuc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Select_Ret::clear_isselectsuc() {
  isselectsuc_ = false;
  clear_has_isselectsuc();
}
inline bool GS2C_Select_Ret::isselectsuc() const {
  return isselectsuc_;
}
inline void GS2C_Select_Ret::set_isselectsuc(bool value) {
  set_has_isselectsuc();
  isselectsuc_ = value;
}

// optional .pb.GS2C_Combat_Crusade crusadeinfo = 2;
inline bool GS2C_Select_Ret::has_crusadeinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Select_Ret::set_has_crusadeinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Select_Ret::clear_has_crusadeinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Select_Ret::clear_crusadeinfo() {
  if (crusadeinfo_ != NULL) crusadeinfo_->::pb::GS2C_Combat_Crusade::Clear();
  clear_has_crusadeinfo();
}
inline const ::pb::GS2C_Combat_Crusade& GS2C_Select_Ret::crusadeinfo() const {
  return crusadeinfo_ != NULL ? *crusadeinfo_ : *default_instance_->crusadeinfo_;
}
inline ::pb::GS2C_Combat_Crusade* GS2C_Select_Ret::mutable_crusadeinfo() {
  set_has_crusadeinfo();
  if (crusadeinfo_ == NULL) crusadeinfo_ = new ::pb::GS2C_Combat_Crusade;
  return crusadeinfo_;
}
inline ::pb::GS2C_Combat_Crusade* GS2C_Select_Ret::release_crusadeinfo() {
  clear_has_crusadeinfo();
  ::pb::GS2C_Combat_Crusade* temp = crusadeinfo_;
  crusadeinfo_ = NULL;
  return temp;
}
inline void GS2C_Select_Ret::set_allocated_crusadeinfo(::pb::GS2C_Combat_Crusade* crusadeinfo) {
  delete crusadeinfo_;
  crusadeinfo_ = crusadeinfo;
  if (crusadeinfo) {
    set_has_crusadeinfo();
  } else {
    clear_has_crusadeinfo();
  }
}

// -------------------------------------------------------------------

// GS2C_Crusade_Reset

// optional bool reset = 1;
inline bool GS2C_Crusade_Reset::has_reset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Crusade_Reset::set_has_reset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Crusade_Reset::clear_has_reset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Crusade_Reset::clear_reset() {
  reset_ = false;
  clear_has_reset();
}
inline bool GS2C_Crusade_Reset::reset() const {
  return reset_;
}
inline void GS2C_Crusade_Reset::set_reset(bool value) {
  set_has_reset();
  reset_ = value;
}

// -------------------------------------------------------------------

// C2GS_Fog_Reward

// required uint32 id = 1;
inline bool C2GS_Fog_Reward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Fog_Reward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Fog_Reward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Fog_Reward::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 C2GS_Fog_Reward::id() const {
  return id_;
}
inline void C2GS_Fog_Reward::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Fog_Reward

// optional uint32 id = 3;
inline bool GS2C_Fog_Reward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Fog_Reward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Fog_Reward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Fog_Reward::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GS2C_Fog_Reward::id() const {
  return id_;
}
inline void GS2C_Fog_Reward::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional .pb.StReward rewards = 1;
inline bool GS2C_Fog_Reward::has_rewards() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Fog_Reward::set_has_rewards() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Fog_Reward::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Fog_Reward::clear_rewards() {
  if (rewards_ != NULL) rewards_->::pb::StReward::Clear();
  clear_has_rewards();
}
inline const ::pb::StReward& GS2C_Fog_Reward::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::pb::StReward* GS2C_Fog_Reward::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::pb::StReward;
  return rewards_;
}
inline ::pb::StReward* GS2C_Fog_Reward::release_rewards() {
  clear_has_rewards();
  ::pb::StReward* temp = rewards_;
  rewards_ = NULL;
  return temp;
}
inline void GS2C_Fog_Reward::set_allocated_rewards(::pb::StReward* rewards) {
  delete rewards_;
  rewards_ = rewards;
  if (rewards) {
    set_has_rewards();
  } else {
    clear_has_rewards();
  }
}

// optional .pb.RR_T_RESULT result = 2;
inline bool GS2C_Fog_Reward::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_Fog_Reward::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_Fog_Reward::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_Fog_Reward::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::pb::RR_T_RESULT GS2C_Fog_Reward::result() const {
  return static_cast< ::pb::RR_T_RESULT >(result_);
}
inline void GS2C_Fog_Reward::set_result(::pb::RR_T_RESULT value) {
  assert(::pb::RR_T_RESULT_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GS2C_Open_Fog_Info

// required uint32 type = 1;
inline bool GS2C_Open_Fog_Info::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Open_Fog_Info::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Open_Fog_Info::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Open_Fog_Info::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GS2C_Open_Fog_Info::type() const {
  return type_;
}
inline void GS2C_Open_Fog_Info::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint64 start_time = 2;
inline bool GS2C_Open_Fog_Info::has_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Open_Fog_Info::set_has_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Open_Fog_Info::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Open_Fog_Info::clear_start_time() {
  start_time_ = GOOGLE_ULONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::uint64 GS2C_Open_Fog_Info::start_time() const {
  return start_time_;
}
inline void GS2C_Open_Fog_Info::set_start_time(::google::protobuf::uint64 value) {
  set_has_start_time();
  start_time_ = value;
}

// -------------------------------------------------------------------

// Seige_Force_info

// optional uint32 army_id = 1;
inline bool Seige_Force_info::has_army_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Seige_Force_info::set_has_army_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Seige_Force_info::clear_has_army_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Seige_Force_info::clear_army_id() {
  army_id_ = 0u;
  clear_has_army_id();
}
inline ::google::protobuf::uint32 Seige_Force_info::army_id() const {
  return army_id_;
}
inline void Seige_Force_info::set_army_id(::google::protobuf::uint32 value) {
  set_has_army_id();
  army_id_ = value;
}

// optional uint32 left_times = 2;
inline bool Seige_Force_info::has_left_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Seige_Force_info::set_has_left_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Seige_Force_info::clear_has_left_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Seige_Force_info::clear_left_times() {
  left_times_ = 0u;
  clear_has_left_times();
}
inline ::google::protobuf::uint32 Seige_Force_info::left_times() const {
  return left_times_;
}
inline void Seige_Force_info::set_left_times(::google::protobuf::uint32 value) {
  set_has_left_times();
  left_times_ = value;
}

// optional uint32 cur_all_times = 3;
inline bool Seige_Force_info::has_cur_all_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Seige_Force_info::set_has_cur_all_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Seige_Force_info::clear_has_cur_all_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Seige_Force_info::clear_cur_all_times() {
  cur_all_times_ = 0u;
  clear_has_cur_all_times();
}
inline ::google::protobuf::uint32 Seige_Force_info::cur_all_times() const {
  return cur_all_times_;
}
inline void Seige_Force_info::set_cur_all_times(::google::protobuf::uint32 value) {
  set_has_cur_all_times();
  cur_all_times_ = value;
}

// optional uint32 level = 4;
inline bool Seige_Force_info::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Seige_Force_info::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Seige_Force_info::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Seige_Force_info::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Seige_Force_info::level() const {
  return level_;
}
inline void Seige_Force_info::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 cur_exp = 5;
inline bool Seige_Force_info::has_cur_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Seige_Force_info::set_has_cur_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Seige_Force_info::clear_has_cur_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Seige_Force_info::clear_cur_exp() {
  cur_exp_ = 0u;
  clear_has_cur_exp();
}
inline ::google::protobuf::uint32 Seige_Force_info::cur_exp() const {
  return cur_exp_;
}
inline void Seige_Force_info::set_cur_exp(::google::protobuf::uint32 value) {
  set_has_cur_exp();
  cur_exp_ = value;
}

// optional uint32 skill_id = 6;
inline bool Seige_Force_info::has_skill_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Seige_Force_info::set_has_skill_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Seige_Force_info::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Seige_Force_info::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 Seige_Force_info::skill_id() const {
  return skill_id_;
}
inline void Seige_Force_info::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// repeated uint32 specific_ids = 7;
inline int Seige_Force_info::specific_ids_size() const {
  return specific_ids_.size();
}
inline void Seige_Force_info::clear_specific_ids() {
  specific_ids_.Clear();
}
inline ::google::protobuf::uint32 Seige_Force_info::specific_ids(int index) const {
  return specific_ids_.Get(index);
}
inline void Seige_Force_info::set_specific_ids(int index, ::google::protobuf::uint32 value) {
  specific_ids_.Set(index, value);
}
inline void Seige_Force_info::add_specific_ids(::google::protobuf::uint32 value) {
  specific_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Seige_Force_info::specific_ids() const {
  return specific_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Seige_Force_info::mutable_specific_ids() {
  return &specific_ids_;
}

// repeated uint32 terrain = 8;
inline int Seige_Force_info::terrain_size() const {
  return terrain_.size();
}
inline void Seige_Force_info::clear_terrain() {
  terrain_.Clear();
}
inline ::google::protobuf::uint32 Seige_Force_info::terrain(int index) const {
  return terrain_.Get(index);
}
inline void Seige_Force_info::set_terrain(int index, ::google::protobuf::uint32 value) {
  terrain_.Set(index, value);
}
inline void Seige_Force_info::add_terrain(::google::protobuf::uint32 value) {
  terrain_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Seige_Force_info::terrain() const {
  return terrain_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Seige_Force_info::mutable_terrain() {
  return &terrain_;
}

// optional uint32 military_power = 9;
inline bool Seige_Force_info::has_military_power() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Seige_Force_info::set_has_military_power() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Seige_Force_info::clear_has_military_power() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Seige_Force_info::clear_military_power() {
  military_power_ = 0u;
  clear_has_military_power();
}
inline ::google::protobuf::uint32 Seige_Force_info::military_power() const {
  return military_power_;
}
inline void Seige_Force_info::set_military_power(::google::protobuf::uint32 value) {
  set_has_military_power();
  military_power_ = value;
}

// -------------------------------------------------------------------

// GS2C_Seige_Force_All_Info

// repeated .pb.Seige_Force_info info = 1;
inline int GS2C_Seige_Force_All_Info::info_size() const {
  return info_.size();
}
inline void GS2C_Seige_Force_All_Info::clear_info() {
  info_.Clear();
}
inline const ::pb::Seige_Force_info& GS2C_Seige_Force_All_Info::info(int index) const {
  return info_.Get(index);
}
inline ::pb::Seige_Force_info* GS2C_Seige_Force_All_Info::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::pb::Seige_Force_info* GS2C_Seige_Force_All_Info::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Seige_Force_info >&
GS2C_Seige_Force_All_Info::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Seige_Force_info >*
GS2C_Seige_Force_All_Info::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// C2GS_Seige_Force_Level_Up

// required uint32 army_id = 1;
inline bool C2GS_Seige_Force_Level_Up::has_army_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Seige_Force_Level_Up::set_has_army_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Seige_Force_Level_Up::clear_has_army_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Seige_Force_Level_Up::clear_army_id() {
  army_id_ = 0u;
  clear_has_army_id();
}
inline ::google::protobuf::uint32 C2GS_Seige_Force_Level_Up::army_id() const {
  return army_id_;
}
inline void C2GS_Seige_Force_Level_Up::set_army_id(::google::protobuf::uint32 value) {
  set_has_army_id();
  army_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Seige_Force_Level_Up_Rsp

// optional uint32 critical = 1;
inline bool GS2C_Seige_Force_Level_Up_Rsp::has_critical() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::set_has_critical() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::clear_has_critical() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::clear_critical() {
  critical_ = 0u;
  clear_has_critical();
}
inline ::google::protobuf::uint32 GS2C_Seige_Force_Level_Up_Rsp::critical() const {
  return critical_;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::set_critical(::google::protobuf::uint32 value) {
  set_has_critical();
  critical_ = value;
}

// optional uint32 exp_of_this_time = 2;
inline bool GS2C_Seige_Force_Level_Up_Rsp::has_exp_of_this_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::set_has_exp_of_this_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::clear_has_exp_of_this_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::clear_exp_of_this_time() {
  exp_of_this_time_ = 0u;
  clear_has_exp_of_this_time();
}
inline ::google::protobuf::uint32 GS2C_Seige_Force_Level_Up_Rsp::exp_of_this_time() const {
  return exp_of_this_time_;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::set_exp_of_this_time(::google::protobuf::uint32 value) {
  set_has_exp_of_this_time();
  exp_of_this_time_ = value;
}

// optional .pb.Seige_Force_info change_info = 3;
inline bool GS2C_Seige_Force_Level_Up_Rsp::has_change_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::set_has_change_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::clear_has_change_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::clear_change_info() {
  if (change_info_ != NULL) change_info_->::pb::Seige_Force_info::Clear();
  clear_has_change_info();
}
inline const ::pb::Seige_Force_info& GS2C_Seige_Force_Level_Up_Rsp::change_info() const {
  return change_info_ != NULL ? *change_info_ : *default_instance_->change_info_;
}
inline ::pb::Seige_Force_info* GS2C_Seige_Force_Level_Up_Rsp::mutable_change_info() {
  set_has_change_info();
  if (change_info_ == NULL) change_info_ = new ::pb::Seige_Force_info;
  return change_info_;
}
inline ::pb::Seige_Force_info* GS2C_Seige_Force_Level_Up_Rsp::release_change_info() {
  clear_has_change_info();
  ::pb::Seige_Force_info* temp = change_info_;
  change_info_ = NULL;
  return temp;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::set_allocated_change_info(::pb::Seige_Force_info* change_info) {
  delete change_info_;
  change_info_ = change_info;
  if (change_info) {
    set_has_change_info();
  } else {
    clear_has_change_info();
  }
}

// required .pb.E_SEIGE_FORCE result = 4;
inline bool GS2C_Seige_Force_Level_Up_Rsp::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GS2C_Seige_Force_Level_Up_Rsp::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::pb::E_SEIGE_FORCE GS2C_Seige_Force_Level_Up_Rsp::result() const {
  return static_cast< ::pb::E_SEIGE_FORCE >(result_);
}
inline void GS2C_Seige_Force_Level_Up_Rsp::set_result(::pb::E_SEIGE_FORCE value) {
  assert(::pb::E_SEIGE_FORCE_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// C2GS_Seige_Force_Buy_Army

// required uint32 army_id = 1;
inline bool C2GS_Seige_Force_Buy_Army::has_army_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Seige_Force_Buy_Army::set_has_army_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Seige_Force_Buy_Army::clear_has_army_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Seige_Force_Buy_Army::clear_army_id() {
  army_id_ = 0u;
  clear_has_army_id();
}
inline ::google::protobuf::uint32 C2GS_Seige_Force_Buy_Army::army_id() const {
  return army_id_;
}
inline void C2GS_Seige_Force_Buy_Army::set_army_id(::google::protobuf::uint32 value) {
  set_has_army_id();
  army_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Seige_Force_Buy_Army_Rsp

// required uint32 army_id = 1;
inline bool GS2C_Seige_Force_Buy_Army_Rsp::has_army_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Seige_Force_Buy_Army_Rsp::set_has_army_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Seige_Force_Buy_Army_Rsp::clear_has_army_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Seige_Force_Buy_Army_Rsp::clear_army_id() {
  army_id_ = 0u;
  clear_has_army_id();
}
inline ::google::protobuf::uint32 GS2C_Seige_Force_Buy_Army_Rsp::army_id() const {
  return army_id_;
}
inline void GS2C_Seige_Force_Buy_Army_Rsp::set_army_id(::google::protobuf::uint32 value) {
  set_has_army_id();
  army_id_ = value;
}

// optional .pb.E_SEIGE_FORCE result = 2;
inline bool GS2C_Seige_Force_Buy_Army_Rsp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Seige_Force_Buy_Army_Rsp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Seige_Force_Buy_Army_Rsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Seige_Force_Buy_Army_Rsp::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::pb::E_SEIGE_FORCE GS2C_Seige_Force_Buy_Army_Rsp::result() const {
  return static_cast< ::pb::E_SEIGE_FORCE >(result_);
}
inline void GS2C_Seige_Force_Buy_Army_Rsp::set_result(::pb::E_SEIGE_FORCE value) {
  assert(::pb::E_SEIGE_FORCE_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// C2GS_Seige_Force_Use_Army

// required uint32 army_id = 1;
inline bool C2GS_Seige_Force_Use_Army::has_army_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Seige_Force_Use_Army::set_has_army_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Seige_Force_Use_Army::clear_has_army_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Seige_Force_Use_Army::clear_army_id() {
  army_id_ = 0u;
  clear_has_army_id();
}
inline ::google::protobuf::uint32 C2GS_Seige_Force_Use_Army::army_id() const {
  return army_id_;
}
inline void C2GS_Seige_Force_Use_Army::set_army_id(::google::protobuf::uint32 value) {
  set_has_army_id();
  army_id_ = value;
}

// required uint32 group_unique_id = 2;
inline bool C2GS_Seige_Force_Use_Army::has_group_unique_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2GS_Seige_Force_Use_Army::set_has_group_unique_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2GS_Seige_Force_Use_Army::clear_has_group_unique_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2GS_Seige_Force_Use_Army::clear_group_unique_id() {
  group_unique_id_ = 0u;
  clear_has_group_unique_id();
}
inline ::google::protobuf::uint32 C2GS_Seige_Force_Use_Army::group_unique_id() const {
  return group_unique_id_;
}
inline void C2GS_Seige_Force_Use_Army::set_group_unique_id(::google::protobuf::uint32 value) {
  set_has_group_unique_id();
  group_unique_id_ = value;
}

// optional uint32 cityid = 3;
inline bool C2GS_Seige_Force_Use_Army::has_cityid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2GS_Seige_Force_Use_Army::set_has_cityid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2GS_Seige_Force_Use_Army::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2GS_Seige_Force_Use_Army::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 C2GS_Seige_Force_Use_Army::cityid() const {
  return cityid_;
}
inline void C2GS_Seige_Force_Use_Army::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
}

// -------------------------------------------------------------------

// GS2C_Seige_Force_Use_Army_Rsp

// required uint32 army_id = 1;
inline bool GS2C_Seige_Force_Use_Army_Rsp::has_army_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Seige_Force_Use_Army_Rsp::set_has_army_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Seige_Force_Use_Army_Rsp::clear_has_army_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Seige_Force_Use_Army_Rsp::clear_army_id() {
  army_id_ = 0u;
  clear_has_army_id();
}
inline ::google::protobuf::uint32 GS2C_Seige_Force_Use_Army_Rsp::army_id() const {
  return army_id_;
}
inline void GS2C_Seige_Force_Use_Army_Rsp::set_army_id(::google::protobuf::uint32 value) {
  set_has_army_id();
  army_id_ = value;
}

// optional .pb.E_SEIGE_FORCE result = 2;
inline bool GS2C_Seige_Force_Use_Army_Rsp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Seige_Force_Use_Army_Rsp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Seige_Force_Use_Army_Rsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Seige_Force_Use_Army_Rsp::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::pb::E_SEIGE_FORCE GS2C_Seige_Force_Use_Army_Rsp::result() const {
  return static_cast< ::pb::E_SEIGE_FORCE >(result_);
}
inline void GS2C_Seige_Force_Use_Army_Rsp::set_result(::pb::E_SEIGE_FORCE value) {
  assert(::pb::E_SEIGE_FORCE_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GxDB_Seige_Force_Info_Pack

// repeated .pb.Seige_Force_info info = 1;
inline int GxDB_Seige_Force_Info_Pack::info_size() const {
  return info_.size();
}
inline void GxDB_Seige_Force_Info_Pack::clear_info() {
  info_.Clear();
}
inline const ::pb::Seige_Force_info& GxDB_Seige_Force_Info_Pack::info(int index) const {
  return info_.Get(index);
}
inline ::pb::Seige_Force_info* GxDB_Seige_Force_Info_Pack::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::pb::Seige_Force_info* GxDB_Seige_Force_Info_Pack::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Seige_Force_info >&
GxDB_Seige_Force_Info_Pack::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Seige_Force_info >*
GxDB_Seige_Force_Info_Pack::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// C2GS_Take_Month_Card_Reward

// required uint32 card_type = 1;
inline bool C2GS_Take_Month_Card_Reward::has_card_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Take_Month_Card_Reward::set_has_card_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Take_Month_Card_Reward::clear_has_card_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Take_Month_Card_Reward::clear_card_type() {
  card_type_ = 0u;
  clear_has_card_type();
}
inline ::google::protobuf::uint32 C2GS_Take_Month_Card_Reward::card_type() const {
  return card_type_;
}
inline void C2GS_Take_Month_Card_Reward::set_card_type(::google::protobuf::uint32 value) {
  set_has_card_type();
  card_type_ = value;
}

// -------------------------------------------------------------------

// GS2C_Take_Month_Card_Reward_Rsp

// required uint32 ret = 1;
inline bool GS2C_Take_Month_Card_Reward_Rsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Take_Month_Card_Reward_Rsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Take_Month_Card_Reward_Rsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Take_Month_Card_Reward_Rsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 GS2C_Take_Month_Card_Reward_Rsp::ret() const {
  return ret_;
}
inline void GS2C_Take_Month_Card_Reward_Rsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 card_type = 2;
inline bool GS2C_Take_Month_Card_Reward_Rsp::has_card_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Take_Month_Card_Reward_Rsp::set_has_card_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Take_Month_Card_Reward_Rsp::clear_has_card_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Take_Month_Card_Reward_Rsp::clear_card_type() {
  card_type_ = 0u;
  clear_has_card_type();
}
inline ::google::protobuf::uint32 GS2C_Take_Month_Card_Reward_Rsp::card_type() const {
  return card_type_;
}
inline void GS2C_Take_Month_Card_Reward_Rsp::set_card_type(::google::protobuf::uint32 value) {
  set_has_card_type();
  card_type_ = value;
}

// repeated .pb.StReward reward = 3;
inline int GS2C_Take_Month_Card_Reward_Rsp::reward_size() const {
  return reward_.size();
}
inline void GS2C_Take_Month_Card_Reward_Rsp::clear_reward() {
  reward_.Clear();
}
inline const ::pb::StReward& GS2C_Take_Month_Card_Reward_Rsp::reward(int index) const {
  return reward_.Get(index);
}
inline ::pb::StReward* GS2C_Take_Month_Card_Reward_Rsp::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::pb::StReward* GS2C_Take_Month_Card_Reward_Rsp::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
GS2C_Take_Month_Card_Reward_Rsp::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
GS2C_Take_Month_Card_Reward_Rsp::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// BaseContinueMsg

// optional uint32 con_occupy_citys = 1;
inline bool BaseContinueMsg::has_con_occupy_citys() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BaseContinueMsg::set_has_con_occupy_citys() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BaseContinueMsg::clear_has_con_occupy_citys() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BaseContinueMsg::clear_con_occupy_citys() {
  con_occupy_citys_ = 0u;
  clear_has_con_occupy_citys();
}
inline ::google::protobuf::uint32 BaseContinueMsg::con_occupy_citys() const {
  return con_occupy_citys_;
}
inline void BaseContinueMsg::set_con_occupy_citys(::google::protobuf::uint32 value) {
  set_has_con_occupy_citys();
  con_occupy_citys_ = value;
}

// optional uint64 active_time = 2;
inline bool BaseContinueMsg::has_active_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BaseContinueMsg::set_has_active_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BaseContinueMsg::clear_has_active_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BaseContinueMsg::clear_active_time() {
  active_time_ = GOOGLE_ULONGLONG(0);
  clear_has_active_time();
}
inline ::google::protobuf::uint64 BaseContinueMsg::active_time() const {
  return active_time_;
}
inline void BaseContinueMsg::set_active_time(::google::protobuf::uint64 value) {
  set_has_active_time();
  active_time_ = value;
}

// optional uint64 finish_time = 3;
inline bool BaseContinueMsg::has_finish_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BaseContinueMsg::set_has_finish_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BaseContinueMsg::clear_has_finish_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BaseContinueMsg::clear_finish_time() {
  finish_time_ = GOOGLE_ULONGLONG(0);
  clear_has_finish_time();
}
inline ::google::protobuf::uint64 BaseContinueMsg::finish_time() const {
  return finish_time_;
}
inline void BaseContinueMsg::set_finish_time(::google::protobuf::uint64 value) {
  set_has_finish_time();
  finish_time_ = value;
}

// -------------------------------------------------------------------

// GS2C_ContinueOccupyCity

// required .pb.BaseContinueMsg info = 1;
inline bool GS2C_ContinueOccupyCity::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_ContinueOccupyCity::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_ContinueOccupyCity::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_ContinueOccupyCity::clear_info() {
  if (info_ != NULL) info_->::pb::BaseContinueMsg::Clear();
  clear_has_info();
}
inline const ::pb::BaseContinueMsg& GS2C_ContinueOccupyCity::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::pb::BaseContinueMsg* GS2C_ContinueOccupyCity::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::pb::BaseContinueMsg;
  return info_;
}
inline ::pb::BaseContinueMsg* GS2C_ContinueOccupyCity::release_info() {
  clear_has_info();
  ::pb::BaseContinueMsg* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GS2C_ContinueOccupyCity::set_allocated_info(::pb::BaseContinueMsg* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// GxDB_ContinueOccupyCityInfo

// repeated .pb.BaseContinueMsg info = 1;
inline int GxDB_ContinueOccupyCityInfo::info_size() const {
  return info_.size();
}
inline void GxDB_ContinueOccupyCityInfo::clear_info() {
  info_.Clear();
}
inline const ::pb::BaseContinueMsg& GxDB_ContinueOccupyCityInfo::info(int index) const {
  return info_.Get(index);
}
inline ::pb::BaseContinueMsg* GxDB_ContinueOccupyCityInfo::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::pb::BaseContinueMsg* GxDB_ContinueOccupyCityInfo::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::BaseContinueMsg >&
GxDB_ContinueOccupyCityInfo::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::BaseContinueMsg >*
GxDB_ContinueOccupyCityInfo::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// GS2C_ContinueOccupyCitySuccess

// optional uint32 con_occupy_citys = 1;
inline bool GS2C_ContinueOccupyCitySuccess::has_con_occupy_citys() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_ContinueOccupyCitySuccess::set_has_con_occupy_citys() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_ContinueOccupyCitySuccess::clear_has_con_occupy_citys() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_ContinueOccupyCitySuccess::clear_con_occupy_citys() {
  con_occupy_citys_ = 0u;
  clear_has_con_occupy_citys();
}
inline ::google::protobuf::uint32 GS2C_ContinueOccupyCitySuccess::con_occupy_citys() const {
  return con_occupy_citys_;
}
inline void GS2C_ContinueOccupyCitySuccess::set_con_occupy_citys(::google::protobuf::uint32 value) {
  set_has_con_occupy_citys();
  con_occupy_citys_ = value;
}

// optional uint32 exploit_value = 2;
inline bool GS2C_ContinueOccupyCitySuccess::has_exploit_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_ContinueOccupyCitySuccess::set_has_exploit_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_ContinueOccupyCitySuccess::clear_has_exploit_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_ContinueOccupyCitySuccess::clear_exploit_value() {
  exploit_value_ = 0u;
  clear_has_exploit_value();
}
inline ::google::protobuf::uint32 GS2C_ContinueOccupyCitySuccess::exploit_value() const {
  return exploit_value_;
}
inline void GS2C_ContinueOccupyCitySuccess::set_exploit_value(::google::protobuf::uint32 value) {
  set_has_exploit_value();
  exploit_value_ = value;
}

// optional uint32 need_to_occupy_city = 3;
inline bool GS2C_ContinueOccupyCitySuccess::has_need_to_occupy_city() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_ContinueOccupyCitySuccess::set_has_need_to_occupy_city() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_ContinueOccupyCitySuccess::clear_has_need_to_occupy_city() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_ContinueOccupyCitySuccess::clear_need_to_occupy_city() {
  need_to_occupy_city_ = 0u;
  clear_has_need_to_occupy_city();
}
inline ::google::protobuf::uint32 GS2C_ContinueOccupyCitySuccess::need_to_occupy_city() const {
  return need_to_occupy_city_;
}
inline void GS2C_ContinueOccupyCitySuccess::set_need_to_occupy_city(::google::protobuf::uint32 value) {
  set_has_need_to_occupy_city();
  need_to_occupy_city_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::RR_T_RESULT>() {
  return ::pb::RR_T_RESULT_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::RR_RESULT>() {
  return ::pb::RR_RESULT_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::E_SEIGE_FORCE>() {
  return ::pb::E_SEIGE_FORCE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Fuben_2eproto__INCLUDED
