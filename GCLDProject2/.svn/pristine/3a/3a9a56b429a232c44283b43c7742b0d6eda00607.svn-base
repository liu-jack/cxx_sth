// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mail.proto

#ifndef PROTOBUF_Mail_2eproto__INCLUDED
#define PROTOBUF_Mail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommomDef.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Mail_2eproto();
void protobuf_AssignDesc_Mail_2eproto();
void protobuf_ShutdownFile_Mail_2eproto();

class Mail_UserMailInfo;
class GS2C_Mail_NewMail;
class GS2C_Mail_MailList;
class C2GS_Mail_ReadMail;
class C2GS_Mail_DelMail;
class GS2C_Mail_Option_respon;
class GS2C_Mail_Option_respon_opt_result;
class C2GS_Exchange_Gift_Code;
class C2GS_Mail_RecvMailAward;
class GS2C_Mail_RecvMailAward;

enum MailStateType {
  MAIL_STATE_NEW = 0,
  MAIL_STATE_RECV_NEW = 1,
  MAIL_STATE_HAD_READ = 2,
  MAIL_STATE_COUNT = 3
};
bool MailStateType_IsValid(int value);
const MailStateType MailStateType_MIN = MAIL_STATE_NEW;
const MailStateType MailStateType_MAX = MAIL_STATE_COUNT;
const int MailStateType_ARRAYSIZE = MailStateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailStateType_descriptor();
inline const ::std::string& MailStateType_Name(MailStateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailStateType_descriptor(), value);
}
inline bool MailStateType_Parse(
    const ::std::string& name, MailStateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailStateType>(
    MailStateType_descriptor(), name, value);
}
enum MailType {
  MAIL_PLATFROM = 1,
  MAIL_SYSMAIL = 2,
  MAIL_PLATFROMFIX = 3,
  MAIL_PLATGIFT = 4,
  MAIL_JUST_TIPS = 5
};
bool MailType_IsValid(int value);
const MailType MailType_MIN = MAIL_PLATFROM;
const MailType MailType_MAX = MAIL_JUST_TIPS;
const int MailType_ARRAYSIZE = MailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailType_descriptor();
inline const ::std::string& MailType_Name(MailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailType_descriptor(), value);
}
inline bool MailType_Parse(
    const ::std::string& name, MailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailType>(
    MailType_descriptor(), name, value);
}
enum MailSendType {
  MAIL_SEND_ONLINE = 1,
  MAIL_SEND_ALL = 2
};
bool MailSendType_IsValid(int value);
const MailSendType MailSendType_MIN = MAIL_SEND_ONLINE;
const MailSendType MailSendType_MAX = MAIL_SEND_ALL;
const int MailSendType_ARRAYSIZE = MailSendType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailSendType_descriptor();
inline const ::std::string& MailSendType_Name(MailSendType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailSendType_descriptor(), value);
}
inline bool MailSendType_Parse(
    const ::std::string& name, MailSendType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailSendType>(
    MailSendType_descriptor(), name, value);
}
// ===================================================================

class Mail_UserMailInfo : public ::google::protobuf::Message {
 public:
  Mail_UserMailInfo();
  virtual ~Mail_UserMailInfo();

  Mail_UserMailInfo(const Mail_UserMailInfo& from);

  inline Mail_UserMailInfo& operator=(const Mail_UserMailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mail_UserMailInfo& default_instance();

  void Swap(Mail_UserMailInfo* other);

  // implements Message ----------------------------------------------

  Mail_UserMailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mail_UserMailInfo& from);
  void MergeFrom(const Mail_UserMailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 mail_id = 2;
  inline bool has_mail_id() const;
  inline void clear_mail_id();
  static const int kMailIdFieldNumber = 2;
  inline ::google::protobuf::uint64 mail_id() const;
  inline void set_mail_id(::google::protobuf::uint64 value);

  // optional int32 mail_type = 3;
  inline bool has_mail_type() const;
  inline void clear_mail_type();
  static const int kMailTypeFieldNumber = 3;
  inline ::google::protobuf::int32 mail_type() const;
  inline void set_mail_type(::google::protobuf::int32 value);

  // optional int32 mail_state = 4;
  inline bool has_mail_state() const;
  inline void clear_mail_state();
  static const int kMailStateFieldNumber = 4;
  inline ::google::protobuf::int32 mail_state() const;
  inline void set_mail_state(::google::protobuf::int32 value);

  // optional int32 mail_operate = 5;
  inline bool has_mail_operate() const;
  inline void clear_mail_operate();
  static const int kMailOperateFieldNumber = 5;
  inline ::google::protobuf::int32 mail_operate() const;
  inline void set_mail_operate(::google::protobuf::int32 value);

  // optional uint64 send_time = 6;
  inline bool has_send_time() const;
  inline void clear_send_time();
  static const int kSendTimeFieldNumber = 6;
  inline ::google::protobuf::uint64 send_time() const;
  inline void set_send_time(::google::protobuf::uint64 value);

  // optional string title = 7;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 7;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string content = 8;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 8;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional int32 title_id = 9;
  inline bool has_title_id() const;
  inline void clear_title_id();
  static const int kTitleIdFieldNumber = 9;
  inline ::google::protobuf::int32 title_id() const;
  inline void set_title_id(::google::protobuf::int32 value);

  // optional int32 content_id = 10;
  inline bool has_content_id() const;
  inline void clear_content_id();
  static const int kContentIdFieldNumber = 10;
  inline ::google::protobuf::int32 content_id() const;
  inline void set_content_id(::google::protobuf::int32 value);

  // optional string items = 11;
  inline bool has_items() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 11;
  inline const ::std::string& items() const;
  inline void set_items(const ::std::string& value);
  inline void set_items(const char* value);
  inline void set_items(const char* value, size_t size);
  inline ::std::string* mutable_items();
  inline ::std::string* release_items();
  inline void set_allocated_items(::std::string* items);

  // optional bool is_take = 12;
  inline bool has_is_take() const;
  inline void clear_is_take();
  static const int kIsTakeFieldNumber = 12;
  inline bool is_take() const;
  inline void set_is_take(bool value);

  // @@protoc_insertion_point(class_scope:pb.Mail_UserMailInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  inline void set_has_mail_type();
  inline void clear_has_mail_type();
  inline void set_has_mail_state();
  inline void clear_has_mail_state();
  inline void set_has_mail_operate();
  inline void clear_has_mail_operate();
  inline void set_has_send_time();
  inline void clear_has_send_time();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_title_id();
  inline void clear_has_title_id();
  inline void set_has_content_id();
  inline void clear_has_content_id();
  inline void set_has_items();
  inline void clear_has_items();
  inline void set_has_is_take();
  inline void clear_has_is_take();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 mail_id_;
  ::google::protobuf::int32 mail_type_;
  ::google::protobuf::int32 mail_state_;
  ::google::protobuf::uint64 send_time_;
  ::std::string* title_;
  ::google::protobuf::int32 mail_operate_;
  ::google::protobuf::int32 title_id_;
  ::std::string* content_;
  ::std::string* items_;
  ::google::protobuf::int32 content_id_;
  bool is_take_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static Mail_UserMailInfo* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Mail_NewMail : public ::google::protobuf::Message {
 public:
  GS2C_Mail_NewMail();
  virtual ~GS2C_Mail_NewMail();

  GS2C_Mail_NewMail(const GS2C_Mail_NewMail& from);

  inline GS2C_Mail_NewMail& operator=(const GS2C_Mail_NewMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Mail_NewMail& default_instance();

  void Swap(GS2C_Mail_NewMail* other);

  // implements Message ----------------------------------------------

  GS2C_Mail_NewMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Mail_NewMail& from);
  void MergeFrom(const GS2C_Mail_NewMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.Mail_UserMailInfo new_mail = 1;
  inline int new_mail_size() const;
  inline void clear_new_mail();
  static const int kNewMailFieldNumber = 1;
  inline const ::pb::Mail_UserMailInfo& new_mail(int index) const;
  inline ::pb::Mail_UserMailInfo* mutable_new_mail(int index);
  inline ::pb::Mail_UserMailInfo* add_new_mail();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Mail_UserMailInfo >&
      new_mail() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Mail_UserMailInfo >*
      mutable_new_mail();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Mail_NewMail)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::Mail_UserMailInfo > new_mail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Mail_NewMail* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Mail_MailList : public ::google::protobuf::Message {
 public:
  GS2C_Mail_MailList();
  virtual ~GS2C_Mail_MailList();

  GS2C_Mail_MailList(const GS2C_Mail_MailList& from);

  inline GS2C_Mail_MailList& operator=(const GS2C_Mail_MailList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Mail_MailList& default_instance();

  void Swap(GS2C_Mail_MailList* other);

  // implements Message ----------------------------------------------

  GS2C_Mail_MailList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Mail_MailList& from);
  void MergeFrom(const GS2C_Mail_MailList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.Mail_UserMailInfo mail_list = 1;
  inline int mail_list_size() const;
  inline void clear_mail_list();
  static const int kMailListFieldNumber = 1;
  inline const ::pb::Mail_UserMailInfo& mail_list(int index) const;
  inline ::pb::Mail_UserMailInfo* mutable_mail_list(int index);
  inline ::pb::Mail_UserMailInfo* add_mail_list();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Mail_UserMailInfo >&
      mail_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Mail_UserMailInfo >*
      mutable_mail_list();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Mail_MailList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::Mail_UserMailInfo > mail_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Mail_MailList* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Mail_ReadMail : public ::google::protobuf::Message {
 public:
  C2GS_Mail_ReadMail();
  virtual ~C2GS_Mail_ReadMail();

  C2GS_Mail_ReadMail(const C2GS_Mail_ReadMail& from);

  inline C2GS_Mail_ReadMail& operator=(const C2GS_Mail_ReadMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Mail_ReadMail& default_instance();

  void Swap(C2GS_Mail_ReadMail* other);

  // implements Message ----------------------------------------------

  C2GS_Mail_ReadMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Mail_ReadMail& from);
  void MergeFrom(const C2GS_Mail_ReadMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 mail_ids = 1;
  inline int mail_ids_size() const;
  inline void clear_mail_ids();
  static const int kMailIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 mail_ids(int index) const;
  inline void set_mail_ids(int index, ::google::protobuf::uint64 value);
  inline void add_mail_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mail_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mail_ids();

  // @@protoc_insertion_point(class_scope:pb.C2GS_Mail_ReadMail)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mail_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Mail_ReadMail* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Mail_DelMail : public ::google::protobuf::Message {
 public:
  C2GS_Mail_DelMail();
  virtual ~C2GS_Mail_DelMail();

  C2GS_Mail_DelMail(const C2GS_Mail_DelMail& from);

  inline C2GS_Mail_DelMail& operator=(const C2GS_Mail_DelMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Mail_DelMail& default_instance();

  void Swap(C2GS_Mail_DelMail* other);

  // implements Message ----------------------------------------------

  C2GS_Mail_DelMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Mail_DelMail& from);
  void MergeFrom(const C2GS_Mail_DelMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 mail_ids = 1;
  inline int mail_ids_size() const;
  inline void clear_mail_ids();
  static const int kMailIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 mail_ids(int index) const;
  inline void set_mail_ids(int index, ::google::protobuf::uint64 value);
  inline void add_mail_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mail_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mail_ids();

  // @@protoc_insertion_point(class_scope:pb.C2GS_Mail_DelMail)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mail_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Mail_DelMail* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Mail_Option_respon_opt_result : public ::google::protobuf::Message {
 public:
  GS2C_Mail_Option_respon_opt_result();
  virtual ~GS2C_Mail_Option_respon_opt_result();

  GS2C_Mail_Option_respon_opt_result(const GS2C_Mail_Option_respon_opt_result& from);

  inline GS2C_Mail_Option_respon_opt_result& operator=(const GS2C_Mail_Option_respon_opt_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Mail_Option_respon_opt_result& default_instance();

  void Swap(GS2C_Mail_Option_respon_opt_result* other);

  // implements Message ----------------------------------------------

  GS2C_Mail_Option_respon_opt_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Mail_Option_respon_opt_result& from);
  void MergeFrom(const GS2C_Mail_Option_respon_opt_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 opt_id = 1;
  inline bool has_opt_id() const;
  inline void clear_opt_id();
  static const int kOptIdFieldNumber = 1;
  inline ::google::protobuf::uint64 opt_id() const;
  inline void set_opt_id(::google::protobuf::uint64 value);

  // required int32 opt_res = 2;
  inline bool has_opt_res() const;
  inline void clear_opt_res();
  static const int kOptResFieldNumber = 2;
  inline ::google::protobuf::int32 opt_res() const;
  inline void set_opt_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Mail_Option_respon.opt_result)
 private:
  inline void set_has_opt_id();
  inline void clear_has_opt_id();
  inline void set_has_opt_res();
  inline void clear_has_opt_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 opt_id_;
  ::google::protobuf::int32 opt_res_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Mail_Option_respon_opt_result* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Mail_Option_respon : public ::google::protobuf::Message {
 public:
  GS2C_Mail_Option_respon();
  virtual ~GS2C_Mail_Option_respon();

  GS2C_Mail_Option_respon(const GS2C_Mail_Option_respon& from);

  inline GS2C_Mail_Option_respon& operator=(const GS2C_Mail_Option_respon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Mail_Option_respon& default_instance();

  void Swap(GS2C_Mail_Option_respon* other);

  // implements Message ----------------------------------------------

  GS2C_Mail_Option_respon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Mail_Option_respon& from);
  void MergeFrom(const GS2C_Mail_Option_respon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GS2C_Mail_Option_respon_opt_result opt_result;

  // accessors -------------------------------------------------------

  // repeated .pb.GS2C_Mail_Option_respon.opt_result opts_res = 1;
  inline int opts_res_size() const;
  inline void clear_opts_res();
  static const int kOptsResFieldNumber = 1;
  inline const ::pb::GS2C_Mail_Option_respon_opt_result& opts_res(int index) const;
  inline ::pb::GS2C_Mail_Option_respon_opt_result* mutable_opts_res(int index);
  inline ::pb::GS2C_Mail_Option_respon_opt_result* add_opts_res();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::GS2C_Mail_Option_respon_opt_result >&
      opts_res() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::GS2C_Mail_Option_respon_opt_result >*
      mutable_opts_res();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Mail_Option_respon)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::GS2C_Mail_Option_respon_opt_result > opts_res_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Mail_Option_respon* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Exchange_Gift_Code : public ::google::protobuf::Message {
 public:
  C2GS_Exchange_Gift_Code();
  virtual ~C2GS_Exchange_Gift_Code();

  C2GS_Exchange_Gift_Code(const C2GS_Exchange_Gift_Code& from);

  inline C2GS_Exchange_Gift_Code& operator=(const C2GS_Exchange_Gift_Code& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Exchange_Gift_Code& default_instance();

  void Swap(C2GS_Exchange_Gift_Code* other);

  // implements Message ----------------------------------------------

  C2GS_Exchange_Gift_Code* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Exchange_Gift_Code& from);
  void MergeFrom(const C2GS_Exchange_Gift_Code& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string giftCode = 1;
  inline bool has_giftcode() const;
  inline void clear_giftcode();
  static const int kGiftCodeFieldNumber = 1;
  inline const ::std::string& giftcode() const;
  inline void set_giftcode(const ::std::string& value);
  inline void set_giftcode(const char* value);
  inline void set_giftcode(const char* value, size_t size);
  inline ::std::string* mutable_giftcode();
  inline ::std::string* release_giftcode();
  inline void set_allocated_giftcode(::std::string* giftcode);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Exchange_Gift_Code)
 private:
  inline void set_has_giftcode();
  inline void clear_has_giftcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* giftcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Exchange_Gift_Code* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Mail_RecvMailAward : public ::google::protobuf::Message {
 public:
  C2GS_Mail_RecvMailAward();
  virtual ~C2GS_Mail_RecvMailAward();

  C2GS_Mail_RecvMailAward(const C2GS_Mail_RecvMailAward& from);

  inline C2GS_Mail_RecvMailAward& operator=(const C2GS_Mail_RecvMailAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Mail_RecvMailAward& default_instance();

  void Swap(C2GS_Mail_RecvMailAward* other);

  // implements Message ----------------------------------------------

  C2GS_Mail_RecvMailAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Mail_RecvMailAward& from);
  void MergeFrom(const C2GS_Mail_RecvMailAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 mail_id = 1;
  inline bool has_mail_id() const;
  inline void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mail_id() const;
  inline void set_mail_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Mail_RecvMailAward)
 private:
  inline void set_has_mail_id();
  inline void clear_has_mail_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mail_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Mail_RecvMailAward* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Mail_RecvMailAward : public ::google::protobuf::Message {
 public:
  GS2C_Mail_RecvMailAward();
  virtual ~GS2C_Mail_RecvMailAward();

  GS2C_Mail_RecvMailAward(const GS2C_Mail_RecvMailAward& from);

  inline GS2C_Mail_RecvMailAward& operator=(const GS2C_Mail_RecvMailAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Mail_RecvMailAward& default_instance();

  void Swap(GS2C_Mail_RecvMailAward* other);

  // implements Message ----------------------------------------------

  GS2C_Mail_RecvMailAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Mail_RecvMailAward& from);
  void MergeFrom(const GS2C_Mail_RecvMailAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 mail_id = 1;
  inline bool has_mail_id() const;
  inline void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint64 mail_id() const;
  inline void set_mail_id(::google::protobuf::uint64 value);

  // required int32 opt_res = 2;
  inline bool has_opt_res() const;
  inline void clear_opt_res();
  static const int kOptResFieldNumber = 2;
  inline ::google::protobuf::int32 opt_res() const;
  inline void set_opt_res(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Mail_RecvMailAward)
 private:
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  inline void set_has_opt_res();
  inline void clear_has_opt_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mail_id_;
  ::google::protobuf::int32 opt_res_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Mail_RecvMailAward* default_instance_;
};
// ===================================================================


// ===================================================================

// Mail_UserMailInfo

// required uint64 id = 1;
inline bool Mail_UserMailInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mail_UserMailInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mail_UserMailInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mail_UserMailInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 Mail_UserMailInfo::id() const {
  return id_;
}
inline void Mail_UserMailInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 mail_id = 2;
inline bool Mail_UserMailInfo::has_mail_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mail_UserMailInfo::set_has_mail_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mail_UserMailInfo::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mail_UserMailInfo::clear_mail_id() {
  mail_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_id();
}
inline ::google::protobuf::uint64 Mail_UserMailInfo::mail_id() const {
  return mail_id_;
}
inline void Mail_UserMailInfo::set_mail_id(::google::protobuf::uint64 value) {
  set_has_mail_id();
  mail_id_ = value;
}

// optional int32 mail_type = 3;
inline bool Mail_UserMailInfo::has_mail_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Mail_UserMailInfo::set_has_mail_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Mail_UserMailInfo::clear_has_mail_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Mail_UserMailInfo::clear_mail_type() {
  mail_type_ = 0;
  clear_has_mail_type();
}
inline ::google::protobuf::int32 Mail_UserMailInfo::mail_type() const {
  return mail_type_;
}
inline void Mail_UserMailInfo::set_mail_type(::google::protobuf::int32 value) {
  set_has_mail_type();
  mail_type_ = value;
}

// optional int32 mail_state = 4;
inline bool Mail_UserMailInfo::has_mail_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Mail_UserMailInfo::set_has_mail_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Mail_UserMailInfo::clear_has_mail_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Mail_UserMailInfo::clear_mail_state() {
  mail_state_ = 0;
  clear_has_mail_state();
}
inline ::google::protobuf::int32 Mail_UserMailInfo::mail_state() const {
  return mail_state_;
}
inline void Mail_UserMailInfo::set_mail_state(::google::protobuf::int32 value) {
  set_has_mail_state();
  mail_state_ = value;
}

// optional int32 mail_operate = 5;
inline bool Mail_UserMailInfo::has_mail_operate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Mail_UserMailInfo::set_has_mail_operate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Mail_UserMailInfo::clear_has_mail_operate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Mail_UserMailInfo::clear_mail_operate() {
  mail_operate_ = 0;
  clear_has_mail_operate();
}
inline ::google::protobuf::int32 Mail_UserMailInfo::mail_operate() const {
  return mail_operate_;
}
inline void Mail_UserMailInfo::set_mail_operate(::google::protobuf::int32 value) {
  set_has_mail_operate();
  mail_operate_ = value;
}

// optional uint64 send_time = 6;
inline bool Mail_UserMailInfo::has_send_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Mail_UserMailInfo::set_has_send_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Mail_UserMailInfo::clear_has_send_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Mail_UserMailInfo::clear_send_time() {
  send_time_ = GOOGLE_ULONGLONG(0);
  clear_has_send_time();
}
inline ::google::protobuf::uint64 Mail_UserMailInfo::send_time() const {
  return send_time_;
}
inline void Mail_UserMailInfo::set_send_time(::google::protobuf::uint64 value) {
  set_has_send_time();
  send_time_ = value;
}

// optional string title = 7;
inline bool Mail_UserMailInfo::has_title() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Mail_UserMailInfo::set_has_title() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Mail_UserMailInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Mail_UserMailInfo::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& Mail_UserMailInfo::title() const {
  return *title_;
}
inline void Mail_UserMailInfo::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void Mail_UserMailInfo::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void Mail_UserMailInfo::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Mail_UserMailInfo::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* Mail_UserMailInfo::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Mail_UserMailInfo::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string content = 8;
inline bool Mail_UserMailInfo::has_content() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Mail_UserMailInfo::set_has_content() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Mail_UserMailInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Mail_UserMailInfo::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& Mail_UserMailInfo::content() const {
  return *content_;
}
inline void Mail_UserMailInfo::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void Mail_UserMailInfo::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void Mail_UserMailInfo::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Mail_UserMailInfo::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* Mail_UserMailInfo::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Mail_UserMailInfo::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 title_id = 9;
inline bool Mail_UserMailInfo::has_title_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Mail_UserMailInfo::set_has_title_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Mail_UserMailInfo::clear_has_title_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Mail_UserMailInfo::clear_title_id() {
  title_id_ = 0;
  clear_has_title_id();
}
inline ::google::protobuf::int32 Mail_UserMailInfo::title_id() const {
  return title_id_;
}
inline void Mail_UserMailInfo::set_title_id(::google::protobuf::int32 value) {
  set_has_title_id();
  title_id_ = value;
}

// optional int32 content_id = 10;
inline bool Mail_UserMailInfo::has_content_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Mail_UserMailInfo::set_has_content_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Mail_UserMailInfo::clear_has_content_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Mail_UserMailInfo::clear_content_id() {
  content_id_ = 0;
  clear_has_content_id();
}
inline ::google::protobuf::int32 Mail_UserMailInfo::content_id() const {
  return content_id_;
}
inline void Mail_UserMailInfo::set_content_id(::google::protobuf::int32 value) {
  set_has_content_id();
  content_id_ = value;
}

// optional string items = 11;
inline bool Mail_UserMailInfo::has_items() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Mail_UserMailInfo::set_has_items() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Mail_UserMailInfo::clear_has_items() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Mail_UserMailInfo::clear_items() {
  if (items_ != &::google::protobuf::internal::kEmptyString) {
    items_->clear();
  }
  clear_has_items();
}
inline const ::std::string& Mail_UserMailInfo::items() const {
  return *items_;
}
inline void Mail_UserMailInfo::set_items(const ::std::string& value) {
  set_has_items();
  if (items_ == &::google::protobuf::internal::kEmptyString) {
    items_ = new ::std::string;
  }
  items_->assign(value);
}
inline void Mail_UserMailInfo::set_items(const char* value) {
  set_has_items();
  if (items_ == &::google::protobuf::internal::kEmptyString) {
    items_ = new ::std::string;
  }
  items_->assign(value);
}
inline void Mail_UserMailInfo::set_items(const char* value, size_t size) {
  set_has_items();
  if (items_ == &::google::protobuf::internal::kEmptyString) {
    items_ = new ::std::string;
  }
  items_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Mail_UserMailInfo::mutable_items() {
  set_has_items();
  if (items_ == &::google::protobuf::internal::kEmptyString) {
    items_ = new ::std::string;
  }
  return items_;
}
inline ::std::string* Mail_UserMailInfo::release_items() {
  clear_has_items();
  if (items_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = items_;
    items_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Mail_UserMailInfo::set_allocated_items(::std::string* items) {
  if (items_ != &::google::protobuf::internal::kEmptyString) {
    delete items_;
  }
  if (items) {
    set_has_items();
    items_ = items;
  } else {
    clear_has_items();
    items_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool is_take = 12;
inline bool Mail_UserMailInfo::has_is_take() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Mail_UserMailInfo::set_has_is_take() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Mail_UserMailInfo::clear_has_is_take() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Mail_UserMailInfo::clear_is_take() {
  is_take_ = false;
  clear_has_is_take();
}
inline bool Mail_UserMailInfo::is_take() const {
  return is_take_;
}
inline void Mail_UserMailInfo::set_is_take(bool value) {
  set_has_is_take();
  is_take_ = value;
}

// -------------------------------------------------------------------

// GS2C_Mail_NewMail

// repeated .pb.Mail_UserMailInfo new_mail = 1;
inline int GS2C_Mail_NewMail::new_mail_size() const {
  return new_mail_.size();
}
inline void GS2C_Mail_NewMail::clear_new_mail() {
  new_mail_.Clear();
}
inline const ::pb::Mail_UserMailInfo& GS2C_Mail_NewMail::new_mail(int index) const {
  return new_mail_.Get(index);
}
inline ::pb::Mail_UserMailInfo* GS2C_Mail_NewMail::mutable_new_mail(int index) {
  return new_mail_.Mutable(index);
}
inline ::pb::Mail_UserMailInfo* GS2C_Mail_NewMail::add_new_mail() {
  return new_mail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Mail_UserMailInfo >&
GS2C_Mail_NewMail::new_mail() const {
  return new_mail_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Mail_UserMailInfo >*
GS2C_Mail_NewMail::mutable_new_mail() {
  return &new_mail_;
}

// -------------------------------------------------------------------

// GS2C_Mail_MailList

// repeated .pb.Mail_UserMailInfo mail_list = 1;
inline int GS2C_Mail_MailList::mail_list_size() const {
  return mail_list_.size();
}
inline void GS2C_Mail_MailList::clear_mail_list() {
  mail_list_.Clear();
}
inline const ::pb::Mail_UserMailInfo& GS2C_Mail_MailList::mail_list(int index) const {
  return mail_list_.Get(index);
}
inline ::pb::Mail_UserMailInfo* GS2C_Mail_MailList::mutable_mail_list(int index) {
  return mail_list_.Mutable(index);
}
inline ::pb::Mail_UserMailInfo* GS2C_Mail_MailList::add_mail_list() {
  return mail_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Mail_UserMailInfo >&
GS2C_Mail_MailList::mail_list() const {
  return mail_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Mail_UserMailInfo >*
GS2C_Mail_MailList::mutable_mail_list() {
  return &mail_list_;
}

// -------------------------------------------------------------------

// C2GS_Mail_ReadMail

// repeated uint64 mail_ids = 1;
inline int C2GS_Mail_ReadMail::mail_ids_size() const {
  return mail_ids_.size();
}
inline void C2GS_Mail_ReadMail::clear_mail_ids() {
  mail_ids_.Clear();
}
inline ::google::protobuf::uint64 C2GS_Mail_ReadMail::mail_ids(int index) const {
  return mail_ids_.Get(index);
}
inline void C2GS_Mail_ReadMail::set_mail_ids(int index, ::google::protobuf::uint64 value) {
  mail_ids_.Set(index, value);
}
inline void C2GS_Mail_ReadMail::add_mail_ids(::google::protobuf::uint64 value) {
  mail_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
C2GS_Mail_ReadMail::mail_ids() const {
  return mail_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
C2GS_Mail_ReadMail::mutable_mail_ids() {
  return &mail_ids_;
}

// -------------------------------------------------------------------

// C2GS_Mail_DelMail

// repeated uint64 mail_ids = 1;
inline int C2GS_Mail_DelMail::mail_ids_size() const {
  return mail_ids_.size();
}
inline void C2GS_Mail_DelMail::clear_mail_ids() {
  mail_ids_.Clear();
}
inline ::google::protobuf::uint64 C2GS_Mail_DelMail::mail_ids(int index) const {
  return mail_ids_.Get(index);
}
inline void C2GS_Mail_DelMail::set_mail_ids(int index, ::google::protobuf::uint64 value) {
  mail_ids_.Set(index, value);
}
inline void C2GS_Mail_DelMail::add_mail_ids(::google::protobuf::uint64 value) {
  mail_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
C2GS_Mail_DelMail::mail_ids() const {
  return mail_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
C2GS_Mail_DelMail::mutable_mail_ids() {
  return &mail_ids_;
}

// -------------------------------------------------------------------

// GS2C_Mail_Option_respon_opt_result

// required uint64 opt_id = 1;
inline bool GS2C_Mail_Option_respon_opt_result::has_opt_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Mail_Option_respon_opt_result::set_has_opt_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Mail_Option_respon_opt_result::clear_has_opt_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Mail_Option_respon_opt_result::clear_opt_id() {
  opt_id_ = GOOGLE_ULONGLONG(0);
  clear_has_opt_id();
}
inline ::google::protobuf::uint64 GS2C_Mail_Option_respon_opt_result::opt_id() const {
  return opt_id_;
}
inline void GS2C_Mail_Option_respon_opt_result::set_opt_id(::google::protobuf::uint64 value) {
  set_has_opt_id();
  opt_id_ = value;
}

// required int32 opt_res = 2;
inline bool GS2C_Mail_Option_respon_opt_result::has_opt_res() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Mail_Option_respon_opt_result::set_has_opt_res() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Mail_Option_respon_opt_result::clear_has_opt_res() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Mail_Option_respon_opt_result::clear_opt_res() {
  opt_res_ = 0;
  clear_has_opt_res();
}
inline ::google::protobuf::int32 GS2C_Mail_Option_respon_opt_result::opt_res() const {
  return opt_res_;
}
inline void GS2C_Mail_Option_respon_opt_result::set_opt_res(::google::protobuf::int32 value) {
  set_has_opt_res();
  opt_res_ = value;
}

// -------------------------------------------------------------------

// GS2C_Mail_Option_respon

// repeated .pb.GS2C_Mail_Option_respon.opt_result opts_res = 1;
inline int GS2C_Mail_Option_respon::opts_res_size() const {
  return opts_res_.size();
}
inline void GS2C_Mail_Option_respon::clear_opts_res() {
  opts_res_.Clear();
}
inline const ::pb::GS2C_Mail_Option_respon_opt_result& GS2C_Mail_Option_respon::opts_res(int index) const {
  return opts_res_.Get(index);
}
inline ::pb::GS2C_Mail_Option_respon_opt_result* GS2C_Mail_Option_respon::mutable_opts_res(int index) {
  return opts_res_.Mutable(index);
}
inline ::pb::GS2C_Mail_Option_respon_opt_result* GS2C_Mail_Option_respon::add_opts_res() {
  return opts_res_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::GS2C_Mail_Option_respon_opt_result >&
GS2C_Mail_Option_respon::opts_res() const {
  return opts_res_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::GS2C_Mail_Option_respon_opt_result >*
GS2C_Mail_Option_respon::mutable_opts_res() {
  return &opts_res_;
}

// -------------------------------------------------------------------

// C2GS_Exchange_Gift_Code

// required string giftCode = 1;
inline bool C2GS_Exchange_Gift_Code::has_giftcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Exchange_Gift_Code::set_has_giftcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Exchange_Gift_Code::clear_has_giftcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Exchange_Gift_Code::clear_giftcode() {
  if (giftcode_ != &::google::protobuf::internal::kEmptyString) {
    giftcode_->clear();
  }
  clear_has_giftcode();
}
inline const ::std::string& C2GS_Exchange_Gift_Code::giftcode() const {
  return *giftcode_;
}
inline void C2GS_Exchange_Gift_Code::set_giftcode(const ::std::string& value) {
  set_has_giftcode();
  if (giftcode_ == &::google::protobuf::internal::kEmptyString) {
    giftcode_ = new ::std::string;
  }
  giftcode_->assign(value);
}
inline void C2GS_Exchange_Gift_Code::set_giftcode(const char* value) {
  set_has_giftcode();
  if (giftcode_ == &::google::protobuf::internal::kEmptyString) {
    giftcode_ = new ::std::string;
  }
  giftcode_->assign(value);
}
inline void C2GS_Exchange_Gift_Code::set_giftcode(const char* value, size_t size) {
  set_has_giftcode();
  if (giftcode_ == &::google::protobuf::internal::kEmptyString) {
    giftcode_ = new ::std::string;
  }
  giftcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2GS_Exchange_Gift_Code::mutable_giftcode() {
  set_has_giftcode();
  if (giftcode_ == &::google::protobuf::internal::kEmptyString) {
    giftcode_ = new ::std::string;
  }
  return giftcode_;
}
inline ::std::string* C2GS_Exchange_Gift_Code::release_giftcode() {
  clear_has_giftcode();
  if (giftcode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = giftcode_;
    giftcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2GS_Exchange_Gift_Code::set_allocated_giftcode(::std::string* giftcode) {
  if (giftcode_ != &::google::protobuf::internal::kEmptyString) {
    delete giftcode_;
  }
  if (giftcode) {
    set_has_giftcode();
    giftcode_ = giftcode;
  } else {
    clear_has_giftcode();
    giftcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2GS_Mail_RecvMailAward

// required uint64 mail_id = 1;
inline bool C2GS_Mail_RecvMailAward::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Mail_RecvMailAward::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Mail_RecvMailAward::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Mail_RecvMailAward::clear_mail_id() {
  mail_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_id();
}
inline ::google::protobuf::uint64 C2GS_Mail_RecvMailAward::mail_id() const {
  return mail_id_;
}
inline void C2GS_Mail_RecvMailAward::set_mail_id(::google::protobuf::uint64 value) {
  set_has_mail_id();
  mail_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Mail_RecvMailAward

// required uint64 mail_id = 1;
inline bool GS2C_Mail_RecvMailAward::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Mail_RecvMailAward::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Mail_RecvMailAward::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Mail_RecvMailAward::clear_mail_id() {
  mail_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_id();
}
inline ::google::protobuf::uint64 GS2C_Mail_RecvMailAward::mail_id() const {
  return mail_id_;
}
inline void GS2C_Mail_RecvMailAward::set_mail_id(::google::protobuf::uint64 value) {
  set_has_mail_id();
  mail_id_ = value;
}

// required int32 opt_res = 2;
inline bool GS2C_Mail_RecvMailAward::has_opt_res() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Mail_RecvMailAward::set_has_opt_res() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Mail_RecvMailAward::clear_has_opt_res() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Mail_RecvMailAward::clear_opt_res() {
  opt_res_ = 0;
  clear_has_opt_res();
}
inline ::google::protobuf::int32 GS2C_Mail_RecvMailAward::opt_res() const {
  return opt_res_;
}
inline void GS2C_Mail_RecvMailAward::set_opt_res(::google::protobuf::int32 value) {
  set_has_opt_res();
  opt_res_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::MailStateType>() {
  return ::pb::MailStateType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::MailType>() {
  return ::pb::MailType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::MailSendType>() {
  return ::pb::MailSendType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Mail_2eproto__INCLUDED
