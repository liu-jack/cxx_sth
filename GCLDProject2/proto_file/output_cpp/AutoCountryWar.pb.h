// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AutoCountryWar.proto

#ifndef PROTOBUF_AutoCountryWar_2eproto__INCLUDED
#define PROTOBUF_AutoCountryWar_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommomDef.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AutoCountryWar_2eproto();
void protobuf_AssignDesc_AutoCountryWar_2eproto();
void protobuf_ShutdownFile_AutoCountryWar_2eproto();

class C2GS_Quick_Training;
class C2GS_Start_Auto_Country_War;
class C2GS_Reauto_Country_War;
class C2GS_Change_Target_City;
class GS2C_Auto_Country_War_Info;
class Struct_Auto_Country_War;
class GS2C_AC_Army_Info;
class GS2C_QuickTraining_Ret;
class GS2C_Start_AC_Ret;
class GS2C_REAUTO_HERO_Ret;
class GS2C_Change_Des_Ret;

enum Msg_AC_Return {
  AC_Success = 1,
  AC_Fail = 2,
  AC_No_Resource = 3,
  AC_IS_IN_AC = 4,
  AC_IS_NOT_IN_AC = 5,
  AC_DES_CITY_ERR = 6,
  AC_HERO_ERR = 7
};
bool Msg_AC_Return_IsValid(int value);
const Msg_AC_Return Msg_AC_Return_MIN = AC_Success;
const Msg_AC_Return Msg_AC_Return_MAX = AC_HERO_ERR;
const int Msg_AC_Return_ARRAYSIZE = Msg_AC_Return_MAX + 1;

const ::google::protobuf::EnumDescriptor* Msg_AC_Return_descriptor();
inline const ::std::string& Msg_AC_Return_Name(Msg_AC_Return value) {
  return ::google::protobuf::internal::NameOfEnum(
    Msg_AC_Return_descriptor(), value);
}
inline bool Msg_AC_Return_Parse(
    const ::std::string& name, Msg_AC_Return* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Msg_AC_Return>(
    Msg_AC_Return_descriptor(), name, value);
}
// ===================================================================

class C2GS_Quick_Training : public ::google::protobuf::Message {
 public:
  C2GS_Quick_Training();
  virtual ~C2GS_Quick_Training();

  C2GS_Quick_Training(const C2GS_Quick_Training& from);

  inline C2GS_Quick_Training& operator=(const C2GS_Quick_Training& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Quick_Training& default_instance();

  void Swap(C2GS_Quick_Training* other);

  // implements Message ----------------------------------------------

  C2GS_Quick_Training* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Quick_Training& from);
  void MergeFrom(const C2GS_Quick_Training& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 trainid = 1;
  inline bool has_trainid() const;
  inline void clear_trainid();
  static const int kTrainidFieldNumber = 1;
  inline ::google::protobuf::uint32 trainid() const;
  inline void set_trainid(::google::protobuf::uint32 value);

  // repeated uint32 heroid = 2;
  inline int heroid_size() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 2;
  inline ::google::protobuf::uint32 heroid(int index) const;
  inline void set_heroid(int index, ::google::protobuf::uint32 value);
  inline void add_heroid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heroid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heroid();

  // @@protoc_insertion_point(class_scope:pb.C2GS_Quick_Training)
 private:
  inline void set_has_trainid();
  inline void clear_has_trainid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroid_;
  ::google::protobuf::uint32 trainid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_AutoCountryWar_2eproto();
  friend void protobuf_AssignDesc_AutoCountryWar_2eproto();
  friend void protobuf_ShutdownFile_AutoCountryWar_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Quick_Training* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Start_Auto_Country_War : public ::google::protobuf::Message {
 public:
  C2GS_Start_Auto_Country_War();
  virtual ~C2GS_Start_Auto_Country_War();

  C2GS_Start_Auto_Country_War(const C2GS_Start_Auto_Country_War& from);

  inline C2GS_Start_Auto_Country_War& operator=(const C2GS_Start_Auto_Country_War& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Start_Auto_Country_War& default_instance();

  void Swap(C2GS_Start_Auto_Country_War* other);

  // implements Message ----------------------------------------------

  C2GS_Start_Auto_Country_War* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Start_Auto_Country_War& from);
  void MergeFrom(const C2GS_Start_Auto_Country_War& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cityid = 1;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityidFieldNumber = 1;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // repeated uint32 heroid = 2;
  inline int heroid_size() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 2;
  inline ::google::protobuf::uint32 heroid(int index) const;
  inline void set_heroid(int index, ::google::protobuf::uint32 value);
  inline void add_heroid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heroid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heroid();

  // optional bool isUseGoldAddSoldier = 3;
  inline bool has_isusegoldaddsoldier() const;
  inline void clear_isusegoldaddsoldier();
  static const int kIsUseGoldAddSoldierFieldNumber = 3;
  inline bool isusegoldaddsoldier() const;
  inline void set_isusegoldaddsoldier(bool value);

  // optional bool isAutoCallUp = 4;
  inline bool has_isautocallup() const;
  inline void clear_isautocallup();
  static const int kIsAutoCallUpFieldNumber = 4;
  inline bool isautocallup() const;
  inline void set_isautocallup(bool value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Start_Auto_Country_War)
 private:
  inline void set_has_cityid();
  inline void clear_has_cityid();
  inline void set_has_isusegoldaddsoldier();
  inline void clear_has_isusegoldaddsoldier();
  inline void set_has_isautocallup();
  inline void clear_has_isautocallup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroid_;
  ::google::protobuf::uint32 cityid_;
  bool isusegoldaddsoldier_;
  bool isautocallup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_AutoCountryWar_2eproto();
  friend void protobuf_AssignDesc_AutoCountryWar_2eproto();
  friend void protobuf_ShutdownFile_AutoCountryWar_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Start_Auto_Country_War* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Reauto_Country_War : public ::google::protobuf::Message {
 public:
  C2GS_Reauto_Country_War();
  virtual ~C2GS_Reauto_Country_War();

  C2GS_Reauto_Country_War(const C2GS_Reauto_Country_War& from);

  inline C2GS_Reauto_Country_War& operator=(const C2GS_Reauto_Country_War& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Reauto_Country_War& default_instance();

  void Swap(C2GS_Reauto_Country_War* other);

  // implements Message ----------------------------------------------

  C2GS_Reauto_Country_War* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Reauto_Country_War& from);
  void MergeFrom(const C2GS_Reauto_Country_War& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // optional bool isJoinAuto = 2;
  inline bool has_isjoinauto() const;
  inline void clear_isjoinauto();
  static const int kIsJoinAutoFieldNumber = 2;
  inline bool isjoinauto() const;
  inline void set_isjoinauto(bool value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Reauto_Country_War)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_isjoinauto();
  inline void clear_has_isjoinauto();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 heroid_;
  bool isjoinauto_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_AutoCountryWar_2eproto();
  friend void protobuf_AssignDesc_AutoCountryWar_2eproto();
  friend void protobuf_ShutdownFile_AutoCountryWar_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Reauto_Country_War* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Change_Target_City : public ::google::protobuf::Message {
 public:
  C2GS_Change_Target_City();
  virtual ~C2GS_Change_Target_City();

  C2GS_Change_Target_City(const C2GS_Change_Target_City& from);

  inline C2GS_Change_Target_City& operator=(const C2GS_Change_Target_City& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Change_Target_City& default_instance();

  void Swap(C2GS_Change_Target_City* other);

  // implements Message ----------------------------------------------

  C2GS_Change_Target_City* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Change_Target_City& from);
  void MergeFrom(const C2GS_Change_Target_City& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cityid = 1;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityidFieldNumber = 1;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Change_Target_City)
 private:
  inline void set_has_cityid();
  inline void clear_has_cityid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_AutoCountryWar_2eproto();
  friend void protobuf_AssignDesc_AutoCountryWar_2eproto();
  friend void protobuf_ShutdownFile_AutoCountryWar_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Change_Target_City* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Auto_Country_War_Info : public ::google::protobuf::Message {
 public:
  GS2C_Auto_Country_War_Info();
  virtual ~GS2C_Auto_Country_War_Info();

  GS2C_Auto_Country_War_Info(const GS2C_Auto_Country_War_Info& from);

  inline GS2C_Auto_Country_War_Info& operator=(const GS2C_Auto_Country_War_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Auto_Country_War_Info& default_instance();

  void Swap(GS2C_Auto_Country_War_Info* other);

  // implements Message ----------------------------------------------

  GS2C_Auto_Country_War_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Auto_Country_War_Info& from);
  void MergeFrom(const GS2C_Auto_Country_War_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool is_begin = 1;
  inline bool has_is_begin() const;
  inline void clear_is_begin();
  static const int kIsBeginFieldNumber = 1;
  inline bool is_begin() const;
  inline void set_is_begin(bool value);

  // optional bool isShutDown = 2;
  inline bool has_isshutdown() const;
  inline void clear_isshutdown();
  static const int kIsShutDownFieldNumber = 2;
  inline bool isshutdown() const;
  inline void set_isshutdown(bool value);

  // optional .pb.Struct_Auto_Country_War detailData = 3;
  inline bool has_detaildata() const;
  inline void clear_detaildata();
  static const int kDetailDataFieldNumber = 3;
  inline const ::pb::Struct_Auto_Country_War& detaildata() const;
  inline ::pb::Struct_Auto_Country_War* mutable_detaildata();
  inline ::pb::Struct_Auto_Country_War* release_detaildata();
  inline void set_allocated_detaildata(::pb::Struct_Auto_Country_War* detaildata);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Auto_Country_War_Info)
 private:
  inline void set_has_is_begin();
  inline void clear_has_is_begin();
  inline void set_has_isshutdown();
  inline void clear_has_isshutdown();
  inline void set_has_detaildata();
  inline void clear_has_detaildata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::Struct_Auto_Country_War* detaildata_;
  bool is_begin_;
  bool isshutdown_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_AutoCountryWar_2eproto();
  friend void protobuf_AssignDesc_AutoCountryWar_2eproto();
  friend void protobuf_ShutdownFile_AutoCountryWar_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Auto_Country_War_Info* default_instance_;
};
// -------------------------------------------------------------------

class Struct_Auto_Country_War : public ::google::protobuf::Message {
 public:
  Struct_Auto_Country_War();
  virtual ~Struct_Auto_Country_War();

  Struct_Auto_Country_War(const Struct_Auto_Country_War& from);

  inline Struct_Auto_Country_War& operator=(const Struct_Auto_Country_War& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Struct_Auto_Country_War& default_instance();

  void Swap(Struct_Auto_Country_War* other);

  // implements Message ----------------------------------------------

  Struct_Auto_Country_War* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Struct_Auto_Country_War& from);
  void MergeFrom(const Struct_Auto_Country_War& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_city = 1;
  inline bool has_target_city() const;
  inline void clear_target_city();
  static const int kTargetCityFieldNumber = 1;
  inline ::google::protobuf::uint32 target_city() const;
  inline void set_target_city(::google::protobuf::uint32 value);

  // repeated uint32 heroid = 2;
  inline int heroid_size() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 2;
  inline ::google::protobuf::uint32 heroid(int index) const;
  inline void set_heroid(int index, ::google::protobuf::uint32 value);
  inline void add_heroid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heroid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heroid();

  // optional uint64 end_time = 3;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 end_time() const;
  inline void set_end_time(::google::protobuf::uint64 value);

  // optional uint32 killCount = 4;
  inline bool has_killcount() const;
  inline void clear_killcount();
  static const int kKillCountFieldNumber = 4;
  inline ::google::protobuf::uint32 killcount() const;
  inline void set_killcount(::google::protobuf::uint32 value);

  // optional uint32 expCount = 5;
  inline bool has_expcount() const;
  inline void clear_expcount();
  static const int kExpCountFieldNumber = 5;
  inline ::google::protobuf::uint32 expcount() const;
  inline void set_expcount(::google::protobuf::uint32 value);

  // optional uint32 occupyCount = 6;
  inline bool has_occupycount() const;
  inline void clear_occupycount();
  static const int kOccupyCountFieldNumber = 6;
  inline ::google::protobuf::uint32 occupycount() const;
  inline void set_occupycount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.Struct_Auto_Country_War)
 private:
  inline void set_has_target_city();
  inline void clear_has_target_city();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_killcount();
  inline void clear_has_killcount();
  inline void set_has_expcount();
  inline void clear_has_expcount();
  inline void set_has_occupycount();
  inline void clear_has_occupycount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroid_;
  ::google::protobuf::uint32 target_city_;
  ::google::protobuf::uint32 killcount_;
  ::google::protobuf::uint64 end_time_;
  ::google::protobuf::uint32 expcount_;
  ::google::protobuf::uint32 occupycount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_AutoCountryWar_2eproto();
  friend void protobuf_AssignDesc_AutoCountryWar_2eproto();
  friend void protobuf_ShutdownFile_AutoCountryWar_2eproto();

  void InitAsDefaultInstance();
  static Struct_Auto_Country_War* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_AC_Army_Info : public ::google::protobuf::Message {
 public:
  GS2C_AC_Army_Info();
  virtual ~GS2C_AC_Army_Info();

  GS2C_AC_Army_Info(const GS2C_AC_Army_Info& from);

  inline GS2C_AC_Army_Info& operator=(const GS2C_AC_Army_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_AC_Army_Info& default_instance();

  void Swap(GS2C_AC_Army_Info* other);

  // implements Message ----------------------------------------------

  GS2C_AC_Army_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_AC_Army_Info& from);
  void MergeFrom(const GS2C_AC_Army_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // optional bool killorbekilled = 2;
  inline bool has_killorbekilled() const;
  inline void clear_killorbekilled();
  static const int kKillorbekilledFieldNumber = 2;
  inline bool killorbekilled() const;
  inline void set_killorbekilled(bool value);

  // optional string killname = 3;
  inline bool has_killname() const;
  inline void clear_killname();
  static const int kKillnameFieldNumber = 3;
  inline const ::std::string& killname() const;
  inline void set_killname(const ::std::string& value);
  inline void set_killname(const char* value);
  inline void set_killname(const char* value, size_t size);
  inline ::std::string* mutable_killname();
  inline ::std::string* release_killname();
  inline void set_allocated_killname(::std::string* killname);

  // optional uint32 protoid = 4;
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 4;
  inline ::google::protobuf::uint32 protoid() const;
  inline void set_protoid(::google::protobuf::uint32 value);

  // optional uint32 damage = 5;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 5;
  inline ::google::protobuf::uint32 damage() const;
  inline void set_damage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_AC_Army_Info)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_killorbekilled();
  inline void clear_has_killorbekilled();
  inline void set_has_killname();
  inline void clear_has_killname();
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_damage();
  inline void clear_has_damage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 heroid_;
  bool killorbekilled_;
  ::std::string* killname_;
  ::google::protobuf::uint32 protoid_;
  ::google::protobuf::uint32 damage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_AutoCountryWar_2eproto();
  friend void protobuf_AssignDesc_AutoCountryWar_2eproto();
  friend void protobuf_ShutdownFile_AutoCountryWar_2eproto();

  void InitAsDefaultInstance();
  static GS2C_AC_Army_Info* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_QuickTraining_Ret : public ::google::protobuf::Message {
 public:
  GS2C_QuickTraining_Ret();
  virtual ~GS2C_QuickTraining_Ret();

  GS2C_QuickTraining_Ret(const GS2C_QuickTraining_Ret& from);

  inline GS2C_QuickTraining_Ret& operator=(const GS2C_QuickTraining_Ret& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_QuickTraining_Ret& default_instance();

  void Swap(GS2C_QuickTraining_Ret* other);

  // implements Message ----------------------------------------------

  GS2C_QuickTraining_Ret* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_QuickTraining_Ret& from);
  void MergeFrom(const GS2C_QuickTraining_Ret& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.Msg_AC_Return ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::pb::Msg_AC_Return ret() const;
  inline void set_ret(::pb::Msg_AC_Return value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_QuickTraining_Ret)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_AutoCountryWar_2eproto();
  friend void protobuf_AssignDesc_AutoCountryWar_2eproto();
  friend void protobuf_ShutdownFile_AutoCountryWar_2eproto();

  void InitAsDefaultInstance();
  static GS2C_QuickTraining_Ret* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Start_AC_Ret : public ::google::protobuf::Message {
 public:
  GS2C_Start_AC_Ret();
  virtual ~GS2C_Start_AC_Ret();

  GS2C_Start_AC_Ret(const GS2C_Start_AC_Ret& from);

  inline GS2C_Start_AC_Ret& operator=(const GS2C_Start_AC_Ret& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Start_AC_Ret& default_instance();

  void Swap(GS2C_Start_AC_Ret* other);

  // implements Message ----------------------------------------------

  GS2C_Start_AC_Ret* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Start_AC_Ret& from);
  void MergeFrom(const GS2C_Start_AC_Ret& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.Msg_AC_Return ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::pb::Msg_AC_Return ret() const;
  inline void set_ret(::pb::Msg_AC_Return value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Start_AC_Ret)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_AutoCountryWar_2eproto();
  friend void protobuf_AssignDesc_AutoCountryWar_2eproto();
  friend void protobuf_ShutdownFile_AutoCountryWar_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Start_AC_Ret* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_REAUTO_HERO_Ret : public ::google::protobuf::Message {
 public:
  GS2C_REAUTO_HERO_Ret();
  virtual ~GS2C_REAUTO_HERO_Ret();

  GS2C_REAUTO_HERO_Ret(const GS2C_REAUTO_HERO_Ret& from);

  inline GS2C_REAUTO_HERO_Ret& operator=(const GS2C_REAUTO_HERO_Ret& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_REAUTO_HERO_Ret& default_instance();

  void Swap(GS2C_REAUTO_HERO_Ret* other);

  // implements Message ----------------------------------------------

  GS2C_REAUTO_HERO_Ret* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_REAUTO_HERO_Ret& from);
  void MergeFrom(const GS2C_REAUTO_HERO_Ret& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.Msg_AC_Return ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::pb::Msg_AC_Return ret() const;
  inline void set_ret(::pb::Msg_AC_Return value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_REAUTO_HERO_Ret)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_AutoCountryWar_2eproto();
  friend void protobuf_AssignDesc_AutoCountryWar_2eproto();
  friend void protobuf_ShutdownFile_AutoCountryWar_2eproto();

  void InitAsDefaultInstance();
  static GS2C_REAUTO_HERO_Ret* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Change_Des_Ret : public ::google::protobuf::Message {
 public:
  GS2C_Change_Des_Ret();
  virtual ~GS2C_Change_Des_Ret();

  GS2C_Change_Des_Ret(const GS2C_Change_Des_Ret& from);

  inline GS2C_Change_Des_Ret& operator=(const GS2C_Change_Des_Ret& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Change_Des_Ret& default_instance();

  void Swap(GS2C_Change_Des_Ret* other);

  // implements Message ----------------------------------------------

  GS2C_Change_Des_Ret* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Change_Des_Ret& from);
  void MergeFrom(const GS2C_Change_Des_Ret& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.Msg_AC_Return ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::pb::Msg_AC_Return ret() const;
  inline void set_ret(::pb::Msg_AC_Return value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Change_Des_Ret)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_AutoCountryWar_2eproto();
  friend void protobuf_AssignDesc_AutoCountryWar_2eproto();
  friend void protobuf_ShutdownFile_AutoCountryWar_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Change_Des_Ret* default_instance_;
};
// ===================================================================


// ===================================================================

// C2GS_Quick_Training

// optional uint32 trainid = 1;
inline bool C2GS_Quick_Training::has_trainid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Quick_Training::set_has_trainid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Quick_Training::clear_has_trainid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Quick_Training::clear_trainid() {
  trainid_ = 0u;
  clear_has_trainid();
}
inline ::google::protobuf::uint32 C2GS_Quick_Training::trainid() const {
  return trainid_;
}
inline void C2GS_Quick_Training::set_trainid(::google::protobuf::uint32 value) {
  set_has_trainid();
  trainid_ = value;
}

// repeated uint32 heroid = 2;
inline int C2GS_Quick_Training::heroid_size() const {
  return heroid_.size();
}
inline void C2GS_Quick_Training::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint32 C2GS_Quick_Training::heroid(int index) const {
  return heroid_.Get(index);
}
inline void C2GS_Quick_Training::set_heroid(int index, ::google::protobuf::uint32 value) {
  heroid_.Set(index, value);
}
inline void C2GS_Quick_Training::add_heroid(::google::protobuf::uint32 value) {
  heroid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
C2GS_Quick_Training::heroid() const {
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
C2GS_Quick_Training::mutable_heroid() {
  return &heroid_;
}

// -------------------------------------------------------------------

// C2GS_Start_Auto_Country_War

// optional uint32 cityid = 1;
inline bool C2GS_Start_Auto_Country_War::has_cityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Start_Auto_Country_War::set_has_cityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Start_Auto_Country_War::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Start_Auto_Country_War::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 C2GS_Start_Auto_Country_War::cityid() const {
  return cityid_;
}
inline void C2GS_Start_Auto_Country_War::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
}

// repeated uint32 heroid = 2;
inline int C2GS_Start_Auto_Country_War::heroid_size() const {
  return heroid_.size();
}
inline void C2GS_Start_Auto_Country_War::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint32 C2GS_Start_Auto_Country_War::heroid(int index) const {
  return heroid_.Get(index);
}
inline void C2GS_Start_Auto_Country_War::set_heroid(int index, ::google::protobuf::uint32 value) {
  heroid_.Set(index, value);
}
inline void C2GS_Start_Auto_Country_War::add_heroid(::google::protobuf::uint32 value) {
  heroid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
C2GS_Start_Auto_Country_War::heroid() const {
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
C2GS_Start_Auto_Country_War::mutable_heroid() {
  return &heroid_;
}

// optional bool isUseGoldAddSoldier = 3;
inline bool C2GS_Start_Auto_Country_War::has_isusegoldaddsoldier() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2GS_Start_Auto_Country_War::set_has_isusegoldaddsoldier() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2GS_Start_Auto_Country_War::clear_has_isusegoldaddsoldier() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2GS_Start_Auto_Country_War::clear_isusegoldaddsoldier() {
  isusegoldaddsoldier_ = false;
  clear_has_isusegoldaddsoldier();
}
inline bool C2GS_Start_Auto_Country_War::isusegoldaddsoldier() const {
  return isusegoldaddsoldier_;
}
inline void C2GS_Start_Auto_Country_War::set_isusegoldaddsoldier(bool value) {
  set_has_isusegoldaddsoldier();
  isusegoldaddsoldier_ = value;
}

// optional bool isAutoCallUp = 4;
inline bool C2GS_Start_Auto_Country_War::has_isautocallup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2GS_Start_Auto_Country_War::set_has_isautocallup() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2GS_Start_Auto_Country_War::clear_has_isautocallup() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2GS_Start_Auto_Country_War::clear_isautocallup() {
  isautocallup_ = false;
  clear_has_isautocallup();
}
inline bool C2GS_Start_Auto_Country_War::isautocallup() const {
  return isautocallup_;
}
inline void C2GS_Start_Auto_Country_War::set_isautocallup(bool value) {
  set_has_isautocallup();
  isautocallup_ = value;
}

// -------------------------------------------------------------------

// C2GS_Reauto_Country_War

// optional uint32 heroid = 1;
inline bool C2GS_Reauto_Country_War::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Reauto_Country_War::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Reauto_Country_War::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Reauto_Country_War::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 C2GS_Reauto_Country_War::heroid() const {
  return heroid_;
}
inline void C2GS_Reauto_Country_War::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// optional bool isJoinAuto = 2;
inline bool C2GS_Reauto_Country_War::has_isjoinauto() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2GS_Reauto_Country_War::set_has_isjoinauto() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2GS_Reauto_Country_War::clear_has_isjoinauto() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2GS_Reauto_Country_War::clear_isjoinauto() {
  isjoinauto_ = false;
  clear_has_isjoinauto();
}
inline bool C2GS_Reauto_Country_War::isjoinauto() const {
  return isjoinauto_;
}
inline void C2GS_Reauto_Country_War::set_isjoinauto(bool value) {
  set_has_isjoinauto();
  isjoinauto_ = value;
}

// -------------------------------------------------------------------

// C2GS_Change_Target_City

// optional uint32 cityid = 1;
inline bool C2GS_Change_Target_City::has_cityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Change_Target_City::set_has_cityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Change_Target_City::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Change_Target_City::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 C2GS_Change_Target_City::cityid() const {
  return cityid_;
}
inline void C2GS_Change_Target_City::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
}

// -------------------------------------------------------------------

// GS2C_Auto_Country_War_Info

// required bool is_begin = 1;
inline bool GS2C_Auto_Country_War_Info::has_is_begin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Auto_Country_War_Info::set_has_is_begin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Auto_Country_War_Info::clear_has_is_begin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Auto_Country_War_Info::clear_is_begin() {
  is_begin_ = false;
  clear_has_is_begin();
}
inline bool GS2C_Auto_Country_War_Info::is_begin() const {
  return is_begin_;
}
inline void GS2C_Auto_Country_War_Info::set_is_begin(bool value) {
  set_has_is_begin();
  is_begin_ = value;
}

// optional bool isShutDown = 2;
inline bool GS2C_Auto_Country_War_Info::has_isshutdown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Auto_Country_War_Info::set_has_isshutdown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Auto_Country_War_Info::clear_has_isshutdown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Auto_Country_War_Info::clear_isshutdown() {
  isshutdown_ = false;
  clear_has_isshutdown();
}
inline bool GS2C_Auto_Country_War_Info::isshutdown() const {
  return isshutdown_;
}
inline void GS2C_Auto_Country_War_Info::set_isshutdown(bool value) {
  set_has_isshutdown();
  isshutdown_ = value;
}

// optional .pb.Struct_Auto_Country_War detailData = 3;
inline bool GS2C_Auto_Country_War_Info::has_detaildata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_Auto_Country_War_Info::set_has_detaildata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_Auto_Country_War_Info::clear_has_detaildata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_Auto_Country_War_Info::clear_detaildata() {
  if (detaildata_ != NULL) detaildata_->::pb::Struct_Auto_Country_War::Clear();
  clear_has_detaildata();
}
inline const ::pb::Struct_Auto_Country_War& GS2C_Auto_Country_War_Info::detaildata() const {
  return detaildata_ != NULL ? *detaildata_ : *default_instance_->detaildata_;
}
inline ::pb::Struct_Auto_Country_War* GS2C_Auto_Country_War_Info::mutable_detaildata() {
  set_has_detaildata();
  if (detaildata_ == NULL) detaildata_ = new ::pb::Struct_Auto_Country_War;
  return detaildata_;
}
inline ::pb::Struct_Auto_Country_War* GS2C_Auto_Country_War_Info::release_detaildata() {
  clear_has_detaildata();
  ::pb::Struct_Auto_Country_War* temp = detaildata_;
  detaildata_ = NULL;
  return temp;
}
inline void GS2C_Auto_Country_War_Info::set_allocated_detaildata(::pb::Struct_Auto_Country_War* detaildata) {
  delete detaildata_;
  detaildata_ = detaildata;
  if (detaildata) {
    set_has_detaildata();
  } else {
    clear_has_detaildata();
  }
}

// -------------------------------------------------------------------

// Struct_Auto_Country_War

// optional uint32 target_city = 1;
inline bool Struct_Auto_Country_War::has_target_city() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Struct_Auto_Country_War::set_has_target_city() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Struct_Auto_Country_War::clear_has_target_city() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Struct_Auto_Country_War::clear_target_city() {
  target_city_ = 0u;
  clear_has_target_city();
}
inline ::google::protobuf::uint32 Struct_Auto_Country_War::target_city() const {
  return target_city_;
}
inline void Struct_Auto_Country_War::set_target_city(::google::protobuf::uint32 value) {
  set_has_target_city();
  target_city_ = value;
}

// repeated uint32 heroid = 2;
inline int Struct_Auto_Country_War::heroid_size() const {
  return heroid_.size();
}
inline void Struct_Auto_Country_War::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint32 Struct_Auto_Country_War::heroid(int index) const {
  return heroid_.Get(index);
}
inline void Struct_Auto_Country_War::set_heroid(int index, ::google::protobuf::uint32 value) {
  heroid_.Set(index, value);
}
inline void Struct_Auto_Country_War::add_heroid(::google::protobuf::uint32 value) {
  heroid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Struct_Auto_Country_War::heroid() const {
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Struct_Auto_Country_War::mutable_heroid() {
  return &heroid_;
}

// optional uint64 end_time = 3;
inline bool Struct_Auto_Country_War::has_end_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Struct_Auto_Country_War::set_has_end_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Struct_Auto_Country_War::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Struct_Auto_Country_War::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::uint64 Struct_Auto_Country_War::end_time() const {
  return end_time_;
}
inline void Struct_Auto_Country_War::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
}

// optional uint32 killCount = 4;
inline bool Struct_Auto_Country_War::has_killcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Struct_Auto_Country_War::set_has_killcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Struct_Auto_Country_War::clear_has_killcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Struct_Auto_Country_War::clear_killcount() {
  killcount_ = 0u;
  clear_has_killcount();
}
inline ::google::protobuf::uint32 Struct_Auto_Country_War::killcount() const {
  return killcount_;
}
inline void Struct_Auto_Country_War::set_killcount(::google::protobuf::uint32 value) {
  set_has_killcount();
  killcount_ = value;
}

// optional uint32 expCount = 5;
inline bool Struct_Auto_Country_War::has_expcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Struct_Auto_Country_War::set_has_expcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Struct_Auto_Country_War::clear_has_expcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Struct_Auto_Country_War::clear_expcount() {
  expcount_ = 0u;
  clear_has_expcount();
}
inline ::google::protobuf::uint32 Struct_Auto_Country_War::expcount() const {
  return expcount_;
}
inline void Struct_Auto_Country_War::set_expcount(::google::protobuf::uint32 value) {
  set_has_expcount();
  expcount_ = value;
}

// optional uint32 occupyCount = 6;
inline bool Struct_Auto_Country_War::has_occupycount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Struct_Auto_Country_War::set_has_occupycount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Struct_Auto_Country_War::clear_has_occupycount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Struct_Auto_Country_War::clear_occupycount() {
  occupycount_ = 0u;
  clear_has_occupycount();
}
inline ::google::protobuf::uint32 Struct_Auto_Country_War::occupycount() const {
  return occupycount_;
}
inline void Struct_Auto_Country_War::set_occupycount(::google::protobuf::uint32 value) {
  set_has_occupycount();
  occupycount_ = value;
}

// -------------------------------------------------------------------

// GS2C_AC_Army_Info

// optional uint32 heroid = 1;
inline bool GS2C_AC_Army_Info::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_AC_Army_Info::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_AC_Army_Info::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_AC_Army_Info::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 GS2C_AC_Army_Info::heroid() const {
  return heroid_;
}
inline void GS2C_AC_Army_Info::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// optional bool killorbekilled = 2;
inline bool GS2C_AC_Army_Info::has_killorbekilled() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_AC_Army_Info::set_has_killorbekilled() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_AC_Army_Info::clear_has_killorbekilled() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_AC_Army_Info::clear_killorbekilled() {
  killorbekilled_ = false;
  clear_has_killorbekilled();
}
inline bool GS2C_AC_Army_Info::killorbekilled() const {
  return killorbekilled_;
}
inline void GS2C_AC_Army_Info::set_killorbekilled(bool value) {
  set_has_killorbekilled();
  killorbekilled_ = value;
}

// optional string killname = 3;
inline bool GS2C_AC_Army_Info::has_killname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_AC_Army_Info::set_has_killname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_AC_Army_Info::clear_has_killname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_AC_Army_Info::clear_killname() {
  if (killname_ != &::google::protobuf::internal::kEmptyString) {
    killname_->clear();
  }
  clear_has_killname();
}
inline const ::std::string& GS2C_AC_Army_Info::killname() const {
  return *killname_;
}
inline void GS2C_AC_Army_Info::set_killname(const ::std::string& value) {
  set_has_killname();
  if (killname_ == &::google::protobuf::internal::kEmptyString) {
    killname_ = new ::std::string;
  }
  killname_->assign(value);
}
inline void GS2C_AC_Army_Info::set_killname(const char* value) {
  set_has_killname();
  if (killname_ == &::google::protobuf::internal::kEmptyString) {
    killname_ = new ::std::string;
  }
  killname_->assign(value);
}
inline void GS2C_AC_Army_Info::set_killname(const char* value, size_t size) {
  set_has_killname();
  if (killname_ == &::google::protobuf::internal::kEmptyString) {
    killname_ = new ::std::string;
  }
  killname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GS2C_AC_Army_Info::mutable_killname() {
  set_has_killname();
  if (killname_ == &::google::protobuf::internal::kEmptyString) {
    killname_ = new ::std::string;
  }
  return killname_;
}
inline ::std::string* GS2C_AC_Army_Info::release_killname() {
  clear_has_killname();
  if (killname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = killname_;
    killname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GS2C_AC_Army_Info::set_allocated_killname(::std::string* killname) {
  if (killname_ != &::google::protobuf::internal::kEmptyString) {
    delete killname_;
  }
  if (killname) {
    set_has_killname();
    killname_ = killname;
  } else {
    clear_has_killname();
    killname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 protoid = 4;
inline bool GS2C_AC_Army_Info::has_protoid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GS2C_AC_Army_Info::set_has_protoid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GS2C_AC_Army_Info::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GS2C_AC_Army_Info::clear_protoid() {
  protoid_ = 0u;
  clear_has_protoid();
}
inline ::google::protobuf::uint32 GS2C_AC_Army_Info::protoid() const {
  return protoid_;
}
inline void GS2C_AC_Army_Info::set_protoid(::google::protobuf::uint32 value) {
  set_has_protoid();
  protoid_ = value;
}

// optional uint32 damage = 5;
inline bool GS2C_AC_Army_Info::has_damage() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GS2C_AC_Army_Info::set_has_damage() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GS2C_AC_Army_Info::clear_has_damage() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GS2C_AC_Army_Info::clear_damage() {
  damage_ = 0u;
  clear_has_damage();
}
inline ::google::protobuf::uint32 GS2C_AC_Army_Info::damage() const {
  return damage_;
}
inline void GS2C_AC_Army_Info::set_damage(::google::protobuf::uint32 value) {
  set_has_damage();
  damage_ = value;
}

// -------------------------------------------------------------------

// GS2C_QuickTraining_Ret

// optional .pb.Msg_AC_Return ret = 1;
inline bool GS2C_QuickTraining_Ret::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_QuickTraining_Ret::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_QuickTraining_Ret::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_QuickTraining_Ret::clear_ret() {
  ret_ = 1;
  clear_has_ret();
}
inline ::pb::Msg_AC_Return GS2C_QuickTraining_Ret::ret() const {
  return static_cast< ::pb::Msg_AC_Return >(ret_);
}
inline void GS2C_QuickTraining_Ret::set_ret(::pb::Msg_AC_Return value) {
  assert(::pb::Msg_AC_Return_IsValid(value));
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// GS2C_Start_AC_Ret

// optional .pb.Msg_AC_Return ret = 1;
inline bool GS2C_Start_AC_Ret::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Start_AC_Ret::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Start_AC_Ret::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Start_AC_Ret::clear_ret() {
  ret_ = 1;
  clear_has_ret();
}
inline ::pb::Msg_AC_Return GS2C_Start_AC_Ret::ret() const {
  return static_cast< ::pb::Msg_AC_Return >(ret_);
}
inline void GS2C_Start_AC_Ret::set_ret(::pb::Msg_AC_Return value) {
  assert(::pb::Msg_AC_Return_IsValid(value));
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// GS2C_REAUTO_HERO_Ret

// optional .pb.Msg_AC_Return ret = 1;
inline bool GS2C_REAUTO_HERO_Ret::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_REAUTO_HERO_Ret::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_REAUTO_HERO_Ret::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_REAUTO_HERO_Ret::clear_ret() {
  ret_ = 1;
  clear_has_ret();
}
inline ::pb::Msg_AC_Return GS2C_REAUTO_HERO_Ret::ret() const {
  return static_cast< ::pb::Msg_AC_Return >(ret_);
}
inline void GS2C_REAUTO_HERO_Ret::set_ret(::pb::Msg_AC_Return value) {
  assert(::pb::Msg_AC_Return_IsValid(value));
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// GS2C_Change_Des_Ret

// optional .pb.Msg_AC_Return ret = 1;
inline bool GS2C_Change_Des_Ret::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Change_Des_Ret::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Change_Des_Ret::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Change_Des_Ret::clear_ret() {
  ret_ = 1;
  clear_has_ret();
}
inline ::pb::Msg_AC_Return GS2C_Change_Des_Ret::ret() const {
  return static_cast< ::pb::Msg_AC_Return >(ret_);
}
inline void GS2C_Change_Des_Ret::set_ret(::pb::Msg_AC_Return value) {
  assert(::pb::Msg_AC_Return_IsValid(value));
  set_has_ret();
  ret_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::Msg_AC_Return>() {
  return ::pb::Msg_AC_Return_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AutoCountryWar_2eproto__INCLUDED
