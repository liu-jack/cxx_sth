// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Palace.proto

#ifndef PROTOBUF_Palace_2eproto__INCLUDED
#define PROTOBUF_Palace_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommomDef.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Palace_2eproto();
void protobuf_AssignDesc_Palace_2eproto();
void protobuf_ShutdownFile_Palace_2eproto();

class OfficeInfo;
class PalaceAchievementInfo;
class GxDB_PalaceAchievement;
class GS2C_Palace_Level_Info;
class GS2C_Palace_All_Info;
class C2GS_Palace_Fight_New_Office;
class C2GS_Palace_Cancel_Office;
class GS2C_Palace_Cancel_Office;
class C2GS_Palace_Apply_Aide;
class C2GS_Palace_Cancel_Aide;
class C2GS_Palace_Cancel_Apply_Aide;
class C2GS_Palace_Agree_Aide;
class C2GS_Palace_Refuse_Aide;
class C2GS_Palace_Fire_Aide;
class GS2C_Palace_Take_Salary;
class C2GS_Palace_Skill_FlyTo;
class C2GS_Palace_Skill_Empty;
class C2GS_Palace_Skill_Confuse;
class C2GS_Palace_Skill_Maze;
class C2GS_Palace_Skill_Trap;
class C2GS_Palace_Take_Reward;
class GS2C_Palace_Take_Reward_Rsp;

// ===================================================================

class OfficeInfo : public ::google::protobuf::Message {
 public:
  OfficeInfo();
  virtual ~OfficeInfo();

  OfficeInfo(const OfficeInfo& from);

  inline OfficeInfo& operator=(const OfficeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OfficeInfo& default_instance();

  void Swap(OfficeInfo* other);

  // implements Message ----------------------------------------------

  OfficeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OfficeInfo& from);
  void MergeFrom(const OfficeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 country_id = 1;
  inline bool has_country_id() const;
  inline void clear_country_id();
  static const int kCountryIdFieldNumber = 1;
  inline ::google::protobuf::uint32 country_id() const;
  inline void set_country_id(::google::protobuf::uint32 value);

  // required uint32 office_id = 2;
  inline bool has_office_id() const;
  inline void clear_office_id();
  static const int kOfficeIdFieldNumber = 2;
  inline ::google::protobuf::uint32 office_id() const;
  inline void set_office_id(::google::protobuf::uint32 value);

  // optional .pb.PlayerShowData player = 3;
  inline bool has_player() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 3;
  inline const ::pb::PlayerShowData& player() const;
  inline ::pb::PlayerShowData* mutable_player();
  inline ::pb::PlayerShowData* release_player();
  inline void set_allocated_player(::pb::PlayerShowData* player);

  // repeated .pb.PlayerShowData aide_lst = 4;
  inline int aide_lst_size() const;
  inline void clear_aide_lst();
  static const int kAideLstFieldNumber = 4;
  inline const ::pb::PlayerShowData& aide_lst(int index) const;
  inline ::pb::PlayerShowData* mutable_aide_lst(int index);
  inline ::pb::PlayerShowData* add_aide_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::PlayerShowData >&
      aide_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::PlayerShowData >*
      mutable_aide_lst();

  // repeated .pb.PlayerShowData aide_apply_lst = 5;
  inline int aide_apply_lst_size() const;
  inline void clear_aide_apply_lst();
  static const int kAideApplyLstFieldNumber = 5;
  inline const ::pb::PlayerShowData& aide_apply_lst(int index) const;
  inline ::pb::PlayerShowData* mutable_aide_apply_lst(int index);
  inline ::pb::PlayerShowData* add_aide_apply_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::PlayerShowData >&
      aide_apply_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::PlayerShowData >*
      mutable_aide_apply_lst();

  // optional uint64 skill_use_time = 6;
  inline bool has_skill_use_time() const;
  inline void clear_skill_use_time();
  static const int kSkillUseTimeFieldNumber = 6;
  inline ::google::protobuf::uint64 skill_use_time() const;
  inline void set_skill_use_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.OfficeInfo)
 private:
  inline void set_has_country_id();
  inline void clear_has_country_id();
  inline void set_has_office_id();
  inline void clear_has_office_id();
  inline void set_has_player();
  inline void clear_has_player();
  inline void set_has_skill_use_time();
  inline void clear_has_skill_use_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 country_id_;
  ::google::protobuf::uint32 office_id_;
  ::pb::PlayerShowData* player_;
  ::google::protobuf::RepeatedPtrField< ::pb::PlayerShowData > aide_lst_;
  ::google::protobuf::RepeatedPtrField< ::pb::PlayerShowData > aide_apply_lst_;
  ::google::protobuf::uint64 skill_use_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static OfficeInfo* default_instance_;
};
// -------------------------------------------------------------------

class PalaceAchievementInfo : public ::google::protobuf::Message {
 public:
  PalaceAchievementInfo();
  virtual ~PalaceAchievementInfo();

  PalaceAchievementInfo(const PalaceAchievementInfo& from);

  inline PalaceAchievementInfo& operator=(const PalaceAchievementInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PalaceAchievementInfo& default_instance();

  void Swap(PalaceAchievementInfo* other);

  // implements Message ----------------------------------------------

  PalaceAchievementInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PalaceAchievementInfo& from);
  void MergeFrom(const PalaceAchievementInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 office_id = 1;
  inline bool has_office_id() const;
  inline void clear_office_id();
  static const int kOfficeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 office_id() const;
  inline void set_office_id(::google::protobuf::uint32 value);

  // optional uint32 office_state = 2;
  inline bool has_office_state() const;
  inline void clear_office_state();
  static const int kOfficeStateFieldNumber = 2;
  inline ::google::protobuf::uint32 office_state() const;
  inline void set_office_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.PalaceAchievementInfo)
 private:
  inline void set_has_office_id();
  inline void clear_has_office_id();
  inline void set_has_office_state();
  inline void clear_has_office_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 office_id_;
  ::google::protobuf::uint32 office_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static PalaceAchievementInfo* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_PalaceAchievement : public ::google::protobuf::Message {
 public:
  GxDB_PalaceAchievement();
  virtual ~GxDB_PalaceAchievement();

  GxDB_PalaceAchievement(const GxDB_PalaceAchievement& from);

  inline GxDB_PalaceAchievement& operator=(const GxDB_PalaceAchievement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_PalaceAchievement& default_instance();

  void Swap(GxDB_PalaceAchievement* other);

  // implements Message ----------------------------------------------

  GxDB_PalaceAchievement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_PalaceAchievement& from);
  void MergeFrom(const GxDB_PalaceAchievement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.PalaceAchievementInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::PalaceAchievementInfo& info(int index) const;
  inline ::pb::PalaceAchievementInfo* mutable_info(int index);
  inline ::pb::PalaceAchievementInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::PalaceAchievementInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::PalaceAchievementInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:pb.GxDB_PalaceAchievement)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::PalaceAchievementInfo > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static GxDB_PalaceAchievement* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Palace_Level_Info : public ::google::protobuf::Message {
 public:
  GS2C_Palace_Level_Info();
  virtual ~GS2C_Palace_Level_Info();

  GS2C_Palace_Level_Info(const GS2C_Palace_Level_Info& from);

  inline GS2C_Palace_Level_Info& operator=(const GS2C_Palace_Level_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Palace_Level_Info& default_instance();

  void Swap(GS2C_Palace_Level_Info* other);

  // implements Message ----------------------------------------------

  GS2C_Palace_Level_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Palace_Level_Info& from);
  void MergeFrom(const GS2C_Palace_Level_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.PalaceAchievementInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::PalaceAchievementInfo& info(int index) const;
  inline ::pb::PalaceAchievementInfo* mutable_info(int index);
  inline ::pb::PalaceAchievementInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::PalaceAchievementInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::PalaceAchievementInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Palace_Level_Info)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::PalaceAchievementInfo > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Palace_Level_Info* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Palace_All_Info : public ::google::protobuf::Message {
 public:
  GS2C_Palace_All_Info();
  virtual ~GS2C_Palace_All_Info();

  GS2C_Palace_All_Info(const GS2C_Palace_All_Info& from);

  inline GS2C_Palace_All_Info& operator=(const GS2C_Palace_All_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Palace_All_Info& default_instance();

  void Swap(GS2C_Palace_All_Info* other);

  // implements Message ----------------------------------------------

  GS2C_Palace_All_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Palace_All_Info& from);
  void MergeFrom(const GS2C_Palace_All_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.OfficeInfo office_lst = 1;
  inline int office_lst_size() const;
  inline void clear_office_lst();
  static const int kOfficeLstFieldNumber = 1;
  inline const ::pb::OfficeInfo& office_lst(int index) const;
  inline ::pb::OfficeInfo* mutable_office_lst(int index);
  inline ::pb::OfficeInfo* add_office_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::OfficeInfo >&
      office_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::OfficeInfo >*
      mutable_office_lst();

  // optional uint32 unique_country_id = 2;
  inline bool has_unique_country_id() const;
  inline void clear_unique_country_id();
  static const int kUniqueCountryIdFieldNumber = 2;
  inline ::google::protobuf::uint32 unique_country_id() const;
  inline void set_unique_country_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Palace_All_Info)
 private:
  inline void set_has_unique_country_id();
  inline void clear_has_unique_country_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::OfficeInfo > office_lst_;
  ::google::protobuf::uint32 unique_country_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Palace_All_Info* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Palace_Fight_New_Office : public ::google::protobuf::Message {
 public:
  C2GS_Palace_Fight_New_Office();
  virtual ~C2GS_Palace_Fight_New_Office();

  C2GS_Palace_Fight_New_Office(const C2GS_Palace_Fight_New_Office& from);

  inline C2GS_Palace_Fight_New_Office& operator=(const C2GS_Palace_Fight_New_Office& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Palace_Fight_New_Office& default_instance();

  void Swap(C2GS_Palace_Fight_New_Office* other);

  // implements Message ----------------------------------------------

  C2GS_Palace_Fight_New_Office* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Palace_Fight_New_Office& from);
  void MergeFrom(const C2GS_Palace_Fight_New_Office& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 office_id = 1;
  inline bool has_office_id() const;
  inline void clear_office_id();
  static const int kOfficeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 office_id() const;
  inline void set_office_id(::google::protobuf::uint32 value);

  // repeated uint32 hero_id = 2;
  inline int hero_id_size() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id(int index) const;
  inline void set_hero_id(int index, ::google::protobuf::uint32 value);
  inline void add_hero_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_id();

  // @@protoc_insertion_point(class_scope:pb.C2GS_Palace_Fight_New_Office)
 private:
  inline void set_has_office_id();
  inline void clear_has_office_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_id_;
  ::google::protobuf::uint32 office_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Palace_Fight_New_Office* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Palace_Cancel_Office : public ::google::protobuf::Message {
 public:
  C2GS_Palace_Cancel_Office();
  virtual ~C2GS_Palace_Cancel_Office();

  C2GS_Palace_Cancel_Office(const C2GS_Palace_Cancel_Office& from);

  inline C2GS_Palace_Cancel_Office& operator=(const C2GS_Palace_Cancel_Office& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Palace_Cancel_Office& default_instance();

  void Swap(C2GS_Palace_Cancel_Office* other);

  // implements Message ----------------------------------------------

  C2GS_Palace_Cancel_Office* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Palace_Cancel_Office& from);
  void MergeFrom(const C2GS_Palace_Cancel_Office& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.C2GS_Palace_Cancel_Office)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Palace_Cancel_Office* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Palace_Cancel_Office : public ::google::protobuf::Message {
 public:
  GS2C_Palace_Cancel_Office();
  virtual ~GS2C_Palace_Cancel_Office();

  GS2C_Palace_Cancel_Office(const GS2C_Palace_Cancel_Office& from);

  inline GS2C_Palace_Cancel_Office& operator=(const GS2C_Palace_Cancel_Office& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Palace_Cancel_Office& default_instance();

  void Swap(GS2C_Palace_Cancel_Office* other);

  // implements Message ----------------------------------------------

  GS2C_Palace_Cancel_Office* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Palace_Cancel_Office& from);
  void MergeFrom(const GS2C_Palace_Cancel_Office& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.GS2C_Palace_Cancel_Office)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Palace_Cancel_Office* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Palace_Apply_Aide : public ::google::protobuf::Message {
 public:
  C2GS_Palace_Apply_Aide();
  virtual ~C2GS_Palace_Apply_Aide();

  C2GS_Palace_Apply_Aide(const C2GS_Palace_Apply_Aide& from);

  inline C2GS_Palace_Apply_Aide& operator=(const C2GS_Palace_Apply_Aide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Palace_Apply_Aide& default_instance();

  void Swap(C2GS_Palace_Apply_Aide* other);

  // implements Message ----------------------------------------------

  C2GS_Palace_Apply_Aide* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Palace_Apply_Aide& from);
  void MergeFrom(const C2GS_Palace_Apply_Aide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 office_id = 1;
  inline bool has_office_id() const;
  inline void clear_office_id();
  static const int kOfficeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 office_id() const;
  inline void set_office_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Palace_Apply_Aide)
 private:
  inline void set_has_office_id();
  inline void clear_has_office_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 office_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Palace_Apply_Aide* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Palace_Cancel_Aide : public ::google::protobuf::Message {
 public:
  C2GS_Palace_Cancel_Aide();
  virtual ~C2GS_Palace_Cancel_Aide();

  C2GS_Palace_Cancel_Aide(const C2GS_Palace_Cancel_Aide& from);

  inline C2GS_Palace_Cancel_Aide& operator=(const C2GS_Palace_Cancel_Aide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Palace_Cancel_Aide& default_instance();

  void Swap(C2GS_Palace_Cancel_Aide* other);

  // implements Message ----------------------------------------------

  C2GS_Palace_Cancel_Aide* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Palace_Cancel_Aide& from);
  void MergeFrom(const C2GS_Palace_Cancel_Aide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.C2GS_Palace_Cancel_Aide)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Palace_Cancel_Aide* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Palace_Cancel_Apply_Aide : public ::google::protobuf::Message {
 public:
  C2GS_Palace_Cancel_Apply_Aide();
  virtual ~C2GS_Palace_Cancel_Apply_Aide();

  C2GS_Palace_Cancel_Apply_Aide(const C2GS_Palace_Cancel_Apply_Aide& from);

  inline C2GS_Palace_Cancel_Apply_Aide& operator=(const C2GS_Palace_Cancel_Apply_Aide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Palace_Cancel_Apply_Aide& default_instance();

  void Swap(C2GS_Palace_Cancel_Apply_Aide* other);

  // implements Message ----------------------------------------------

  C2GS_Palace_Cancel_Apply_Aide* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Palace_Cancel_Apply_Aide& from);
  void MergeFrom(const C2GS_Palace_Cancel_Apply_Aide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.C2GS_Palace_Cancel_Apply_Aide)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Palace_Cancel_Apply_Aide* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Palace_Agree_Aide : public ::google::protobuf::Message {
 public:
  C2GS_Palace_Agree_Aide();
  virtual ~C2GS_Palace_Agree_Aide();

  C2GS_Palace_Agree_Aide(const C2GS_Palace_Agree_Aide& from);

  inline C2GS_Palace_Agree_Aide& operator=(const C2GS_Palace_Agree_Aide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Palace_Agree_Aide& default_instance();

  void Swap(C2GS_Palace_Agree_Aide* other);

  // implements Message ----------------------------------------------

  C2GS_Palace_Agree_Aide* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Palace_Agree_Aide& from);
  void MergeFrom(const C2GS_Palace_Agree_Aide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 aide_id = 1;
  inline bool has_aide_id() const;
  inline void clear_aide_id();
  static const int kAideIdFieldNumber = 1;
  inline ::google::protobuf::uint64 aide_id() const;
  inline void set_aide_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Palace_Agree_Aide)
 private:
  inline void set_has_aide_id();
  inline void clear_has_aide_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 aide_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Palace_Agree_Aide* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Palace_Refuse_Aide : public ::google::protobuf::Message {
 public:
  C2GS_Palace_Refuse_Aide();
  virtual ~C2GS_Palace_Refuse_Aide();

  C2GS_Palace_Refuse_Aide(const C2GS_Palace_Refuse_Aide& from);

  inline C2GS_Palace_Refuse_Aide& operator=(const C2GS_Palace_Refuse_Aide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Palace_Refuse_Aide& default_instance();

  void Swap(C2GS_Palace_Refuse_Aide* other);

  // implements Message ----------------------------------------------

  C2GS_Palace_Refuse_Aide* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Palace_Refuse_Aide& from);
  void MergeFrom(const C2GS_Palace_Refuse_Aide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 aide_id = 1;
  inline bool has_aide_id() const;
  inline void clear_aide_id();
  static const int kAideIdFieldNumber = 1;
  inline ::google::protobuf::uint64 aide_id() const;
  inline void set_aide_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Palace_Refuse_Aide)
 private:
  inline void set_has_aide_id();
  inline void clear_has_aide_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 aide_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Palace_Refuse_Aide* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Palace_Fire_Aide : public ::google::protobuf::Message {
 public:
  C2GS_Palace_Fire_Aide();
  virtual ~C2GS_Palace_Fire_Aide();

  C2GS_Palace_Fire_Aide(const C2GS_Palace_Fire_Aide& from);

  inline C2GS_Palace_Fire_Aide& operator=(const C2GS_Palace_Fire_Aide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Palace_Fire_Aide& default_instance();

  void Swap(C2GS_Palace_Fire_Aide* other);

  // implements Message ----------------------------------------------

  C2GS_Palace_Fire_Aide* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Palace_Fire_Aide& from);
  void MergeFrom(const C2GS_Palace_Fire_Aide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 aide_id = 1;
  inline bool has_aide_id() const;
  inline void clear_aide_id();
  static const int kAideIdFieldNumber = 1;
  inline ::google::protobuf::uint64 aide_id() const;
  inline void set_aide_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Palace_Fire_Aide)
 private:
  inline void set_has_aide_id();
  inline void clear_has_aide_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 aide_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Palace_Fire_Aide* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Palace_Take_Salary : public ::google::protobuf::Message {
 public:
  GS2C_Palace_Take_Salary();
  virtual ~GS2C_Palace_Take_Salary();

  GS2C_Palace_Take_Salary(const GS2C_Palace_Take_Salary& from);

  inline GS2C_Palace_Take_Salary& operator=(const GS2C_Palace_Take_Salary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Palace_Take_Salary& default_instance();

  void Swap(GS2C_Palace_Take_Salary* other);

  // implements Message ----------------------------------------------

  GS2C_Palace_Take_Salary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Palace_Take_Salary& from);
  void MergeFrom(const GS2C_Palace_Take_Salary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.StReward reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::pb::StReward& reward() const;
  inline ::pb::StReward* mutable_reward();
  inline ::pb::StReward* release_reward();
  inline void set_allocated_reward(::pb::StReward* reward);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Palace_Take_Salary)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::StReward* reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Palace_Take_Salary* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Palace_Skill_FlyTo : public ::google::protobuf::Message {
 public:
  C2GS_Palace_Skill_FlyTo();
  virtual ~C2GS_Palace_Skill_FlyTo();

  C2GS_Palace_Skill_FlyTo(const C2GS_Palace_Skill_FlyTo& from);

  inline C2GS_Palace_Skill_FlyTo& operator=(const C2GS_Palace_Skill_FlyTo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Palace_Skill_FlyTo& default_instance();

  void Swap(C2GS_Palace_Skill_FlyTo* other);

  // implements Message ----------------------------------------------

  C2GS_Palace_Skill_FlyTo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Palace_Skill_FlyTo& from);
  void MergeFrom(const C2GS_Palace_Skill_FlyTo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 city_id = 1;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Palace_Skill_FlyTo)
 private:
  inline void set_has_city_id();
  inline void clear_has_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Palace_Skill_FlyTo* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Palace_Skill_Empty : public ::google::protobuf::Message {
 public:
  C2GS_Palace_Skill_Empty();
  virtual ~C2GS_Palace_Skill_Empty();

  C2GS_Palace_Skill_Empty(const C2GS_Palace_Skill_Empty& from);

  inline C2GS_Palace_Skill_Empty& operator=(const C2GS_Palace_Skill_Empty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Palace_Skill_Empty& default_instance();

  void Swap(C2GS_Palace_Skill_Empty* other);

  // implements Message ----------------------------------------------

  C2GS_Palace_Skill_Empty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Palace_Skill_Empty& from);
  void MergeFrom(const C2GS_Palace_Skill_Empty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 city_id = 1;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Palace_Skill_Empty)
 private:
  inline void set_has_city_id();
  inline void clear_has_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Palace_Skill_Empty* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Palace_Skill_Confuse : public ::google::protobuf::Message {
 public:
  C2GS_Palace_Skill_Confuse();
  virtual ~C2GS_Palace_Skill_Confuse();

  C2GS_Palace_Skill_Confuse(const C2GS_Palace_Skill_Confuse& from);

  inline C2GS_Palace_Skill_Confuse& operator=(const C2GS_Palace_Skill_Confuse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Palace_Skill_Confuse& default_instance();

  void Swap(C2GS_Palace_Skill_Confuse* other);

  // implements Message ----------------------------------------------

  C2GS_Palace_Skill_Confuse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Palace_Skill_Confuse& from);
  void MergeFrom(const C2GS_Palace_Skill_Confuse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 city_id = 1;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Palace_Skill_Confuse)
 private:
  inline void set_has_city_id();
  inline void clear_has_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Palace_Skill_Confuse* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Palace_Skill_Maze : public ::google::protobuf::Message {
 public:
  C2GS_Palace_Skill_Maze();
  virtual ~C2GS_Palace_Skill_Maze();

  C2GS_Palace_Skill_Maze(const C2GS_Palace_Skill_Maze& from);

  inline C2GS_Palace_Skill_Maze& operator=(const C2GS_Palace_Skill_Maze& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Palace_Skill_Maze& default_instance();

  void Swap(C2GS_Palace_Skill_Maze* other);

  // implements Message ----------------------------------------------

  C2GS_Palace_Skill_Maze* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Palace_Skill_Maze& from);
  void MergeFrom(const C2GS_Palace_Skill_Maze& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 city_id = 1;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Palace_Skill_Maze)
 private:
  inline void set_has_city_id();
  inline void clear_has_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Palace_Skill_Maze* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Palace_Skill_Trap : public ::google::protobuf::Message {
 public:
  C2GS_Palace_Skill_Trap();
  virtual ~C2GS_Palace_Skill_Trap();

  C2GS_Palace_Skill_Trap(const C2GS_Palace_Skill_Trap& from);

  inline C2GS_Palace_Skill_Trap& operator=(const C2GS_Palace_Skill_Trap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Palace_Skill_Trap& default_instance();

  void Swap(C2GS_Palace_Skill_Trap* other);

  // implements Message ----------------------------------------------

  C2GS_Palace_Skill_Trap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Palace_Skill_Trap& from);
  void MergeFrom(const C2GS_Palace_Skill_Trap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 city_id = 1;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Palace_Skill_Trap)
 private:
  inline void set_has_city_id();
  inline void clear_has_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Palace_Skill_Trap* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Palace_Take_Reward : public ::google::protobuf::Message {
 public:
  C2GS_Palace_Take_Reward();
  virtual ~C2GS_Palace_Take_Reward();

  C2GS_Palace_Take_Reward(const C2GS_Palace_Take_Reward& from);

  inline C2GS_Palace_Take_Reward& operator=(const C2GS_Palace_Take_Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Palace_Take_Reward& default_instance();

  void Swap(C2GS_Palace_Take_Reward* other);

  // implements Message ----------------------------------------------

  C2GS_Palace_Take_Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Palace_Take_Reward& from);
  void MergeFrom(const C2GS_Palace_Take_Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 office_id = 1;
  inline bool has_office_id() const;
  inline void clear_office_id();
  static const int kOfficeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 office_id() const;
  inline void set_office_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Palace_Take_Reward)
 private:
  inline void set_has_office_id();
  inline void clear_has_office_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 office_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Palace_Take_Reward* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Palace_Take_Reward_Rsp : public ::google::protobuf::Message {
 public:
  GS2C_Palace_Take_Reward_Rsp();
  virtual ~GS2C_Palace_Take_Reward_Rsp();

  GS2C_Palace_Take_Reward_Rsp(const GS2C_Palace_Take_Reward_Rsp& from);

  inline GS2C_Palace_Take_Reward_Rsp& operator=(const GS2C_Palace_Take_Reward_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Palace_Take_Reward_Rsp& default_instance();

  void Swap(GS2C_Palace_Take_Reward_Rsp* other);

  // implements Message ----------------------------------------------

  GS2C_Palace_Take_Reward_Rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Palace_Take_Reward_Rsp& from);
  void MergeFrom(const GS2C_Palace_Take_Reward_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 office_id = 1;
  inline bool has_office_id() const;
  inline void clear_office_id();
  static const int kOfficeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 office_id() const;
  inline void set_office_id(::google::protobuf::uint32 value);

  // optional uint32 office_state = 2;
  inline bool has_office_state() const;
  inline void clear_office_state();
  static const int kOfficeStateFieldNumber = 2;
  inline ::google::protobuf::uint32 office_state() const;
  inline void set_office_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Palace_Take_Reward_Rsp)
 private:
  inline void set_has_office_id();
  inline void clear_has_office_id();
  inline void set_has_office_state();
  inline void clear_has_office_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 office_id_;
  ::google::protobuf::uint32 office_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Palace_2eproto();
  friend void protobuf_AssignDesc_Palace_2eproto();
  friend void protobuf_ShutdownFile_Palace_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Palace_Take_Reward_Rsp* default_instance_;
};
// ===================================================================


// ===================================================================

// OfficeInfo

// required uint32 country_id = 1;
inline bool OfficeInfo::has_country_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfficeInfo::set_has_country_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfficeInfo::clear_has_country_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfficeInfo::clear_country_id() {
  country_id_ = 0u;
  clear_has_country_id();
}
inline ::google::protobuf::uint32 OfficeInfo::country_id() const {
  return country_id_;
}
inline void OfficeInfo::set_country_id(::google::protobuf::uint32 value) {
  set_has_country_id();
  country_id_ = value;
}

// required uint32 office_id = 2;
inline bool OfficeInfo::has_office_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OfficeInfo::set_has_office_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OfficeInfo::clear_has_office_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OfficeInfo::clear_office_id() {
  office_id_ = 0u;
  clear_has_office_id();
}
inline ::google::protobuf::uint32 OfficeInfo::office_id() const {
  return office_id_;
}
inline void OfficeInfo::set_office_id(::google::protobuf::uint32 value) {
  set_has_office_id();
  office_id_ = value;
}

// optional .pb.PlayerShowData player = 3;
inline bool OfficeInfo::has_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OfficeInfo::set_has_player() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OfficeInfo::clear_has_player() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OfficeInfo::clear_player() {
  if (player_ != NULL) player_->::pb::PlayerShowData::Clear();
  clear_has_player();
}
inline const ::pb::PlayerShowData& OfficeInfo::player() const {
  return player_ != NULL ? *player_ : *default_instance_->player_;
}
inline ::pb::PlayerShowData* OfficeInfo::mutable_player() {
  set_has_player();
  if (player_ == NULL) player_ = new ::pb::PlayerShowData;
  return player_;
}
inline ::pb::PlayerShowData* OfficeInfo::release_player() {
  clear_has_player();
  ::pb::PlayerShowData* temp = player_;
  player_ = NULL;
  return temp;
}
inline void OfficeInfo::set_allocated_player(::pb::PlayerShowData* player) {
  delete player_;
  player_ = player;
  if (player) {
    set_has_player();
  } else {
    clear_has_player();
  }
}

// repeated .pb.PlayerShowData aide_lst = 4;
inline int OfficeInfo::aide_lst_size() const {
  return aide_lst_.size();
}
inline void OfficeInfo::clear_aide_lst() {
  aide_lst_.Clear();
}
inline const ::pb::PlayerShowData& OfficeInfo::aide_lst(int index) const {
  return aide_lst_.Get(index);
}
inline ::pb::PlayerShowData* OfficeInfo::mutable_aide_lst(int index) {
  return aide_lst_.Mutable(index);
}
inline ::pb::PlayerShowData* OfficeInfo::add_aide_lst() {
  return aide_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::PlayerShowData >&
OfficeInfo::aide_lst() const {
  return aide_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::PlayerShowData >*
OfficeInfo::mutable_aide_lst() {
  return &aide_lst_;
}

// repeated .pb.PlayerShowData aide_apply_lst = 5;
inline int OfficeInfo::aide_apply_lst_size() const {
  return aide_apply_lst_.size();
}
inline void OfficeInfo::clear_aide_apply_lst() {
  aide_apply_lst_.Clear();
}
inline const ::pb::PlayerShowData& OfficeInfo::aide_apply_lst(int index) const {
  return aide_apply_lst_.Get(index);
}
inline ::pb::PlayerShowData* OfficeInfo::mutable_aide_apply_lst(int index) {
  return aide_apply_lst_.Mutable(index);
}
inline ::pb::PlayerShowData* OfficeInfo::add_aide_apply_lst() {
  return aide_apply_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::PlayerShowData >&
OfficeInfo::aide_apply_lst() const {
  return aide_apply_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::PlayerShowData >*
OfficeInfo::mutable_aide_apply_lst() {
  return &aide_apply_lst_;
}

// optional uint64 skill_use_time = 6;
inline bool OfficeInfo::has_skill_use_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OfficeInfo::set_has_skill_use_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OfficeInfo::clear_has_skill_use_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OfficeInfo::clear_skill_use_time() {
  skill_use_time_ = GOOGLE_ULONGLONG(0);
  clear_has_skill_use_time();
}
inline ::google::protobuf::uint64 OfficeInfo::skill_use_time() const {
  return skill_use_time_;
}
inline void OfficeInfo::set_skill_use_time(::google::protobuf::uint64 value) {
  set_has_skill_use_time();
  skill_use_time_ = value;
}

// -------------------------------------------------------------------

// PalaceAchievementInfo

// optional uint32 office_id = 1;
inline bool PalaceAchievementInfo::has_office_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PalaceAchievementInfo::set_has_office_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PalaceAchievementInfo::clear_has_office_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PalaceAchievementInfo::clear_office_id() {
  office_id_ = 0u;
  clear_has_office_id();
}
inline ::google::protobuf::uint32 PalaceAchievementInfo::office_id() const {
  return office_id_;
}
inline void PalaceAchievementInfo::set_office_id(::google::protobuf::uint32 value) {
  set_has_office_id();
  office_id_ = value;
}

// optional uint32 office_state = 2;
inline bool PalaceAchievementInfo::has_office_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PalaceAchievementInfo::set_has_office_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PalaceAchievementInfo::clear_has_office_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PalaceAchievementInfo::clear_office_state() {
  office_state_ = 0u;
  clear_has_office_state();
}
inline ::google::protobuf::uint32 PalaceAchievementInfo::office_state() const {
  return office_state_;
}
inline void PalaceAchievementInfo::set_office_state(::google::protobuf::uint32 value) {
  set_has_office_state();
  office_state_ = value;
}

// -------------------------------------------------------------------

// GxDB_PalaceAchievement

// repeated .pb.PalaceAchievementInfo info = 1;
inline int GxDB_PalaceAchievement::info_size() const {
  return info_.size();
}
inline void GxDB_PalaceAchievement::clear_info() {
  info_.Clear();
}
inline const ::pb::PalaceAchievementInfo& GxDB_PalaceAchievement::info(int index) const {
  return info_.Get(index);
}
inline ::pb::PalaceAchievementInfo* GxDB_PalaceAchievement::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::pb::PalaceAchievementInfo* GxDB_PalaceAchievement::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::PalaceAchievementInfo >&
GxDB_PalaceAchievement::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::PalaceAchievementInfo >*
GxDB_PalaceAchievement::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// GS2C_Palace_Level_Info

// repeated .pb.PalaceAchievementInfo info = 1;
inline int GS2C_Palace_Level_Info::info_size() const {
  return info_.size();
}
inline void GS2C_Palace_Level_Info::clear_info() {
  info_.Clear();
}
inline const ::pb::PalaceAchievementInfo& GS2C_Palace_Level_Info::info(int index) const {
  return info_.Get(index);
}
inline ::pb::PalaceAchievementInfo* GS2C_Palace_Level_Info::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::pb::PalaceAchievementInfo* GS2C_Palace_Level_Info::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::PalaceAchievementInfo >&
GS2C_Palace_Level_Info::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::PalaceAchievementInfo >*
GS2C_Palace_Level_Info::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// GS2C_Palace_All_Info

// repeated .pb.OfficeInfo office_lst = 1;
inline int GS2C_Palace_All_Info::office_lst_size() const {
  return office_lst_.size();
}
inline void GS2C_Palace_All_Info::clear_office_lst() {
  office_lst_.Clear();
}
inline const ::pb::OfficeInfo& GS2C_Palace_All_Info::office_lst(int index) const {
  return office_lst_.Get(index);
}
inline ::pb::OfficeInfo* GS2C_Palace_All_Info::mutable_office_lst(int index) {
  return office_lst_.Mutable(index);
}
inline ::pb::OfficeInfo* GS2C_Palace_All_Info::add_office_lst() {
  return office_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::OfficeInfo >&
GS2C_Palace_All_Info::office_lst() const {
  return office_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::OfficeInfo >*
GS2C_Palace_All_Info::mutable_office_lst() {
  return &office_lst_;
}

// optional uint32 unique_country_id = 2;
inline bool GS2C_Palace_All_Info::has_unique_country_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Palace_All_Info::set_has_unique_country_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Palace_All_Info::clear_has_unique_country_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Palace_All_Info::clear_unique_country_id() {
  unique_country_id_ = 0u;
  clear_has_unique_country_id();
}
inline ::google::protobuf::uint32 GS2C_Palace_All_Info::unique_country_id() const {
  return unique_country_id_;
}
inline void GS2C_Palace_All_Info::set_unique_country_id(::google::protobuf::uint32 value) {
  set_has_unique_country_id();
  unique_country_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Palace_Fight_New_Office

// required uint32 office_id = 1;
inline bool C2GS_Palace_Fight_New_Office::has_office_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Palace_Fight_New_Office::set_has_office_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Palace_Fight_New_Office::clear_has_office_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Palace_Fight_New_Office::clear_office_id() {
  office_id_ = 0u;
  clear_has_office_id();
}
inline ::google::protobuf::uint32 C2GS_Palace_Fight_New_Office::office_id() const {
  return office_id_;
}
inline void C2GS_Palace_Fight_New_Office::set_office_id(::google::protobuf::uint32 value) {
  set_has_office_id();
  office_id_ = value;
}

// repeated uint32 hero_id = 2;
inline int C2GS_Palace_Fight_New_Office::hero_id_size() const {
  return hero_id_.size();
}
inline void C2GS_Palace_Fight_New_Office::clear_hero_id() {
  hero_id_.Clear();
}
inline ::google::protobuf::uint32 C2GS_Palace_Fight_New_Office::hero_id(int index) const {
  return hero_id_.Get(index);
}
inline void C2GS_Palace_Fight_New_Office::set_hero_id(int index, ::google::protobuf::uint32 value) {
  hero_id_.Set(index, value);
}
inline void C2GS_Palace_Fight_New_Office::add_hero_id(::google::protobuf::uint32 value) {
  hero_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
C2GS_Palace_Fight_New_Office::hero_id() const {
  return hero_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
C2GS_Palace_Fight_New_Office::mutable_hero_id() {
  return &hero_id_;
}

// -------------------------------------------------------------------

// C2GS_Palace_Cancel_Office

// -------------------------------------------------------------------

// GS2C_Palace_Cancel_Office

// -------------------------------------------------------------------

// C2GS_Palace_Apply_Aide

// required uint32 office_id = 1;
inline bool C2GS_Palace_Apply_Aide::has_office_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Palace_Apply_Aide::set_has_office_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Palace_Apply_Aide::clear_has_office_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Palace_Apply_Aide::clear_office_id() {
  office_id_ = 0u;
  clear_has_office_id();
}
inline ::google::protobuf::uint32 C2GS_Palace_Apply_Aide::office_id() const {
  return office_id_;
}
inline void C2GS_Palace_Apply_Aide::set_office_id(::google::protobuf::uint32 value) {
  set_has_office_id();
  office_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Palace_Cancel_Aide

// -------------------------------------------------------------------

// C2GS_Palace_Cancel_Apply_Aide

// -------------------------------------------------------------------

// C2GS_Palace_Agree_Aide

// required uint64 aide_id = 1;
inline bool C2GS_Palace_Agree_Aide::has_aide_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Palace_Agree_Aide::set_has_aide_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Palace_Agree_Aide::clear_has_aide_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Palace_Agree_Aide::clear_aide_id() {
  aide_id_ = GOOGLE_ULONGLONG(0);
  clear_has_aide_id();
}
inline ::google::protobuf::uint64 C2GS_Palace_Agree_Aide::aide_id() const {
  return aide_id_;
}
inline void C2GS_Palace_Agree_Aide::set_aide_id(::google::protobuf::uint64 value) {
  set_has_aide_id();
  aide_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Palace_Refuse_Aide

// required uint64 aide_id = 1;
inline bool C2GS_Palace_Refuse_Aide::has_aide_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Palace_Refuse_Aide::set_has_aide_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Palace_Refuse_Aide::clear_has_aide_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Palace_Refuse_Aide::clear_aide_id() {
  aide_id_ = GOOGLE_ULONGLONG(0);
  clear_has_aide_id();
}
inline ::google::protobuf::uint64 C2GS_Palace_Refuse_Aide::aide_id() const {
  return aide_id_;
}
inline void C2GS_Palace_Refuse_Aide::set_aide_id(::google::protobuf::uint64 value) {
  set_has_aide_id();
  aide_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Palace_Fire_Aide

// required uint64 aide_id = 1;
inline bool C2GS_Palace_Fire_Aide::has_aide_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Palace_Fire_Aide::set_has_aide_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Palace_Fire_Aide::clear_has_aide_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Palace_Fire_Aide::clear_aide_id() {
  aide_id_ = GOOGLE_ULONGLONG(0);
  clear_has_aide_id();
}
inline ::google::protobuf::uint64 C2GS_Palace_Fire_Aide::aide_id() const {
  return aide_id_;
}
inline void C2GS_Palace_Fire_Aide::set_aide_id(::google::protobuf::uint64 value) {
  set_has_aide_id();
  aide_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Palace_Take_Salary

// required .pb.StReward reward = 1;
inline bool GS2C_Palace_Take_Salary::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Palace_Take_Salary::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Palace_Take_Salary::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Palace_Take_Salary::clear_reward() {
  if (reward_ != NULL) reward_->::pb::StReward::Clear();
  clear_has_reward();
}
inline const ::pb::StReward& GS2C_Palace_Take_Salary::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::pb::StReward* GS2C_Palace_Take_Salary::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::pb::StReward;
  return reward_;
}
inline ::pb::StReward* GS2C_Palace_Take_Salary::release_reward() {
  clear_has_reward();
  ::pb::StReward* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void GS2C_Palace_Take_Salary::set_allocated_reward(::pb::StReward* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
}

// -------------------------------------------------------------------

// C2GS_Palace_Skill_FlyTo

// required uint32 city_id = 1;
inline bool C2GS_Palace_Skill_FlyTo::has_city_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Palace_Skill_FlyTo::set_has_city_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Palace_Skill_FlyTo::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Palace_Skill_FlyTo::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 C2GS_Palace_Skill_FlyTo::city_id() const {
  return city_id_;
}
inline void C2GS_Palace_Skill_FlyTo::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Palace_Skill_Empty

// required uint32 city_id = 1;
inline bool C2GS_Palace_Skill_Empty::has_city_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Palace_Skill_Empty::set_has_city_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Palace_Skill_Empty::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Palace_Skill_Empty::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 C2GS_Palace_Skill_Empty::city_id() const {
  return city_id_;
}
inline void C2GS_Palace_Skill_Empty::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Palace_Skill_Confuse

// required uint32 city_id = 1;
inline bool C2GS_Palace_Skill_Confuse::has_city_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Palace_Skill_Confuse::set_has_city_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Palace_Skill_Confuse::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Palace_Skill_Confuse::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 C2GS_Palace_Skill_Confuse::city_id() const {
  return city_id_;
}
inline void C2GS_Palace_Skill_Confuse::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Palace_Skill_Maze

// required uint32 city_id = 1;
inline bool C2GS_Palace_Skill_Maze::has_city_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Palace_Skill_Maze::set_has_city_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Palace_Skill_Maze::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Palace_Skill_Maze::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 C2GS_Palace_Skill_Maze::city_id() const {
  return city_id_;
}
inline void C2GS_Palace_Skill_Maze::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Palace_Skill_Trap

// required uint32 city_id = 1;
inline bool C2GS_Palace_Skill_Trap::has_city_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Palace_Skill_Trap::set_has_city_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Palace_Skill_Trap::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Palace_Skill_Trap::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 C2GS_Palace_Skill_Trap::city_id() const {
  return city_id_;
}
inline void C2GS_Palace_Skill_Trap::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Palace_Take_Reward

// required uint32 office_id = 1;
inline bool C2GS_Palace_Take_Reward::has_office_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Palace_Take_Reward::set_has_office_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Palace_Take_Reward::clear_has_office_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Palace_Take_Reward::clear_office_id() {
  office_id_ = 0u;
  clear_has_office_id();
}
inline ::google::protobuf::uint32 C2GS_Palace_Take_Reward::office_id() const {
  return office_id_;
}
inline void C2GS_Palace_Take_Reward::set_office_id(::google::protobuf::uint32 value) {
  set_has_office_id();
  office_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Palace_Take_Reward_Rsp

// optional uint32 office_id = 1;
inline bool GS2C_Palace_Take_Reward_Rsp::has_office_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Palace_Take_Reward_Rsp::set_has_office_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Palace_Take_Reward_Rsp::clear_has_office_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Palace_Take_Reward_Rsp::clear_office_id() {
  office_id_ = 0u;
  clear_has_office_id();
}
inline ::google::protobuf::uint32 GS2C_Palace_Take_Reward_Rsp::office_id() const {
  return office_id_;
}
inline void GS2C_Palace_Take_Reward_Rsp::set_office_id(::google::protobuf::uint32 value) {
  set_has_office_id();
  office_id_ = value;
}

// optional uint32 office_state = 2;
inline bool GS2C_Palace_Take_Reward_Rsp::has_office_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Palace_Take_Reward_Rsp::set_has_office_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Palace_Take_Reward_Rsp::clear_has_office_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Palace_Take_Reward_Rsp::clear_office_state() {
  office_state_ = 0u;
  clear_has_office_state();
}
inline ::google::protobuf::uint32 GS2C_Palace_Take_Reward_Rsp::office_state() const {
  return office_state_;
}
inline void GS2C_Palace_Take_Reward_Rsp::set_office_state(::google::protobuf::uint32 value) {
  set_has_office_state();
  office_state_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Palace_2eproto__INCLUDED
