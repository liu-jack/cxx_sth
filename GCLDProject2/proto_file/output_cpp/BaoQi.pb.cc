// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BaoQi.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BaoQi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* BaoQiPro_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BaoQiPro_reflection_ = NULL;
const ::google::protobuf::Descriptor* UsedItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UsedItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* GS2C_BaoQi_All_Info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GS2C_BaoQi_All_Info_reflection_ = NULL;
const ::google::protobuf::Descriptor* GS2C_BaoQi_Exp_Inc_History_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GS2C_BaoQi_Exp_Inc_History_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2GS_BaoQi_Create_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2GS_BaoQi_Create_reflection_ = NULL;
const ::google::protobuf::Descriptor* GS2C_BaoQi_Create_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GS2C_BaoQi_Create_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2GS_BaoQi_Buy_Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2GS_BaoQi_Buy_Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2GS_BaoQi_AddExp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2GS_BaoQi_AddExp_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2GS_BaoQi_LevelUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2GS_BaoQi_LevelUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2GS_BaoQi_StarUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2GS_BaoQi_StarUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2GS_BaoQi_Punch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2GS_BaoQi_Punch_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2GS_BaoQi_KnitGem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2GS_BaoQi_KnitGem_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2GS_BaoQi_UnKnitGem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2GS_BaoQi_UnKnitGem_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BaoQiErrType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_BaoQi_2eproto() {
  protobuf_AddDesc_BaoQi_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BaoQi.proto");
  GOOGLE_CHECK(file != NULL);
  BaoQiPro_descriptor_ = file->message_type(0);
  static const int BaoQiPro_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaoQiPro, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaoQiPro, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaoQiPro, star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaoQiPro, have_hole_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaoQiPro, gem_),
  };
  BaoQiPro_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BaoQiPro_descriptor_,
      BaoQiPro::default_instance_,
      BaoQiPro_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaoQiPro, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaoQiPro, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BaoQiPro));
  UsedItem_descriptor_ = file->message_type(1);
  static const int UsedItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UsedItem, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UsedItem, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UsedItem, used_time_),
  };
  UsedItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UsedItem_descriptor_,
      UsedItem::default_instance_,
      UsedItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UsedItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UsedItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UsedItem));
  GS2C_BaoQi_All_Info_descriptor_ = file->message_type(2);
  static const int GS2C_BaoQi_All_Info_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2C_BaoQi_All_Info, property_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2C_BaoQi_All_Info, item_used_),
  };
  GS2C_BaoQi_All_Info_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GS2C_BaoQi_All_Info_descriptor_,
      GS2C_BaoQi_All_Info::default_instance_,
      GS2C_BaoQi_All_Info_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2C_BaoQi_All_Info, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2C_BaoQi_All_Info, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GS2C_BaoQi_All_Info));
  GS2C_BaoQi_Exp_Inc_History_descriptor_ = file->message_type(3);
  static const int GS2C_BaoQi_Exp_Inc_History_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2C_BaoQi_Exp_Inc_History, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2C_BaoQi_Exp_Inc_History, inc_val_lst_),
  };
  GS2C_BaoQi_Exp_Inc_History_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GS2C_BaoQi_Exp_Inc_History_descriptor_,
      GS2C_BaoQi_Exp_Inc_History::default_instance_,
      GS2C_BaoQi_Exp_Inc_History_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2C_BaoQi_Exp_Inc_History, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2C_BaoQi_Exp_Inc_History, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GS2C_BaoQi_Exp_Inc_History));
  C2GS_BaoQi_Create_descriptor_ = file->message_type(4);
  static const int C2GS_BaoQi_Create_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_Create, id_),
  };
  C2GS_BaoQi_Create_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2GS_BaoQi_Create_descriptor_,
      C2GS_BaoQi_Create::default_instance_,
      C2GS_BaoQi_Create_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_Create, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_Create, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2GS_BaoQi_Create));
  GS2C_BaoQi_Create_descriptor_ = file->message_type(5);
  static const int GS2C_BaoQi_Create_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2C_BaoQi_Create, iscreatesuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2C_BaoQi_Create, reterr_),
  };
  GS2C_BaoQi_Create_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GS2C_BaoQi_Create_descriptor_,
      GS2C_BaoQi_Create::default_instance_,
      GS2C_BaoQi_Create_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2C_BaoQi_Create, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2C_BaoQi_Create, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GS2C_BaoQi_Create));
  C2GS_BaoQi_Buy_Item_descriptor_ = file->message_type(6);
  static const int C2GS_BaoQi_Buy_Item_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_Buy_Item, id_),
  };
  C2GS_BaoQi_Buy_Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2GS_BaoQi_Buy_Item_descriptor_,
      C2GS_BaoQi_Buy_Item::default_instance_,
      C2GS_BaoQi_Buy_Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_Buy_Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_Buy_Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2GS_BaoQi_Buy_Item));
  C2GS_BaoQi_AddExp_descriptor_ = file->message_type(7);
  static const int C2GS_BaoQi_AddExp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_AddExp, id_),
  };
  C2GS_BaoQi_AddExp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2GS_BaoQi_AddExp_descriptor_,
      C2GS_BaoQi_AddExp::default_instance_,
      C2GS_BaoQi_AddExp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_AddExp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_AddExp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2GS_BaoQi_AddExp));
  C2GS_BaoQi_LevelUp_descriptor_ = file->message_type(8);
  static const int C2GS_BaoQi_LevelUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_LevelUp, id_),
  };
  C2GS_BaoQi_LevelUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2GS_BaoQi_LevelUp_descriptor_,
      C2GS_BaoQi_LevelUp::default_instance_,
      C2GS_BaoQi_LevelUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_LevelUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_LevelUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2GS_BaoQi_LevelUp));
  C2GS_BaoQi_StarUp_descriptor_ = file->message_type(9);
  static const int C2GS_BaoQi_StarUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_StarUp, id_),
  };
  C2GS_BaoQi_StarUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2GS_BaoQi_StarUp_descriptor_,
      C2GS_BaoQi_StarUp::default_instance_,
      C2GS_BaoQi_StarUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_StarUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_StarUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2GS_BaoQi_StarUp));
  C2GS_BaoQi_Punch_descriptor_ = file->message_type(10);
  static const int C2GS_BaoQi_Punch_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_Punch, id_),
  };
  C2GS_BaoQi_Punch_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2GS_BaoQi_Punch_descriptor_,
      C2GS_BaoQi_Punch::default_instance_,
      C2GS_BaoQi_Punch_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_Punch, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_Punch, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2GS_BaoQi_Punch));
  C2GS_BaoQi_KnitGem_descriptor_ = file->message_type(11);
  static const int C2GS_BaoQi_KnitGem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_KnitGem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_KnitGem, gem_),
  };
  C2GS_BaoQi_KnitGem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2GS_BaoQi_KnitGem_descriptor_,
      C2GS_BaoQi_KnitGem::default_instance_,
      C2GS_BaoQi_KnitGem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_KnitGem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_KnitGem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2GS_BaoQi_KnitGem));
  C2GS_BaoQi_UnKnitGem_descriptor_ = file->message_type(12);
  static const int C2GS_BaoQi_UnKnitGem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_UnKnitGem, id_),
  };
  C2GS_BaoQi_UnKnitGem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      C2GS_BaoQi_UnKnitGem_descriptor_,
      C2GS_BaoQi_UnKnitGem::default_instance_,
      C2GS_BaoQi_UnKnitGem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_UnKnitGem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2GS_BaoQi_UnKnitGem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(C2GS_BaoQi_UnKnitGem));
  BaoQiErrType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BaoQi_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BaoQiPro_descriptor_, &BaoQiPro::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UsedItem_descriptor_, &UsedItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GS2C_BaoQi_All_Info_descriptor_, &GS2C_BaoQi_All_Info::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GS2C_BaoQi_Exp_Inc_History_descriptor_, &GS2C_BaoQi_Exp_Inc_History::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2GS_BaoQi_Create_descriptor_, &C2GS_BaoQi_Create::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GS2C_BaoQi_Create_descriptor_, &GS2C_BaoQi_Create::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2GS_BaoQi_Buy_Item_descriptor_, &C2GS_BaoQi_Buy_Item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2GS_BaoQi_AddExp_descriptor_, &C2GS_BaoQi_AddExp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2GS_BaoQi_LevelUp_descriptor_, &C2GS_BaoQi_LevelUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2GS_BaoQi_StarUp_descriptor_, &C2GS_BaoQi_StarUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2GS_BaoQi_Punch_descriptor_, &C2GS_BaoQi_Punch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2GS_BaoQi_KnitGem_descriptor_, &C2GS_BaoQi_KnitGem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    C2GS_BaoQi_UnKnitGem_descriptor_, &C2GS_BaoQi_UnKnitGem::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BaoQi_2eproto() {
  delete BaoQiPro::default_instance_;
  delete BaoQiPro_reflection_;
  delete UsedItem::default_instance_;
  delete UsedItem_reflection_;
  delete GS2C_BaoQi_All_Info::default_instance_;
  delete GS2C_BaoQi_All_Info_reflection_;
  delete GS2C_BaoQi_Exp_Inc_History::default_instance_;
  delete GS2C_BaoQi_Exp_Inc_History_reflection_;
  delete C2GS_BaoQi_Create::default_instance_;
  delete C2GS_BaoQi_Create_reflection_;
  delete GS2C_BaoQi_Create::default_instance_;
  delete GS2C_BaoQi_Create_reflection_;
  delete C2GS_BaoQi_Buy_Item::default_instance_;
  delete C2GS_BaoQi_Buy_Item_reflection_;
  delete C2GS_BaoQi_AddExp::default_instance_;
  delete C2GS_BaoQi_AddExp_reflection_;
  delete C2GS_BaoQi_LevelUp::default_instance_;
  delete C2GS_BaoQi_LevelUp_reflection_;
  delete C2GS_BaoQi_StarUp::default_instance_;
  delete C2GS_BaoQi_StarUp_reflection_;
  delete C2GS_BaoQi_Punch::default_instance_;
  delete C2GS_BaoQi_Punch_reflection_;
  delete C2GS_BaoQi_KnitGem::default_instance_;
  delete C2GS_BaoQi_KnitGem_reflection_;
  delete C2GS_BaoQi_UnKnitGem::default_instance_;
  delete C2GS_BaoQi_UnKnitGem_reflection_;
}

void protobuf_AddDesc_BaoQi_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_CommomDef_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013BaoQi.proto\022\002pb\032\017CommomDef.proto\"T\n\010Ba"
    "oQiPro\022\r\n\005level\030\001 \002(\r\022\013\n\003exp\030\002 \002(\r\022\014\n\004st"
    "ar\030\003 \002(\r\022\021\n\thave_hole\030\004 \001(\r\022\013\n\003gem\030\005 \001(\r"
    "\"<\n\010UsedItem\022\016\n\006itemId\030\001 \001(\r\022\r\n\005count\030\002 "
    "\001(\r\022\021\n\tused_time\030\003 \001(\004\"V\n\023GS2C_BaoQi_All"
    "_Info\022\036\n\010property\030\001 \003(\0132\014.pb.BaoQiPro\022\037\n"
    "\titem_used\030\002 \003(\0132\014.pb.UsedItem\"=\n\032GS2C_B"
    "aoQi_Exp_Inc_History\022\n\n\002id\030\001 \002(\r\022\023\n\013inc_"
    "val_lst\030\002 \003(\r\"\037\n\021C2GS_BaoQi_Create\022\n\n\002id"
    "\030\001 \002(\r\"N\n\021GS2C_BaoQi_Create\022\027\n\017isCreateS"
    "uccess\030\001 \001(\010\022 \n\006retErr\030\002 \001(\0162\020.pb.BaoQiE"
    "rrType\"!\n\023C2GS_BaoQi_Buy_Item\022\n\n\002id\030\001 \002("
    "\r\"\037\n\021C2GS_BaoQi_AddExp\022\n\n\002id\030\001 \002(\r\" \n\022C2"
    "GS_BaoQi_LevelUp\022\n\n\002id\030\001 \002(\r\"\037\n\021C2GS_Bao"
    "Qi_StarUp\022\n\n\002id\030\001 \002(\r\"\036\n\020C2GS_BaoQi_Punc"
    "h\022\n\n\002id\030\001 \002(\r\"-\n\022C2GS_BaoQi_KnitGem\022\n\n\002i"
    "d\030\001 \002(\r\022\013\n\003gem\030\002 \002(\r\"\"\n\024C2GS_BaoQi_UnKni"
    "tGem\022\n\n\002id\030\001 \002(\r*\?\n\014BaoQiErrType\022\027\n\023Err_"
    "BaoQi_PassStage\020\001\022\026\n\022Err_BaoQi_Resource\020"
    "\002", 761);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BaoQi.proto", &protobuf_RegisterTypes);
  BaoQiPro::default_instance_ = new BaoQiPro();
  UsedItem::default_instance_ = new UsedItem();
  GS2C_BaoQi_All_Info::default_instance_ = new GS2C_BaoQi_All_Info();
  GS2C_BaoQi_Exp_Inc_History::default_instance_ = new GS2C_BaoQi_Exp_Inc_History();
  C2GS_BaoQi_Create::default_instance_ = new C2GS_BaoQi_Create();
  GS2C_BaoQi_Create::default_instance_ = new GS2C_BaoQi_Create();
  C2GS_BaoQi_Buy_Item::default_instance_ = new C2GS_BaoQi_Buy_Item();
  C2GS_BaoQi_AddExp::default_instance_ = new C2GS_BaoQi_AddExp();
  C2GS_BaoQi_LevelUp::default_instance_ = new C2GS_BaoQi_LevelUp();
  C2GS_BaoQi_StarUp::default_instance_ = new C2GS_BaoQi_StarUp();
  C2GS_BaoQi_Punch::default_instance_ = new C2GS_BaoQi_Punch();
  C2GS_BaoQi_KnitGem::default_instance_ = new C2GS_BaoQi_KnitGem();
  C2GS_BaoQi_UnKnitGem::default_instance_ = new C2GS_BaoQi_UnKnitGem();
  BaoQiPro::default_instance_->InitAsDefaultInstance();
  UsedItem::default_instance_->InitAsDefaultInstance();
  GS2C_BaoQi_All_Info::default_instance_->InitAsDefaultInstance();
  GS2C_BaoQi_Exp_Inc_History::default_instance_->InitAsDefaultInstance();
  C2GS_BaoQi_Create::default_instance_->InitAsDefaultInstance();
  GS2C_BaoQi_Create::default_instance_->InitAsDefaultInstance();
  C2GS_BaoQi_Buy_Item::default_instance_->InitAsDefaultInstance();
  C2GS_BaoQi_AddExp::default_instance_->InitAsDefaultInstance();
  C2GS_BaoQi_LevelUp::default_instance_->InitAsDefaultInstance();
  C2GS_BaoQi_StarUp::default_instance_->InitAsDefaultInstance();
  C2GS_BaoQi_Punch::default_instance_->InitAsDefaultInstance();
  C2GS_BaoQi_KnitGem::default_instance_->InitAsDefaultInstance();
  C2GS_BaoQi_UnKnitGem::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BaoQi_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BaoQi_2eproto {
  StaticDescriptorInitializer_BaoQi_2eproto() {
    protobuf_AddDesc_BaoQi_2eproto();
  }
} static_descriptor_initializer_BaoQi_2eproto_;
const ::google::protobuf::EnumDescriptor* BaoQiErrType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BaoQiErrType_descriptor_;
}
bool BaoQiErrType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int BaoQiPro::kLevelFieldNumber;
const int BaoQiPro::kExpFieldNumber;
const int BaoQiPro::kStarFieldNumber;
const int BaoQiPro::kHaveHoleFieldNumber;
const int BaoQiPro::kGemFieldNumber;
#endif  // !_MSC_VER

BaoQiPro::BaoQiPro()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BaoQiPro::InitAsDefaultInstance() {
}

BaoQiPro::BaoQiPro(const BaoQiPro& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BaoQiPro::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  exp_ = 0u;
  star_ = 0u;
  have_hole_ = 0u;
  gem_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BaoQiPro::~BaoQiPro() {
  SharedDtor();
}

void BaoQiPro::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BaoQiPro::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaoQiPro::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BaoQiPro_descriptor_;
}

const BaoQiPro& BaoQiPro::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BaoQi_2eproto();
  return *default_instance_;
}

BaoQiPro* BaoQiPro::default_instance_ = NULL;

BaoQiPro* BaoQiPro::New() const {
  return new BaoQiPro;
}

void BaoQiPro::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0u;
    exp_ = 0u;
    star_ = 0u;
    have_hole_ = 0u;
    gem_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BaoQiPro::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }

      // required uint32 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_star;
        break;
      }

      // required uint32 star = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_have_hole;
        break;
      }

      // optional uint32 have_hole = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_have_hole:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &have_hole_)));
          set_has_have_hole();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_gem;
        break;
      }

      // optional uint32 gem = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gem_)));
          set_has_gem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BaoQiPro::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // required uint32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exp(), output);
  }

  // required uint32 star = 3;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->star(), output);
  }

  // optional uint32 have_hole = 4;
  if (has_have_hole()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->have_hole(), output);
  }

  // optional uint32 gem = 5;
  if (has_gem()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gem(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BaoQiPro::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // required uint32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exp(), target);
  }

  // required uint32 star = 3;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->star(), target);
  }

  // optional uint32 have_hole = 4;
  if (has_have_hole()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->have_hole(), target);
  }

  // optional uint32 gem = 5;
  if (has_gem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gem(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BaoQiPro::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exp());
    }

    // required uint32 star = 3;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->star());
    }

    // optional uint32 have_hole = 4;
    if (has_have_hole()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->have_hole());
    }

    // optional uint32 gem = 5;
    if (has_gem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gem());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaoQiPro::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BaoQiPro* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BaoQiPro*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BaoQiPro::MergeFrom(const BaoQiPro& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
    if (from.has_have_hole()) {
      set_have_hole(from.have_hole());
    }
    if (from.has_gem()) {
      set_gem(from.gem());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BaoQiPro::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaoQiPro::CopyFrom(const BaoQiPro& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaoQiPro::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void BaoQiPro::Swap(BaoQiPro* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(star_, other->star_);
    std::swap(have_hole_, other->have_hole_);
    std::swap(gem_, other->gem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BaoQiPro::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BaoQiPro_descriptor_;
  metadata.reflection = BaoQiPro_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UsedItem::kItemIdFieldNumber;
const int UsedItem::kCountFieldNumber;
const int UsedItem::kUsedTimeFieldNumber;
#endif  // !_MSC_VER

UsedItem::UsedItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UsedItem::InitAsDefaultInstance() {
}

UsedItem::UsedItem(const UsedItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UsedItem::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  count_ = 0u;
  used_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UsedItem::~UsedItem() {
  SharedDtor();
}

void UsedItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UsedItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UsedItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UsedItem_descriptor_;
}

const UsedItem& UsedItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BaoQi_2eproto();
  return *default_instance_;
}

UsedItem* UsedItem::default_instance_ = NULL;

UsedItem* UsedItem::New() const {
  return new UsedItem;
}

void UsedItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = 0u;
    count_ = 0u;
    used_time_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UsedItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 itemId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional uint32 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_used_time;
        break;
      }

      // optional uint64 used_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_used_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &used_time_)));
          set_has_used_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UsedItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 itemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // optional uint64 used_time = 3;
  if (has_used_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->used_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UsedItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 itemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // optional uint64 used_time = 3;
  if (has_used_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->used_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UsedItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 itemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // optional uint64 used_time = 3;
    if (has_used_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->used_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UsedItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UsedItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UsedItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UsedItem::MergeFrom(const UsedItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_used_time()) {
      set_used_time(from.used_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UsedItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsedItem::CopyFrom(const UsedItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsedItem::IsInitialized() const {

  return true;
}

void UsedItem::Swap(UsedItem* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(count_, other->count_);
    std::swap(used_time_, other->used_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UsedItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UsedItem_descriptor_;
  metadata.reflection = UsedItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GS2C_BaoQi_All_Info::kPropertyFieldNumber;
const int GS2C_BaoQi_All_Info::kItemUsedFieldNumber;
#endif  // !_MSC_VER

GS2C_BaoQi_All_Info::GS2C_BaoQi_All_Info()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GS2C_BaoQi_All_Info::InitAsDefaultInstance() {
}

GS2C_BaoQi_All_Info::GS2C_BaoQi_All_Info(const GS2C_BaoQi_All_Info& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GS2C_BaoQi_All_Info::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GS2C_BaoQi_All_Info::~GS2C_BaoQi_All_Info() {
  SharedDtor();
}

void GS2C_BaoQi_All_Info::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GS2C_BaoQi_All_Info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GS2C_BaoQi_All_Info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GS2C_BaoQi_All_Info_descriptor_;
}

const GS2C_BaoQi_All_Info& GS2C_BaoQi_All_Info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BaoQi_2eproto();
  return *default_instance_;
}

GS2C_BaoQi_All_Info* GS2C_BaoQi_All_Info::default_instance_ = NULL;

GS2C_BaoQi_All_Info* GS2C_BaoQi_All_Info::New() const {
  return new GS2C_BaoQi_All_Info;
}

void GS2C_BaoQi_All_Info::Clear() {
  property_.Clear();
  item_used_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GS2C_BaoQi_All_Info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.BaoQiPro property = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_property:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_property()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_property;
        if (input->ExpectTag(18)) goto parse_item_used;
        break;
      }

      // repeated .pb.UsedItem item_used = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_used:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_used()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item_used;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GS2C_BaoQi_All_Info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .pb.BaoQiPro property = 1;
  for (int i = 0; i < this->property_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->property(i), output);
  }

  // repeated .pb.UsedItem item_used = 2;
  for (int i = 0; i < this->item_used_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item_used(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GS2C_BaoQi_All_Info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .pb.BaoQiPro property = 1;
  for (int i = 0; i < this->property_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->property(i), target);
  }

  // repeated .pb.UsedItem item_used = 2;
  for (int i = 0; i < this->item_used_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item_used(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GS2C_BaoQi_All_Info::ByteSize() const {
  int total_size = 0;

  // repeated .pb.BaoQiPro property = 1;
  total_size += 1 * this->property_size();
  for (int i = 0; i < this->property_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->property(i));
  }

  // repeated .pb.UsedItem item_used = 2;
  total_size += 1 * this->item_used_size();
  for (int i = 0; i < this->item_used_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_used(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GS2C_BaoQi_All_Info::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GS2C_BaoQi_All_Info* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GS2C_BaoQi_All_Info*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GS2C_BaoQi_All_Info::MergeFrom(const GS2C_BaoQi_All_Info& from) {
  GOOGLE_CHECK_NE(&from, this);
  property_.MergeFrom(from.property_);
  item_used_.MergeFrom(from.item_used_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GS2C_BaoQi_All_Info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GS2C_BaoQi_All_Info::CopyFrom(const GS2C_BaoQi_All_Info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GS2C_BaoQi_All_Info::IsInitialized() const {

  for (int i = 0; i < property_size(); i++) {
    if (!this->property(i).IsInitialized()) return false;
  }
  return true;
}

void GS2C_BaoQi_All_Info::Swap(GS2C_BaoQi_All_Info* other) {
  if (other != this) {
    property_.Swap(&other->property_);
    item_used_.Swap(&other->item_used_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GS2C_BaoQi_All_Info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GS2C_BaoQi_All_Info_descriptor_;
  metadata.reflection = GS2C_BaoQi_All_Info_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GS2C_BaoQi_Exp_Inc_History::kIdFieldNumber;
const int GS2C_BaoQi_Exp_Inc_History::kIncValLstFieldNumber;
#endif  // !_MSC_VER

GS2C_BaoQi_Exp_Inc_History::GS2C_BaoQi_Exp_Inc_History()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GS2C_BaoQi_Exp_Inc_History::InitAsDefaultInstance() {
}

GS2C_BaoQi_Exp_Inc_History::GS2C_BaoQi_Exp_Inc_History(const GS2C_BaoQi_Exp_Inc_History& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GS2C_BaoQi_Exp_Inc_History::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GS2C_BaoQi_Exp_Inc_History::~GS2C_BaoQi_Exp_Inc_History() {
  SharedDtor();
}

void GS2C_BaoQi_Exp_Inc_History::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GS2C_BaoQi_Exp_Inc_History::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GS2C_BaoQi_Exp_Inc_History::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GS2C_BaoQi_Exp_Inc_History_descriptor_;
}

const GS2C_BaoQi_Exp_Inc_History& GS2C_BaoQi_Exp_Inc_History::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BaoQi_2eproto();
  return *default_instance_;
}

GS2C_BaoQi_Exp_Inc_History* GS2C_BaoQi_Exp_Inc_History::default_instance_ = NULL;

GS2C_BaoQi_Exp_Inc_History* GS2C_BaoQi_Exp_Inc_History::New() const {
  return new GS2C_BaoQi_Exp_Inc_History;
}

void GS2C_BaoQi_Exp_Inc_History::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
  }
  inc_val_lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GS2C_BaoQi_Exp_Inc_History::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_inc_val_lst;
        break;
      }

      // repeated uint32 inc_val_lst = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inc_val_lst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_inc_val_lst())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_inc_val_lst())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_inc_val_lst;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GS2C_BaoQi_Exp_Inc_History::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated uint32 inc_val_lst = 2;
  for (int i = 0; i < this->inc_val_lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->inc_val_lst(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GS2C_BaoQi_Exp_Inc_History::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated uint32 inc_val_lst = 2;
  for (int i = 0; i < this->inc_val_lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->inc_val_lst(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GS2C_BaoQi_Exp_Inc_History::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  // repeated uint32 inc_val_lst = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->inc_val_lst_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->inc_val_lst(i));
    }
    total_size += 1 * this->inc_val_lst_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GS2C_BaoQi_Exp_Inc_History::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GS2C_BaoQi_Exp_Inc_History* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GS2C_BaoQi_Exp_Inc_History*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GS2C_BaoQi_Exp_Inc_History::MergeFrom(const GS2C_BaoQi_Exp_Inc_History& from) {
  GOOGLE_CHECK_NE(&from, this);
  inc_val_lst_.MergeFrom(from.inc_val_lst_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GS2C_BaoQi_Exp_Inc_History::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GS2C_BaoQi_Exp_Inc_History::CopyFrom(const GS2C_BaoQi_Exp_Inc_History& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GS2C_BaoQi_Exp_Inc_History::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GS2C_BaoQi_Exp_Inc_History::Swap(GS2C_BaoQi_Exp_Inc_History* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    inc_val_lst_.Swap(&other->inc_val_lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GS2C_BaoQi_Exp_Inc_History::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GS2C_BaoQi_Exp_Inc_History_descriptor_;
  metadata.reflection = GS2C_BaoQi_Exp_Inc_History_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2GS_BaoQi_Create::kIdFieldNumber;
#endif  // !_MSC_VER

C2GS_BaoQi_Create::C2GS_BaoQi_Create()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2GS_BaoQi_Create::InitAsDefaultInstance() {
}

C2GS_BaoQi_Create::C2GS_BaoQi_Create(const C2GS_BaoQi_Create& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2GS_BaoQi_Create::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2GS_BaoQi_Create::~C2GS_BaoQi_Create() {
  SharedDtor();
}

void C2GS_BaoQi_Create::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2GS_BaoQi_Create::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2GS_BaoQi_Create::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2GS_BaoQi_Create_descriptor_;
}

const C2GS_BaoQi_Create& C2GS_BaoQi_Create::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BaoQi_2eproto();
  return *default_instance_;
}

C2GS_BaoQi_Create* C2GS_BaoQi_Create::default_instance_ = NULL;

C2GS_BaoQi_Create* C2GS_BaoQi_Create::New() const {
  return new C2GS_BaoQi_Create;
}

void C2GS_BaoQi_Create::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2GS_BaoQi_Create::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2GS_BaoQi_Create::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2GS_BaoQi_Create::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2GS_BaoQi_Create::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2GS_BaoQi_Create::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2GS_BaoQi_Create* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2GS_BaoQi_Create*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2GS_BaoQi_Create::MergeFrom(const C2GS_BaoQi_Create& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2GS_BaoQi_Create::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2GS_BaoQi_Create::CopyFrom(const C2GS_BaoQi_Create& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2GS_BaoQi_Create::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void C2GS_BaoQi_Create::Swap(C2GS_BaoQi_Create* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2GS_BaoQi_Create::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2GS_BaoQi_Create_descriptor_;
  metadata.reflection = C2GS_BaoQi_Create_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GS2C_BaoQi_Create::kIsCreateSuccessFieldNumber;
const int GS2C_BaoQi_Create::kRetErrFieldNumber;
#endif  // !_MSC_VER

GS2C_BaoQi_Create::GS2C_BaoQi_Create()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GS2C_BaoQi_Create::InitAsDefaultInstance() {
}

GS2C_BaoQi_Create::GS2C_BaoQi_Create(const GS2C_BaoQi_Create& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GS2C_BaoQi_Create::SharedCtor() {
  _cached_size_ = 0;
  iscreatesuccess_ = false;
  reterr_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GS2C_BaoQi_Create::~GS2C_BaoQi_Create() {
  SharedDtor();
}

void GS2C_BaoQi_Create::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GS2C_BaoQi_Create::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GS2C_BaoQi_Create::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GS2C_BaoQi_Create_descriptor_;
}

const GS2C_BaoQi_Create& GS2C_BaoQi_Create::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BaoQi_2eproto();
  return *default_instance_;
}

GS2C_BaoQi_Create* GS2C_BaoQi_Create::default_instance_ = NULL;

GS2C_BaoQi_Create* GS2C_BaoQi_Create::New() const {
  return new GS2C_BaoQi_Create;
}

void GS2C_BaoQi_Create::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    iscreatesuccess_ = false;
    reterr_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GS2C_BaoQi_Create::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool isCreateSuccess = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iscreatesuccess_)));
          set_has_iscreatesuccess();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_retErr;
        break;
      }

      // optional .pb.BaoQiErrType retErr = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_retErr:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::BaoQiErrType_IsValid(value)) {
            set_reterr(static_cast< ::pb::BaoQiErrType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GS2C_BaoQi_Create::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool isCreateSuccess = 1;
  if (has_iscreatesuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->iscreatesuccess(), output);
  }

  // optional .pb.BaoQiErrType retErr = 2;
  if (has_reterr()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->reterr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GS2C_BaoQi_Create::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool isCreateSuccess = 1;
  if (has_iscreatesuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->iscreatesuccess(), target);
  }

  // optional .pb.BaoQiErrType retErr = 2;
  if (has_reterr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->reterr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GS2C_BaoQi_Create::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool isCreateSuccess = 1;
    if (has_iscreatesuccess()) {
      total_size += 1 + 1;
    }

    // optional .pb.BaoQiErrType retErr = 2;
    if (has_reterr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->reterr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GS2C_BaoQi_Create::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GS2C_BaoQi_Create* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GS2C_BaoQi_Create*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GS2C_BaoQi_Create::MergeFrom(const GS2C_BaoQi_Create& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_iscreatesuccess()) {
      set_iscreatesuccess(from.iscreatesuccess());
    }
    if (from.has_reterr()) {
      set_reterr(from.reterr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GS2C_BaoQi_Create::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GS2C_BaoQi_Create::CopyFrom(const GS2C_BaoQi_Create& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GS2C_BaoQi_Create::IsInitialized() const {

  return true;
}

void GS2C_BaoQi_Create::Swap(GS2C_BaoQi_Create* other) {
  if (other != this) {
    std::swap(iscreatesuccess_, other->iscreatesuccess_);
    std::swap(reterr_, other->reterr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GS2C_BaoQi_Create::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GS2C_BaoQi_Create_descriptor_;
  metadata.reflection = GS2C_BaoQi_Create_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2GS_BaoQi_Buy_Item::kIdFieldNumber;
#endif  // !_MSC_VER

C2GS_BaoQi_Buy_Item::C2GS_BaoQi_Buy_Item()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2GS_BaoQi_Buy_Item::InitAsDefaultInstance() {
}

C2GS_BaoQi_Buy_Item::C2GS_BaoQi_Buy_Item(const C2GS_BaoQi_Buy_Item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2GS_BaoQi_Buy_Item::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2GS_BaoQi_Buy_Item::~C2GS_BaoQi_Buy_Item() {
  SharedDtor();
}

void C2GS_BaoQi_Buy_Item::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2GS_BaoQi_Buy_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2GS_BaoQi_Buy_Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2GS_BaoQi_Buy_Item_descriptor_;
}

const C2GS_BaoQi_Buy_Item& C2GS_BaoQi_Buy_Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BaoQi_2eproto();
  return *default_instance_;
}

C2GS_BaoQi_Buy_Item* C2GS_BaoQi_Buy_Item::default_instance_ = NULL;

C2GS_BaoQi_Buy_Item* C2GS_BaoQi_Buy_Item::New() const {
  return new C2GS_BaoQi_Buy_Item;
}

void C2GS_BaoQi_Buy_Item::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2GS_BaoQi_Buy_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2GS_BaoQi_Buy_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2GS_BaoQi_Buy_Item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2GS_BaoQi_Buy_Item::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2GS_BaoQi_Buy_Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2GS_BaoQi_Buy_Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2GS_BaoQi_Buy_Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2GS_BaoQi_Buy_Item::MergeFrom(const C2GS_BaoQi_Buy_Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2GS_BaoQi_Buy_Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2GS_BaoQi_Buy_Item::CopyFrom(const C2GS_BaoQi_Buy_Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2GS_BaoQi_Buy_Item::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void C2GS_BaoQi_Buy_Item::Swap(C2GS_BaoQi_Buy_Item* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2GS_BaoQi_Buy_Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2GS_BaoQi_Buy_Item_descriptor_;
  metadata.reflection = C2GS_BaoQi_Buy_Item_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2GS_BaoQi_AddExp::kIdFieldNumber;
#endif  // !_MSC_VER

C2GS_BaoQi_AddExp::C2GS_BaoQi_AddExp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2GS_BaoQi_AddExp::InitAsDefaultInstance() {
}

C2GS_BaoQi_AddExp::C2GS_BaoQi_AddExp(const C2GS_BaoQi_AddExp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2GS_BaoQi_AddExp::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2GS_BaoQi_AddExp::~C2GS_BaoQi_AddExp() {
  SharedDtor();
}

void C2GS_BaoQi_AddExp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2GS_BaoQi_AddExp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2GS_BaoQi_AddExp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2GS_BaoQi_AddExp_descriptor_;
}

const C2GS_BaoQi_AddExp& C2GS_BaoQi_AddExp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BaoQi_2eproto();
  return *default_instance_;
}

C2GS_BaoQi_AddExp* C2GS_BaoQi_AddExp::default_instance_ = NULL;

C2GS_BaoQi_AddExp* C2GS_BaoQi_AddExp::New() const {
  return new C2GS_BaoQi_AddExp;
}

void C2GS_BaoQi_AddExp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2GS_BaoQi_AddExp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2GS_BaoQi_AddExp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2GS_BaoQi_AddExp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2GS_BaoQi_AddExp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2GS_BaoQi_AddExp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2GS_BaoQi_AddExp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2GS_BaoQi_AddExp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2GS_BaoQi_AddExp::MergeFrom(const C2GS_BaoQi_AddExp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2GS_BaoQi_AddExp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2GS_BaoQi_AddExp::CopyFrom(const C2GS_BaoQi_AddExp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2GS_BaoQi_AddExp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void C2GS_BaoQi_AddExp::Swap(C2GS_BaoQi_AddExp* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2GS_BaoQi_AddExp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2GS_BaoQi_AddExp_descriptor_;
  metadata.reflection = C2GS_BaoQi_AddExp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2GS_BaoQi_LevelUp::kIdFieldNumber;
#endif  // !_MSC_VER

C2GS_BaoQi_LevelUp::C2GS_BaoQi_LevelUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2GS_BaoQi_LevelUp::InitAsDefaultInstance() {
}

C2GS_BaoQi_LevelUp::C2GS_BaoQi_LevelUp(const C2GS_BaoQi_LevelUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2GS_BaoQi_LevelUp::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2GS_BaoQi_LevelUp::~C2GS_BaoQi_LevelUp() {
  SharedDtor();
}

void C2GS_BaoQi_LevelUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2GS_BaoQi_LevelUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2GS_BaoQi_LevelUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2GS_BaoQi_LevelUp_descriptor_;
}

const C2GS_BaoQi_LevelUp& C2GS_BaoQi_LevelUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BaoQi_2eproto();
  return *default_instance_;
}

C2GS_BaoQi_LevelUp* C2GS_BaoQi_LevelUp::default_instance_ = NULL;

C2GS_BaoQi_LevelUp* C2GS_BaoQi_LevelUp::New() const {
  return new C2GS_BaoQi_LevelUp;
}

void C2GS_BaoQi_LevelUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2GS_BaoQi_LevelUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2GS_BaoQi_LevelUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2GS_BaoQi_LevelUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2GS_BaoQi_LevelUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2GS_BaoQi_LevelUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2GS_BaoQi_LevelUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2GS_BaoQi_LevelUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2GS_BaoQi_LevelUp::MergeFrom(const C2GS_BaoQi_LevelUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2GS_BaoQi_LevelUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2GS_BaoQi_LevelUp::CopyFrom(const C2GS_BaoQi_LevelUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2GS_BaoQi_LevelUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void C2GS_BaoQi_LevelUp::Swap(C2GS_BaoQi_LevelUp* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2GS_BaoQi_LevelUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2GS_BaoQi_LevelUp_descriptor_;
  metadata.reflection = C2GS_BaoQi_LevelUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2GS_BaoQi_StarUp::kIdFieldNumber;
#endif  // !_MSC_VER

C2GS_BaoQi_StarUp::C2GS_BaoQi_StarUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2GS_BaoQi_StarUp::InitAsDefaultInstance() {
}

C2GS_BaoQi_StarUp::C2GS_BaoQi_StarUp(const C2GS_BaoQi_StarUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2GS_BaoQi_StarUp::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2GS_BaoQi_StarUp::~C2GS_BaoQi_StarUp() {
  SharedDtor();
}

void C2GS_BaoQi_StarUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2GS_BaoQi_StarUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2GS_BaoQi_StarUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2GS_BaoQi_StarUp_descriptor_;
}

const C2GS_BaoQi_StarUp& C2GS_BaoQi_StarUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BaoQi_2eproto();
  return *default_instance_;
}

C2GS_BaoQi_StarUp* C2GS_BaoQi_StarUp::default_instance_ = NULL;

C2GS_BaoQi_StarUp* C2GS_BaoQi_StarUp::New() const {
  return new C2GS_BaoQi_StarUp;
}

void C2GS_BaoQi_StarUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2GS_BaoQi_StarUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2GS_BaoQi_StarUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2GS_BaoQi_StarUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2GS_BaoQi_StarUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2GS_BaoQi_StarUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2GS_BaoQi_StarUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2GS_BaoQi_StarUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2GS_BaoQi_StarUp::MergeFrom(const C2GS_BaoQi_StarUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2GS_BaoQi_StarUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2GS_BaoQi_StarUp::CopyFrom(const C2GS_BaoQi_StarUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2GS_BaoQi_StarUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void C2GS_BaoQi_StarUp::Swap(C2GS_BaoQi_StarUp* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2GS_BaoQi_StarUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2GS_BaoQi_StarUp_descriptor_;
  metadata.reflection = C2GS_BaoQi_StarUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2GS_BaoQi_Punch::kIdFieldNumber;
#endif  // !_MSC_VER

C2GS_BaoQi_Punch::C2GS_BaoQi_Punch()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2GS_BaoQi_Punch::InitAsDefaultInstance() {
}

C2GS_BaoQi_Punch::C2GS_BaoQi_Punch(const C2GS_BaoQi_Punch& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2GS_BaoQi_Punch::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2GS_BaoQi_Punch::~C2GS_BaoQi_Punch() {
  SharedDtor();
}

void C2GS_BaoQi_Punch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2GS_BaoQi_Punch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2GS_BaoQi_Punch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2GS_BaoQi_Punch_descriptor_;
}

const C2GS_BaoQi_Punch& C2GS_BaoQi_Punch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BaoQi_2eproto();
  return *default_instance_;
}

C2GS_BaoQi_Punch* C2GS_BaoQi_Punch::default_instance_ = NULL;

C2GS_BaoQi_Punch* C2GS_BaoQi_Punch::New() const {
  return new C2GS_BaoQi_Punch;
}

void C2GS_BaoQi_Punch::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2GS_BaoQi_Punch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2GS_BaoQi_Punch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2GS_BaoQi_Punch::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2GS_BaoQi_Punch::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2GS_BaoQi_Punch::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2GS_BaoQi_Punch* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2GS_BaoQi_Punch*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2GS_BaoQi_Punch::MergeFrom(const C2GS_BaoQi_Punch& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2GS_BaoQi_Punch::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2GS_BaoQi_Punch::CopyFrom(const C2GS_BaoQi_Punch& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2GS_BaoQi_Punch::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void C2GS_BaoQi_Punch::Swap(C2GS_BaoQi_Punch* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2GS_BaoQi_Punch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2GS_BaoQi_Punch_descriptor_;
  metadata.reflection = C2GS_BaoQi_Punch_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2GS_BaoQi_KnitGem::kIdFieldNumber;
const int C2GS_BaoQi_KnitGem::kGemFieldNumber;
#endif  // !_MSC_VER

C2GS_BaoQi_KnitGem::C2GS_BaoQi_KnitGem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2GS_BaoQi_KnitGem::InitAsDefaultInstance() {
}

C2GS_BaoQi_KnitGem::C2GS_BaoQi_KnitGem(const C2GS_BaoQi_KnitGem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2GS_BaoQi_KnitGem::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  gem_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2GS_BaoQi_KnitGem::~C2GS_BaoQi_KnitGem() {
  SharedDtor();
}

void C2GS_BaoQi_KnitGem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2GS_BaoQi_KnitGem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2GS_BaoQi_KnitGem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2GS_BaoQi_KnitGem_descriptor_;
}

const C2GS_BaoQi_KnitGem& C2GS_BaoQi_KnitGem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BaoQi_2eproto();
  return *default_instance_;
}

C2GS_BaoQi_KnitGem* C2GS_BaoQi_KnitGem::default_instance_ = NULL;

C2GS_BaoQi_KnitGem* C2GS_BaoQi_KnitGem::New() const {
  return new C2GS_BaoQi_KnitGem;
}

void C2GS_BaoQi_KnitGem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    gem_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2GS_BaoQi_KnitGem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gem;
        break;
      }

      // required uint32 gem = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gem_)));
          set_has_gem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2GS_BaoQi_KnitGem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 gem = 2;
  if (has_gem()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gem(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2GS_BaoQi_KnitGem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 gem = 2;
  if (has_gem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gem(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2GS_BaoQi_KnitGem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 gem = 2;
    if (has_gem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gem());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2GS_BaoQi_KnitGem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2GS_BaoQi_KnitGem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2GS_BaoQi_KnitGem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2GS_BaoQi_KnitGem::MergeFrom(const C2GS_BaoQi_KnitGem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_gem()) {
      set_gem(from.gem());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2GS_BaoQi_KnitGem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2GS_BaoQi_KnitGem::CopyFrom(const C2GS_BaoQi_KnitGem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2GS_BaoQi_KnitGem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void C2GS_BaoQi_KnitGem::Swap(C2GS_BaoQi_KnitGem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(gem_, other->gem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2GS_BaoQi_KnitGem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2GS_BaoQi_KnitGem_descriptor_;
  metadata.reflection = C2GS_BaoQi_KnitGem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int C2GS_BaoQi_UnKnitGem::kIdFieldNumber;
#endif  // !_MSC_VER

C2GS_BaoQi_UnKnitGem::C2GS_BaoQi_UnKnitGem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void C2GS_BaoQi_UnKnitGem::InitAsDefaultInstance() {
}

C2GS_BaoQi_UnKnitGem::C2GS_BaoQi_UnKnitGem(const C2GS_BaoQi_UnKnitGem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void C2GS_BaoQi_UnKnitGem::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

C2GS_BaoQi_UnKnitGem::~C2GS_BaoQi_UnKnitGem() {
  SharedDtor();
}

void C2GS_BaoQi_UnKnitGem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2GS_BaoQi_UnKnitGem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2GS_BaoQi_UnKnitGem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2GS_BaoQi_UnKnitGem_descriptor_;
}

const C2GS_BaoQi_UnKnitGem& C2GS_BaoQi_UnKnitGem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BaoQi_2eproto();
  return *default_instance_;
}

C2GS_BaoQi_UnKnitGem* C2GS_BaoQi_UnKnitGem::default_instance_ = NULL;

C2GS_BaoQi_UnKnitGem* C2GS_BaoQi_UnKnitGem::New() const {
  return new C2GS_BaoQi_UnKnitGem;
}

void C2GS_BaoQi_UnKnitGem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool C2GS_BaoQi_UnKnitGem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void C2GS_BaoQi_UnKnitGem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* C2GS_BaoQi_UnKnitGem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int C2GS_BaoQi_UnKnitGem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2GS_BaoQi_UnKnitGem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const C2GS_BaoQi_UnKnitGem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const C2GS_BaoQi_UnKnitGem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void C2GS_BaoQi_UnKnitGem::MergeFrom(const C2GS_BaoQi_UnKnitGem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void C2GS_BaoQi_UnKnitGem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2GS_BaoQi_UnKnitGem::CopyFrom(const C2GS_BaoQi_UnKnitGem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2GS_BaoQi_UnKnitGem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void C2GS_BaoQi_UnKnitGem::Swap(C2GS_BaoQi_UnKnitGem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata C2GS_BaoQi_UnKnitGem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2GS_BaoQi_UnKnitGem_descriptor_;
  metadata.reflection = C2GS_BaoQi_UnKnitGem_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
