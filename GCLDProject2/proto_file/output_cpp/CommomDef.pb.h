// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommomDef.proto

#ifndef PROTOBUF_CommomDef_2eproto__INCLUDED
#define PROTOBUF_CommomDef_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CommomDef_2eproto();
void protobuf_AssignDesc_CommomDef_2eproto();
void protobuf_ShutdownFile_CommomDef_2eproto();

class PlayerShowData;
class EMPTY_PACK;
class PairValue;
class PairValueInt;
class PairTime;
class PairValueUint64;
class PairString;
class PairBool;
class Int32List;
class Uint32List;
class Uint64List;
class FloatList;
class StringList;
class ObjectFullValue;
class Int32ListUpdate;
class Uint64ListUpdate;
class FloatListUpdate;
class StringListUpdate;
class ObjectValueUpdate;
class GS2C_LootList;
class GS2C_ItemLootList;
class GS2C_PlayerString;
class GS2C_PlayerStringGroup;
class StReward;
class StRewards;
class PlayLvUpReward;

enum Data_Operate {
  DATA_UPDATE = 1,
  DATA_INSERT = 2,
  DATA_DEL = 3
};
bool Data_Operate_IsValid(int value);
const Data_Operate Data_Operate_MIN = DATA_UPDATE;
const Data_Operate Data_Operate_MAX = DATA_DEL;
const int Data_Operate_ARRAYSIZE = Data_Operate_MAX + 1;

const ::google::protobuf::EnumDescriptor* Data_Operate_descriptor();
inline const ::std::string& Data_Operate_Name(Data_Operate value) {
  return ::google::protobuf::internal::NameOfEnum(
    Data_Operate_descriptor(), value);
}
inline bool Data_Operate_Parse(
    const ::std::string& name, Data_Operate* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Data_Operate>(
    Data_Operate_descriptor(), name, value);
}
// ===================================================================

class PlayerShowData : public ::google::protobuf::Message {
 public:
  PlayerShowData();
  virtual ~PlayerShowData();

  PlayerShowData(const PlayerShowData& from);

  inline PlayerShowData& operator=(const PlayerShowData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerShowData& default_instance();

  void Swap(PlayerShowData* other);

  // implements Message ----------------------------------------------

  PlayerShowData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerShowData& from);
  void MergeFrom(const PlayerShowData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 vip_lv = 5;
  inline bool has_vip_lv() const;
  inline void clear_vip_lv();
  static const int kVipLvFieldNumber = 5;
  inline ::google::protobuf::uint32 vip_lv() const;
  inline void set_vip_lv(::google::protobuf::uint32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 player_head_id = 4;
  inline bool has_player_head_id() const;
  inline void clear_player_head_id();
  static const int kPlayerHeadIdFieldNumber = 4;
  inline ::google::protobuf::uint64 player_head_id() const;
  inline void set_player_head_id(::google::protobuf::uint64 value);

  // optional uint32 military_power = 6;
  inline bool has_military_power() const;
  inline void clear_military_power();
  static const int kMilitaryPowerFieldNumber = 6;
  inline ::google::protobuf::uint32 military_power() const;
  inline void set_military_power(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.PlayerShowData)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_vip_lv();
  inline void clear_has_vip_lv();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_player_head_id();
  inline void clear_has_player_head_id();
  inline void set_has_military_power();
  inline void clear_has_military_power();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 vip_lv_;
  ::std::string* name_;
  ::google::protobuf::uint64 player_head_id_;
  ::google::protobuf::uint32 military_power_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static PlayerShowData* default_instance_;
};
// -------------------------------------------------------------------

class EMPTY_PACK : public ::google::protobuf::Message {
 public:
  EMPTY_PACK();
  virtual ~EMPTY_PACK();

  EMPTY_PACK(const EMPTY_PACK& from);

  inline EMPTY_PACK& operator=(const EMPTY_PACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EMPTY_PACK& default_instance();

  void Swap(EMPTY_PACK* other);

  // implements Message ----------------------------------------------

  EMPTY_PACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EMPTY_PACK& from);
  void MergeFrom(const EMPTY_PACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.EMPTY_PACK)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static EMPTY_PACK* default_instance_;
};
// -------------------------------------------------------------------

class PairValue : public ::google::protobuf::Message {
 public:
  PairValue();
  virtual ~PairValue();

  PairValue(const PairValue& from);

  inline PairValue& operator=(const PairValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PairValue& default_instance();

  void Swap(PairValue* other);

  // implements Message ----------------------------------------------

  PairValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PairValue& from);
  void MergeFrom(const PairValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 first = 1;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 1;
  inline ::google::protobuf::uint32 first() const;
  inline void set_first(::google::protobuf::uint32 value);

  // optional uint32 second = 2;
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 2;
  inline ::google::protobuf::uint32 second() const;
  inline void set_second(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.PairValue)
 private:
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_second();
  inline void clear_has_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 first_;
  ::google::protobuf::uint32 second_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static PairValue* default_instance_;
};
// -------------------------------------------------------------------

class PairValueInt : public ::google::protobuf::Message {
 public:
  PairValueInt();
  virtual ~PairValueInt();

  PairValueInt(const PairValueInt& from);

  inline PairValueInt& operator=(const PairValueInt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PairValueInt& default_instance();

  void Swap(PairValueInt* other);

  // implements Message ----------------------------------------------

  PairValueInt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PairValueInt& from);
  void MergeFrom(const PairValueInt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 first = 1;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 1;
  inline ::google::protobuf::int32 first() const;
  inline void set_first(::google::protobuf::int32 value);

  // optional int32 second = 2;
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 2;
  inline ::google::protobuf::int32 second() const;
  inline void set_second(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.PairValueInt)
 private:
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_second();
  inline void clear_has_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 first_;
  ::google::protobuf::int32 second_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static PairValueInt* default_instance_;
};
// -------------------------------------------------------------------

class PairTime : public ::google::protobuf::Message {
 public:
  PairTime();
  virtual ~PairTime();

  PairTime(const PairTime& from);

  inline PairTime& operator=(const PairTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PairTime& default_instance();

  void Swap(PairTime* other);

  // implements Message ----------------------------------------------

  PairTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PairTime& from);
  void MergeFrom(const PairTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 first = 1;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 1;
  inline ::google::protobuf::uint32 first() const;
  inline void set_first(::google::protobuf::uint32 value);

  // optional uint64 second = 2;
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 2;
  inline ::google::protobuf::uint64 second() const;
  inline void set_second(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.PairTime)
 private:
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_second();
  inline void clear_has_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 second_;
  ::google::protobuf::uint32 first_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static PairTime* default_instance_;
};
// -------------------------------------------------------------------

class PairValueUint64 : public ::google::protobuf::Message {
 public:
  PairValueUint64();
  virtual ~PairValueUint64();

  PairValueUint64(const PairValueUint64& from);

  inline PairValueUint64& operator=(const PairValueUint64& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PairValueUint64& default_instance();

  void Swap(PairValueUint64* other);

  // implements Message ----------------------------------------------

  PairValueUint64* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PairValueUint64& from);
  void MergeFrom(const PairValueUint64& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 first = 1;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 1;
  inline ::google::protobuf::uint64 first() const;
  inline void set_first(::google::protobuf::uint64 value);

  // optional uint64 second = 2;
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 2;
  inline ::google::protobuf::uint64 second() const;
  inline void set_second(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.PairValueUint64)
 private:
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_second();
  inline void clear_has_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 first_;
  ::google::protobuf::uint64 second_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static PairValueUint64* default_instance_;
};
// -------------------------------------------------------------------

class PairString : public ::google::protobuf::Message {
 public:
  PairString();
  virtual ~PairString();

  PairString(const PairString& from);

  inline PairString& operator=(const PairString& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PairString& default_instance();

  void Swap(PairString* other);

  // implements Message ----------------------------------------------

  PairString* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PairString& from);
  void MergeFrom(const PairString& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string first = 1;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 1;
  inline const ::std::string& first() const;
  inline void set_first(const ::std::string& value);
  inline void set_first(const char* value);
  inline void set_first(const char* value, size_t size);
  inline ::std::string* mutable_first();
  inline ::std::string* release_first();
  inline void set_allocated_first(::std::string* first);

  // optional string second = 2;
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 2;
  inline const ::std::string& second() const;
  inline void set_second(const ::std::string& value);
  inline void set_second(const char* value);
  inline void set_second(const char* value, size_t size);
  inline ::std::string* mutable_second();
  inline ::std::string* release_second();
  inline void set_allocated_second(::std::string* second);

  // @@protoc_insertion_point(class_scope:pb.PairString)
 private:
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_second();
  inline void clear_has_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* first_;
  ::std::string* second_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static PairString* default_instance_;
};
// -------------------------------------------------------------------

class PairBool : public ::google::protobuf::Message {
 public:
  PairBool();
  virtual ~PairBool();

  PairBool(const PairBool& from);

  inline PairBool& operator=(const PairBool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PairBool& default_instance();

  void Swap(PairBool* other);

  // implements Message ----------------------------------------------

  PairBool* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PairBool& from);
  void MergeFrom(const PairBool& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 first = 1;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 1;
  inline ::google::protobuf::uint32 first() const;
  inline void set_first(::google::protobuf::uint32 value);

  // optional bool second = 2;
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 2;
  inline bool second() const;
  inline void set_second(bool value);

  // @@protoc_insertion_point(class_scope:pb.PairBool)
 private:
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_second();
  inline void clear_has_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 first_;
  bool second_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static PairBool* default_instance_;
};
// -------------------------------------------------------------------

class Int32List : public ::google::protobuf::Message {
 public:
  Int32List();
  virtual ~Int32List();

  Int32List(const Int32List& from);

  inline Int32List& operator=(const Int32List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Int32List& default_instance();

  void Swap(Int32List* other);

  // implements Message ----------------------------------------------

  Int32List* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Int32List& from);
  void MergeFrom(const Int32List& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline ::google::protobuf::int32 values(int index) const;
  inline void set_values(int index, ::google::protobuf::int32 value);
  inline void add_values(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      values() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:pb.Int32List)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > values_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static Int32List* default_instance_;
};
// -------------------------------------------------------------------

class Uint32List : public ::google::protobuf::Message {
 public:
  Uint32List();
  virtual ~Uint32List();

  Uint32List(const Uint32List& from);

  inline Uint32List& operator=(const Uint32List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Uint32List& default_instance();

  void Swap(Uint32List* other);

  // implements Message ----------------------------------------------

  Uint32List* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Uint32List& from);
  void MergeFrom(const Uint32List& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline ::google::protobuf::uint32 values(int index) const;
  inline void set_values(int index, ::google::protobuf::uint32 value);
  inline void add_values(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      values() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:pb.Uint32List)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > values_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static Uint32List* default_instance_;
};
// -------------------------------------------------------------------

class Uint64List : public ::google::protobuf::Message {
 public:
  Uint64List();
  virtual ~Uint64List();

  Uint64List(const Uint64List& from);

  inline Uint64List& operator=(const Uint64List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Uint64List& default_instance();

  void Swap(Uint64List* other);

  // implements Message ----------------------------------------------

  Uint64List* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Uint64List& from);
  void MergeFrom(const Uint64List& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline ::google::protobuf::uint64 values(int index) const;
  inline void set_values(int index, ::google::protobuf::uint64 value);
  inline void add_values(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      values() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:pb.Uint64List)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > values_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static Uint64List* default_instance_;
};
// -------------------------------------------------------------------

class FloatList : public ::google::protobuf::Message {
 public:
  FloatList();
  virtual ~FloatList();

  FloatList(const FloatList& from);

  inline FloatList& operator=(const FloatList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatList& default_instance();

  void Swap(FloatList* other);

  // implements Message ----------------------------------------------

  FloatList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FloatList& from);
  void MergeFrom(const FloatList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline float values(int index) const;
  inline void set_values(int index, float value);
  inline void add_values(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      values() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:pb.FloatList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< float > values_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static FloatList* default_instance_;
};
// -------------------------------------------------------------------

class StringList : public ::google::protobuf::Message {
 public:
  StringList();
  virtual ~StringList();

  StringList(const StringList& from);

  inline StringList& operator=(const StringList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringList& default_instance();

  void Swap(StringList* other);

  // implements Message ----------------------------------------------

  StringList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringList& from);
  void MergeFrom(const StringList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline const ::std::string& values(int index) const;
  inline ::std::string* mutable_values(int index);
  inline void set_values(int index, const ::std::string& value);
  inline void set_values(int index, const char* value);
  inline void set_values(int index, const char* value, size_t size);
  inline ::std::string* add_values();
  inline void add_values(const ::std::string& value);
  inline void add_values(const char* value);
  inline void add_values(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& values() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_values();

  // @@protoc_insertion_point(class_scope:pb.StringList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> values_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static StringList* default_instance_;
};
// -------------------------------------------------------------------

class ObjectFullValue : public ::google::protobuf::Message {
 public:
  ObjectFullValue();
  virtual ~ObjectFullValue();

  ObjectFullValue(const ObjectFullValue& from);

  inline ObjectFullValue& operator=(const ObjectFullValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectFullValue& default_instance();

  void Swap(ObjectFullValue* other);

  // implements Message ----------------------------------------------

  ObjectFullValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectFullValue& from);
  void MergeFrom(const ObjectFullValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.Int32List int32_values = 1;
  inline bool has_int32_values() const;
  inline void clear_int32_values();
  static const int kInt32ValuesFieldNumber = 1;
  inline const ::pb::Int32List& int32_values() const;
  inline ::pb::Int32List* mutable_int32_values();
  inline ::pb::Int32List* release_int32_values();
  inline void set_allocated_int32_values(::pb::Int32List* int32_values);

  // optional .pb.Uint64List uint64_values = 2;
  inline bool has_uint64_values() const;
  inline void clear_uint64_values();
  static const int kUint64ValuesFieldNumber = 2;
  inline const ::pb::Uint64List& uint64_values() const;
  inline ::pb::Uint64List* mutable_uint64_values();
  inline ::pb::Uint64List* release_uint64_values();
  inline void set_allocated_uint64_values(::pb::Uint64List* uint64_values);

  // optional .pb.FloatList float_values = 3;
  inline bool has_float_values() const;
  inline void clear_float_values();
  static const int kFloatValuesFieldNumber = 3;
  inline const ::pb::FloatList& float_values() const;
  inline ::pb::FloatList* mutable_float_values();
  inline ::pb::FloatList* release_float_values();
  inline void set_allocated_float_values(::pb::FloatList* float_values);

  // optional .pb.StringList string_values = 4;
  inline bool has_string_values() const;
  inline void clear_string_values();
  static const int kStringValuesFieldNumber = 4;
  inline const ::pb::StringList& string_values() const;
  inline ::pb::StringList* mutable_string_values();
  inline ::pb::StringList* release_string_values();
  inline void set_allocated_string_values(::pb::StringList* string_values);

  // @@protoc_insertion_point(class_scope:pb.ObjectFullValue)
 private:
  inline void set_has_int32_values();
  inline void clear_has_int32_values();
  inline void set_has_uint64_values();
  inline void clear_has_uint64_values();
  inline void set_has_float_values();
  inline void clear_has_float_values();
  inline void set_has_string_values();
  inline void clear_has_string_values();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::Int32List* int32_values_;
  ::pb::Uint64List* uint64_values_;
  ::pb::FloatList* float_values_;
  ::pb::StringList* string_values_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static ObjectFullValue* default_instance_;
};
// -------------------------------------------------------------------

class Int32ListUpdate : public ::google::protobuf::Message {
 public:
  Int32ListUpdate();
  virtual ~Int32ListUpdate();

  Int32ListUpdate(const Int32ListUpdate& from);

  inline Int32ListUpdate& operator=(const Int32ListUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Int32ListUpdate& default_instance();

  void Swap(Int32ListUpdate* other);

  // implements Message ----------------------------------------------

  Int32ListUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Int32ListUpdate& from);
  void MergeFrom(const Int32ListUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 bit_count = 1;
  inline bool has_bit_count() const;
  inline void clear_bit_count();
  static const int kBitCountFieldNumber = 1;
  inline ::google::protobuf::uint32 bit_count() const;
  inline void set_bit_count(::google::protobuf::uint32 value);

  // repeated uint32 bit_masks = 2;
  inline int bit_masks_size() const;
  inline void clear_bit_masks();
  static const int kBitMasksFieldNumber = 2;
  inline ::google::protobuf::uint32 bit_masks(int index) const;
  inline void set_bit_masks(int index, ::google::protobuf::uint32 value);
  inline void add_bit_masks(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bit_masks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bit_masks();

  // repeated int32 values = 3;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 3;
  inline ::google::protobuf::int32 values(int index) const;
  inline void set_values(int index, ::google::protobuf::int32 value);
  inline void add_values(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      values() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:pb.Int32ListUpdate)
 private:
  inline void set_has_bit_count();
  inline void clear_has_bit_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bit_masks_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > values_;
  ::google::protobuf::uint32 bit_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static Int32ListUpdate* default_instance_;
};
// -------------------------------------------------------------------

class Uint64ListUpdate : public ::google::protobuf::Message {
 public:
  Uint64ListUpdate();
  virtual ~Uint64ListUpdate();

  Uint64ListUpdate(const Uint64ListUpdate& from);

  inline Uint64ListUpdate& operator=(const Uint64ListUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Uint64ListUpdate& default_instance();

  void Swap(Uint64ListUpdate* other);

  // implements Message ----------------------------------------------

  Uint64ListUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Uint64ListUpdate& from);
  void MergeFrom(const Uint64ListUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 bit_count = 1;
  inline bool has_bit_count() const;
  inline void clear_bit_count();
  static const int kBitCountFieldNumber = 1;
  inline ::google::protobuf::uint32 bit_count() const;
  inline void set_bit_count(::google::protobuf::uint32 value);

  // repeated uint32 bit_masks = 2;
  inline int bit_masks_size() const;
  inline void clear_bit_masks();
  static const int kBitMasksFieldNumber = 2;
  inline ::google::protobuf::uint32 bit_masks(int index) const;
  inline void set_bit_masks(int index, ::google::protobuf::uint32 value);
  inline void add_bit_masks(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bit_masks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bit_masks();

  // repeated uint64 values = 3;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 3;
  inline ::google::protobuf::uint64 values(int index) const;
  inline void set_values(int index, ::google::protobuf::uint64 value);
  inline void add_values(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      values() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:pb.Uint64ListUpdate)
 private:
  inline void set_has_bit_count();
  inline void clear_has_bit_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bit_masks_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > values_;
  ::google::protobuf::uint32 bit_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static Uint64ListUpdate* default_instance_;
};
// -------------------------------------------------------------------

class FloatListUpdate : public ::google::protobuf::Message {
 public:
  FloatListUpdate();
  virtual ~FloatListUpdate();

  FloatListUpdate(const FloatListUpdate& from);

  inline FloatListUpdate& operator=(const FloatListUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatListUpdate& default_instance();

  void Swap(FloatListUpdate* other);

  // implements Message ----------------------------------------------

  FloatListUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FloatListUpdate& from);
  void MergeFrom(const FloatListUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 bit_count = 1;
  inline bool has_bit_count() const;
  inline void clear_bit_count();
  static const int kBitCountFieldNumber = 1;
  inline ::google::protobuf::uint32 bit_count() const;
  inline void set_bit_count(::google::protobuf::uint32 value);

  // repeated uint32 bit_masks = 2;
  inline int bit_masks_size() const;
  inline void clear_bit_masks();
  static const int kBitMasksFieldNumber = 2;
  inline ::google::protobuf::uint32 bit_masks(int index) const;
  inline void set_bit_masks(int index, ::google::protobuf::uint32 value);
  inline void add_bit_masks(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bit_masks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bit_masks();

  // repeated float values = 3;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 3;
  inline float values(int index) const;
  inline void set_values(int index, float value);
  inline void add_values(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      values() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:pb.FloatListUpdate)
 private:
  inline void set_has_bit_count();
  inline void clear_has_bit_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bit_masks_;
  ::google::protobuf::RepeatedField< float > values_;
  ::google::protobuf::uint32 bit_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static FloatListUpdate* default_instance_;
};
// -------------------------------------------------------------------

class StringListUpdate : public ::google::protobuf::Message {
 public:
  StringListUpdate();
  virtual ~StringListUpdate();

  StringListUpdate(const StringListUpdate& from);

  inline StringListUpdate& operator=(const StringListUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringListUpdate& default_instance();

  void Swap(StringListUpdate* other);

  // implements Message ----------------------------------------------

  StringListUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringListUpdate& from);
  void MergeFrom(const StringListUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 bit_count = 1;
  inline bool has_bit_count() const;
  inline void clear_bit_count();
  static const int kBitCountFieldNumber = 1;
  inline ::google::protobuf::uint32 bit_count() const;
  inline void set_bit_count(::google::protobuf::uint32 value);

  // repeated uint32 bit_masks = 2;
  inline int bit_masks_size() const;
  inline void clear_bit_masks();
  static const int kBitMasksFieldNumber = 2;
  inline ::google::protobuf::uint32 bit_masks(int index) const;
  inline void set_bit_masks(int index, ::google::protobuf::uint32 value);
  inline void add_bit_masks(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bit_masks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bit_masks();

  // repeated string values = 3;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 3;
  inline const ::std::string& values(int index) const;
  inline ::std::string* mutable_values(int index);
  inline void set_values(int index, const ::std::string& value);
  inline void set_values(int index, const char* value);
  inline void set_values(int index, const char* value, size_t size);
  inline ::std::string* add_values();
  inline void add_values(const ::std::string& value);
  inline void add_values(const char* value);
  inline void add_values(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& values() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_values();

  // @@protoc_insertion_point(class_scope:pb.StringListUpdate)
 private:
  inline void set_has_bit_count();
  inline void clear_has_bit_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bit_masks_;
  ::google::protobuf::RepeatedPtrField< ::std::string> values_;
  ::google::protobuf::uint32 bit_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static StringListUpdate* default_instance_;
};
// -------------------------------------------------------------------

class ObjectValueUpdate : public ::google::protobuf::Message {
 public:
  ObjectValueUpdate();
  virtual ~ObjectValueUpdate();

  ObjectValueUpdate(const ObjectValueUpdate& from);

  inline ObjectValueUpdate& operator=(const ObjectValueUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectValueUpdate& default_instance();

  void Swap(ObjectValueUpdate* other);

  // implements Message ----------------------------------------------

  ObjectValueUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectValueUpdate& from);
  void MergeFrom(const ObjectValueUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.Int32ListUpdate update_int32 = 1;
  inline bool has_update_int32() const;
  inline void clear_update_int32();
  static const int kUpdateInt32FieldNumber = 1;
  inline const ::pb::Int32ListUpdate& update_int32() const;
  inline ::pb::Int32ListUpdate* mutable_update_int32();
  inline ::pb::Int32ListUpdate* release_update_int32();
  inline void set_allocated_update_int32(::pb::Int32ListUpdate* update_int32);

  // optional .pb.Uint64ListUpdate update_uint64 = 2;
  inline bool has_update_uint64() const;
  inline void clear_update_uint64();
  static const int kUpdateUint64FieldNumber = 2;
  inline const ::pb::Uint64ListUpdate& update_uint64() const;
  inline ::pb::Uint64ListUpdate* mutable_update_uint64();
  inline ::pb::Uint64ListUpdate* release_update_uint64();
  inline void set_allocated_update_uint64(::pb::Uint64ListUpdate* update_uint64);

  // optional .pb.FloatListUpdate update_float = 3;
  inline bool has_update_float() const;
  inline void clear_update_float();
  static const int kUpdateFloatFieldNumber = 3;
  inline const ::pb::FloatListUpdate& update_float() const;
  inline ::pb::FloatListUpdate* mutable_update_float();
  inline ::pb::FloatListUpdate* release_update_float();
  inline void set_allocated_update_float(::pb::FloatListUpdate* update_float);

  // optional .pb.StringListUpdate update_string = 4;
  inline bool has_update_string() const;
  inline void clear_update_string();
  static const int kUpdateStringFieldNumber = 4;
  inline const ::pb::StringListUpdate& update_string() const;
  inline ::pb::StringListUpdate* mutable_update_string();
  inline ::pb::StringListUpdate* release_update_string();
  inline void set_allocated_update_string(::pb::StringListUpdate* update_string);

  // @@protoc_insertion_point(class_scope:pb.ObjectValueUpdate)
 private:
  inline void set_has_update_int32();
  inline void clear_has_update_int32();
  inline void set_has_update_uint64();
  inline void clear_has_update_uint64();
  inline void set_has_update_float();
  inline void clear_has_update_float();
  inline void set_has_update_string();
  inline void clear_has_update_string();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::Int32ListUpdate* update_int32_;
  ::pb::Uint64ListUpdate* update_uint64_;
  ::pb::FloatListUpdate* update_float_;
  ::pb::StringListUpdate* update_string_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static ObjectValueUpdate* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_LootList : public ::google::protobuf::Message {
 public:
  GS2C_LootList();
  virtual ~GS2C_LootList();

  GS2C_LootList(const GS2C_LootList& from);

  inline GS2C_LootList& operator=(const GS2C_LootList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_LootList& default_instance();

  void Swap(GS2C_LootList* other);

  // implements Message ----------------------------------------------

  GS2C_LootList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_LootList& from);
  void MergeFrom(const GS2C_LootList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.PairValue item_id_count = 1;
  inline int item_id_count_size() const;
  inline void clear_item_id_count();
  static const int kItemIdCountFieldNumber = 1;
  inline const ::pb::PairValue& item_id_count(int index) const;
  inline ::pb::PairValue* mutable_item_id_count(int index);
  inline ::pb::PairValue* add_item_id_count();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::PairValue >&
      item_id_count() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::PairValue >*
      mutable_item_id_count();

  // repeated .pb.PairValue curency_type_count = 2;
  inline int curency_type_count_size() const;
  inline void clear_curency_type_count();
  static const int kCurencyTypeCountFieldNumber = 2;
  inline const ::pb::PairValue& curency_type_count(int index) const;
  inline ::pb::PairValue* mutable_curency_type_count(int index);
  inline ::pb::PairValue* add_curency_type_count();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::PairValue >&
      curency_type_count() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::PairValue >*
      mutable_curency_type_count();

  // optional uint32 player_exp = 3;
  inline bool has_player_exp() const;
  inline void clear_player_exp();
  static const int kPlayerExpFieldNumber = 3;
  inline ::google::protobuf::uint32 player_exp() const;
  inline void set_player_exp(::google::protobuf::uint32 value);

  // optional uint32 char_exp = 4;
  inline bool has_char_exp() const;
  inline void clear_char_exp();
  static const int kCharExpFieldNumber = 4;
  inline ::google::protobuf::uint32 char_exp() const;
  inline void set_char_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_LootList)
 private:
  inline void set_has_player_exp();
  inline void clear_has_player_exp();
  inline void set_has_char_exp();
  inline void clear_has_char_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::PairValue > item_id_count_;
  ::google::protobuf::RepeatedPtrField< ::pb::PairValue > curency_type_count_;
  ::google::protobuf::uint32 player_exp_;
  ::google::protobuf::uint32 char_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static GS2C_LootList* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_ItemLootList : public ::google::protobuf::Message {
 public:
  GS2C_ItemLootList();
  virtual ~GS2C_ItemLootList();

  GS2C_ItemLootList(const GS2C_ItemLootList& from);

  inline GS2C_ItemLootList& operator=(const GS2C_ItemLootList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_ItemLootList& default_instance();

  void Swap(GS2C_ItemLootList* other);

  // implements Message ----------------------------------------------

  GS2C_ItemLootList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_ItemLootList& from);
  void MergeFrom(const GS2C_ItemLootList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.PairValue item_id_value = 1;
  inline int item_id_value_size() const;
  inline void clear_item_id_value();
  static const int kItemIdValueFieldNumber = 1;
  inline const ::pb::PairValue& item_id_value(int index) const;
  inline ::pb::PairValue* mutable_item_id_value(int index);
  inline ::pb::PairValue* add_item_id_value();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::PairValue >&
      item_id_value() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::PairValue >*
      mutable_item_id_value();

  // @@protoc_insertion_point(class_scope:pb.GS2C_ItemLootList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::PairValue > item_id_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static GS2C_ItemLootList* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_PlayerString : public ::google::protobuf::Message {
 public:
  GS2C_PlayerString();
  virtual ~GS2C_PlayerString();

  GS2C_PlayerString(const GS2C_PlayerString& from);

  inline GS2C_PlayerString& operator=(const GS2C_PlayerString& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_PlayerString& default_instance();

  void Swap(GS2C_PlayerString* other);

  // implements Message ----------------------------------------------

  GS2C_PlayerString* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_PlayerString& from);
  void MergeFrom(const GS2C_PlayerString& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 str_type = 1;
  inline bool has_str_type() const;
  inline void clear_str_type();
  static const int kStrTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 str_type() const;
  inline void set_str_type(::google::protobuf::uint32 value);

  // required string str = 2;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 2;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // @@protoc_insertion_point(class_scope:pb.GS2C_PlayerString)
 private:
  inline void set_has_str_type();
  inline void clear_has_str_type();
  inline void set_has_str();
  inline void clear_has_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* str_;
  ::google::protobuf::uint32 str_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static GS2C_PlayerString* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_PlayerStringGroup : public ::google::protobuf::Message {
 public:
  GS2C_PlayerStringGroup();
  virtual ~GS2C_PlayerStringGroup();

  GS2C_PlayerStringGroup(const GS2C_PlayerStringGroup& from);

  inline GS2C_PlayerStringGroup& operator=(const GS2C_PlayerStringGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_PlayerStringGroup& default_instance();

  void Swap(GS2C_PlayerStringGroup* other);

  // implements Message ----------------------------------------------

  GS2C_PlayerStringGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_PlayerStringGroup& from);
  void MergeFrom(const GS2C_PlayerStringGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.GS2C_PlayerString player_strings = 1;
  inline int player_strings_size() const;
  inline void clear_player_strings();
  static const int kPlayerStringsFieldNumber = 1;
  inline const ::pb::GS2C_PlayerString& player_strings(int index) const;
  inline ::pb::GS2C_PlayerString* mutable_player_strings(int index);
  inline ::pb::GS2C_PlayerString* add_player_strings();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::GS2C_PlayerString >&
      player_strings() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::GS2C_PlayerString >*
      mutable_player_strings();

  // @@protoc_insertion_point(class_scope:pb.GS2C_PlayerStringGroup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::GS2C_PlayerString > player_strings_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static GS2C_PlayerStringGroup* default_instance_;
};
// -------------------------------------------------------------------

class StReward : public ::google::protobuf::Message {
 public:
  StReward();
  virtual ~StReward();

  StReward(const StReward& from);

  inline StReward& operator=(const StReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StReward& default_instance();

  void Swap(StReward* other);

  // implements Message ----------------------------------------------

  StReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StReward& from);
  void MergeFrom(const StReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.StReward)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static StReward* default_instance_;
};
// -------------------------------------------------------------------

class StRewards : public ::google::protobuf::Message {
 public:
  StRewards();
  virtual ~StRewards();

  StRewards(const StRewards& from);

  inline StRewards& operator=(const StRewards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StRewards& default_instance();

  void Swap(StRewards* other);

  // implements Message ----------------------------------------------

  StRewards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StRewards& from);
  void MergeFrom(const StRewards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.StReward rewards = 1;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::pb::StReward& rewards(int index) const;
  inline ::pb::StReward* mutable_rewards(int index);
  inline ::pb::StReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:pb.StRewards)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::StReward > rewards_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static StRewards* default_instance_;
};
// -------------------------------------------------------------------

class PlayLvUpReward : public ::google::protobuf::Message {
 public:
  PlayLvUpReward();
  virtual ~PlayLvUpReward();

  PlayLvUpReward(const PlayLvUpReward& from);

  inline PlayLvUpReward& operator=(const PlayLvUpReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayLvUpReward& default_instance();

  void Swap(PlayLvUpReward* other);

  // implements Message ----------------------------------------------

  PlayLvUpReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayLvUpReward& from);
  void MergeFrom(const PlayLvUpReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.StReward rewards = 1;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::pb::StReward& rewards(int index) const;
  inline ::pb::StReward* mutable_rewards(int index);
  inline ::pb::StReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
      mutable_rewards();

  // required uint32 playerLv = 2;
  inline bool has_playerlv() const;
  inline void clear_playerlv();
  static const int kPlayerLvFieldNumber = 2;
  inline ::google::protobuf::uint32 playerlv() const;
  inline void set_playerlv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.PlayLvUpReward)
 private:
  inline void set_has_playerlv();
  inline void clear_has_playerlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::StReward > rewards_;
  ::google::protobuf::uint32 playerlv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CommomDef_2eproto();
  friend void protobuf_AssignDesc_CommomDef_2eproto();
  friend void protobuf_ShutdownFile_CommomDef_2eproto();

  void InitAsDefaultInstance();
  static PlayLvUpReward* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerShowData

// optional uint64 player_id = 1;
inline bool PlayerShowData::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerShowData::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerShowData::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerShowData::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 PlayerShowData::player_id() const {
  return player_id_;
}
inline void PlayerShowData::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 level = 2;
inline bool PlayerShowData::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerShowData::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerShowData::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerShowData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PlayerShowData::level() const {
  return level_;
}
inline void PlayerShowData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 vip_lv = 5;
inline bool PlayerShowData::has_vip_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerShowData::set_has_vip_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerShowData::clear_has_vip_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerShowData::clear_vip_lv() {
  vip_lv_ = 0u;
  clear_has_vip_lv();
}
inline ::google::protobuf::uint32 PlayerShowData::vip_lv() const {
  return vip_lv_;
}
inline void PlayerShowData::set_vip_lv(::google::protobuf::uint32 value) {
  set_has_vip_lv();
  vip_lv_ = value;
}

// optional string name = 3;
inline bool PlayerShowData::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerShowData::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerShowData::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerShowData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PlayerShowData::name() const {
  return *name_;
}
inline void PlayerShowData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PlayerShowData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PlayerShowData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerShowData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PlayerShowData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerShowData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 player_head_id = 4;
inline bool PlayerShowData::has_player_head_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerShowData::set_has_player_head_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerShowData::clear_has_player_head_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerShowData::clear_player_head_id() {
  player_head_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_head_id();
}
inline ::google::protobuf::uint64 PlayerShowData::player_head_id() const {
  return player_head_id_;
}
inline void PlayerShowData::set_player_head_id(::google::protobuf::uint64 value) {
  set_has_player_head_id();
  player_head_id_ = value;
}

// optional uint32 military_power = 6;
inline bool PlayerShowData::has_military_power() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerShowData::set_has_military_power() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerShowData::clear_has_military_power() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerShowData::clear_military_power() {
  military_power_ = 0u;
  clear_has_military_power();
}
inline ::google::protobuf::uint32 PlayerShowData::military_power() const {
  return military_power_;
}
inline void PlayerShowData::set_military_power(::google::protobuf::uint32 value) {
  set_has_military_power();
  military_power_ = value;
}

// -------------------------------------------------------------------

// EMPTY_PACK

// -------------------------------------------------------------------

// PairValue

// optional uint32 first = 1;
inline bool PairValue::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PairValue::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PairValue::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PairValue::clear_first() {
  first_ = 0u;
  clear_has_first();
}
inline ::google::protobuf::uint32 PairValue::first() const {
  return first_;
}
inline void PairValue::set_first(::google::protobuf::uint32 value) {
  set_has_first();
  first_ = value;
}

// optional uint32 second = 2;
inline bool PairValue::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PairValue::set_has_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PairValue::clear_has_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PairValue::clear_second() {
  second_ = 0u;
  clear_has_second();
}
inline ::google::protobuf::uint32 PairValue::second() const {
  return second_;
}
inline void PairValue::set_second(::google::protobuf::uint32 value) {
  set_has_second();
  second_ = value;
}

// -------------------------------------------------------------------

// PairValueInt

// optional int32 first = 1;
inline bool PairValueInt::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PairValueInt::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PairValueInt::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PairValueInt::clear_first() {
  first_ = 0;
  clear_has_first();
}
inline ::google::protobuf::int32 PairValueInt::first() const {
  return first_;
}
inline void PairValueInt::set_first(::google::protobuf::int32 value) {
  set_has_first();
  first_ = value;
}

// optional int32 second = 2;
inline bool PairValueInt::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PairValueInt::set_has_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PairValueInt::clear_has_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PairValueInt::clear_second() {
  second_ = 0;
  clear_has_second();
}
inline ::google::protobuf::int32 PairValueInt::second() const {
  return second_;
}
inline void PairValueInt::set_second(::google::protobuf::int32 value) {
  set_has_second();
  second_ = value;
}

// -------------------------------------------------------------------

// PairTime

// optional uint32 first = 1;
inline bool PairTime::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PairTime::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PairTime::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PairTime::clear_first() {
  first_ = 0u;
  clear_has_first();
}
inline ::google::protobuf::uint32 PairTime::first() const {
  return first_;
}
inline void PairTime::set_first(::google::protobuf::uint32 value) {
  set_has_first();
  first_ = value;
}

// optional uint64 second = 2;
inline bool PairTime::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PairTime::set_has_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PairTime::clear_has_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PairTime::clear_second() {
  second_ = GOOGLE_ULONGLONG(0);
  clear_has_second();
}
inline ::google::protobuf::uint64 PairTime::second() const {
  return second_;
}
inline void PairTime::set_second(::google::protobuf::uint64 value) {
  set_has_second();
  second_ = value;
}

// -------------------------------------------------------------------

// PairValueUint64

// optional uint64 first = 1;
inline bool PairValueUint64::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PairValueUint64::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PairValueUint64::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PairValueUint64::clear_first() {
  first_ = GOOGLE_ULONGLONG(0);
  clear_has_first();
}
inline ::google::protobuf::uint64 PairValueUint64::first() const {
  return first_;
}
inline void PairValueUint64::set_first(::google::protobuf::uint64 value) {
  set_has_first();
  first_ = value;
}

// optional uint64 second = 2;
inline bool PairValueUint64::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PairValueUint64::set_has_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PairValueUint64::clear_has_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PairValueUint64::clear_second() {
  second_ = GOOGLE_ULONGLONG(0);
  clear_has_second();
}
inline ::google::protobuf::uint64 PairValueUint64::second() const {
  return second_;
}
inline void PairValueUint64::set_second(::google::protobuf::uint64 value) {
  set_has_second();
  second_ = value;
}

// -------------------------------------------------------------------

// PairString

// optional string first = 1;
inline bool PairString::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PairString::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PairString::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PairString::clear_first() {
  if (first_ != &::google::protobuf::internal::kEmptyString) {
    first_->clear();
  }
  clear_has_first();
}
inline const ::std::string& PairString::first() const {
  return *first_;
}
inline void PairString::set_first(const ::std::string& value) {
  set_has_first();
  if (first_ == &::google::protobuf::internal::kEmptyString) {
    first_ = new ::std::string;
  }
  first_->assign(value);
}
inline void PairString::set_first(const char* value) {
  set_has_first();
  if (first_ == &::google::protobuf::internal::kEmptyString) {
    first_ = new ::std::string;
  }
  first_->assign(value);
}
inline void PairString::set_first(const char* value, size_t size) {
  set_has_first();
  if (first_ == &::google::protobuf::internal::kEmptyString) {
    first_ = new ::std::string;
  }
  first_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PairString::mutable_first() {
  set_has_first();
  if (first_ == &::google::protobuf::internal::kEmptyString) {
    first_ = new ::std::string;
  }
  return first_;
}
inline ::std::string* PairString::release_first() {
  clear_has_first();
  if (first_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = first_;
    first_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PairString::set_allocated_first(::std::string* first) {
  if (first_ != &::google::protobuf::internal::kEmptyString) {
    delete first_;
  }
  if (first) {
    set_has_first();
    first_ = first;
  } else {
    clear_has_first();
    first_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string second = 2;
inline bool PairString::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PairString::set_has_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PairString::clear_has_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PairString::clear_second() {
  if (second_ != &::google::protobuf::internal::kEmptyString) {
    second_->clear();
  }
  clear_has_second();
}
inline const ::std::string& PairString::second() const {
  return *second_;
}
inline void PairString::set_second(const ::std::string& value) {
  set_has_second();
  if (second_ == &::google::protobuf::internal::kEmptyString) {
    second_ = new ::std::string;
  }
  second_->assign(value);
}
inline void PairString::set_second(const char* value) {
  set_has_second();
  if (second_ == &::google::protobuf::internal::kEmptyString) {
    second_ = new ::std::string;
  }
  second_->assign(value);
}
inline void PairString::set_second(const char* value, size_t size) {
  set_has_second();
  if (second_ == &::google::protobuf::internal::kEmptyString) {
    second_ = new ::std::string;
  }
  second_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PairString::mutable_second() {
  set_has_second();
  if (second_ == &::google::protobuf::internal::kEmptyString) {
    second_ = new ::std::string;
  }
  return second_;
}
inline ::std::string* PairString::release_second() {
  clear_has_second();
  if (second_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = second_;
    second_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PairString::set_allocated_second(::std::string* second) {
  if (second_ != &::google::protobuf::internal::kEmptyString) {
    delete second_;
  }
  if (second) {
    set_has_second();
    second_ = second;
  } else {
    clear_has_second();
    second_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PairBool

// optional uint32 first = 1;
inline bool PairBool::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PairBool::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PairBool::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PairBool::clear_first() {
  first_ = 0u;
  clear_has_first();
}
inline ::google::protobuf::uint32 PairBool::first() const {
  return first_;
}
inline void PairBool::set_first(::google::protobuf::uint32 value) {
  set_has_first();
  first_ = value;
}

// optional bool second = 2;
inline bool PairBool::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PairBool::set_has_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PairBool::clear_has_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PairBool::clear_second() {
  second_ = false;
  clear_has_second();
}
inline bool PairBool::second() const {
  return second_;
}
inline void PairBool::set_second(bool value) {
  set_has_second();
  second_ = value;
}

// -------------------------------------------------------------------

// Int32List

// repeated int32 values = 1;
inline int Int32List::values_size() const {
  return values_.size();
}
inline void Int32List::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::int32 Int32List::values(int index) const {
  return values_.Get(index);
}
inline void Int32List::set_values(int index, ::google::protobuf::int32 value) {
  values_.Set(index, value);
}
inline void Int32List::add_values(::google::protobuf::int32 value) {
  values_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Int32List::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Int32List::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// Uint32List

// repeated uint32 values = 1;
inline int Uint32List::values_size() const {
  return values_.size();
}
inline void Uint32List::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::uint32 Uint32List::values(int index) const {
  return values_.Get(index);
}
inline void Uint32List::set_values(int index, ::google::protobuf::uint32 value) {
  values_.Set(index, value);
}
inline void Uint32List::add_values(::google::protobuf::uint32 value) {
  values_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Uint32List::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Uint32List::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// Uint64List

// repeated uint64 values = 1;
inline int Uint64List::values_size() const {
  return values_.size();
}
inline void Uint64List::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::uint64 Uint64List::values(int index) const {
  return values_.Get(index);
}
inline void Uint64List::set_values(int index, ::google::protobuf::uint64 value) {
  values_.Set(index, value);
}
inline void Uint64List::add_values(::google::protobuf::uint64 value) {
  values_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Uint64List::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Uint64List::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// FloatList

// repeated float values = 1;
inline int FloatList::values_size() const {
  return values_.size();
}
inline void FloatList::clear_values() {
  values_.Clear();
}
inline float FloatList::values(int index) const {
  return values_.Get(index);
}
inline void FloatList::set_values(int index, float value) {
  values_.Set(index, value);
}
inline void FloatList::add_values(float value) {
  values_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
FloatList::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedField< float >*
FloatList::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// StringList

// repeated string values = 1;
inline int StringList::values_size() const {
  return values_.size();
}
inline void StringList::clear_values() {
  values_.Clear();
}
inline const ::std::string& StringList::values(int index) const {
  return values_.Get(index);
}
inline ::std::string* StringList::mutable_values(int index) {
  return values_.Mutable(index);
}
inline void StringList::set_values(int index, const ::std::string& value) {
  values_.Mutable(index)->assign(value);
}
inline void StringList::set_values(int index, const char* value) {
  values_.Mutable(index)->assign(value);
}
inline void StringList::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StringList::add_values() {
  return values_.Add();
}
inline void StringList::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
}
inline void StringList::add_values(const char* value) {
  values_.Add()->assign(value);
}
inline void StringList::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringList::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StringList::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// ObjectFullValue

// optional .pb.Int32List int32_values = 1;
inline bool ObjectFullValue::has_int32_values() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectFullValue::set_has_int32_values() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectFullValue::clear_has_int32_values() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectFullValue::clear_int32_values() {
  if (int32_values_ != NULL) int32_values_->::pb::Int32List::Clear();
  clear_has_int32_values();
}
inline const ::pb::Int32List& ObjectFullValue::int32_values() const {
  return int32_values_ != NULL ? *int32_values_ : *default_instance_->int32_values_;
}
inline ::pb::Int32List* ObjectFullValue::mutable_int32_values() {
  set_has_int32_values();
  if (int32_values_ == NULL) int32_values_ = new ::pb::Int32List;
  return int32_values_;
}
inline ::pb::Int32List* ObjectFullValue::release_int32_values() {
  clear_has_int32_values();
  ::pb::Int32List* temp = int32_values_;
  int32_values_ = NULL;
  return temp;
}
inline void ObjectFullValue::set_allocated_int32_values(::pb::Int32List* int32_values) {
  delete int32_values_;
  int32_values_ = int32_values;
  if (int32_values) {
    set_has_int32_values();
  } else {
    clear_has_int32_values();
  }
}

// optional .pb.Uint64List uint64_values = 2;
inline bool ObjectFullValue::has_uint64_values() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectFullValue::set_has_uint64_values() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ObjectFullValue::clear_has_uint64_values() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ObjectFullValue::clear_uint64_values() {
  if (uint64_values_ != NULL) uint64_values_->::pb::Uint64List::Clear();
  clear_has_uint64_values();
}
inline const ::pb::Uint64List& ObjectFullValue::uint64_values() const {
  return uint64_values_ != NULL ? *uint64_values_ : *default_instance_->uint64_values_;
}
inline ::pb::Uint64List* ObjectFullValue::mutable_uint64_values() {
  set_has_uint64_values();
  if (uint64_values_ == NULL) uint64_values_ = new ::pb::Uint64List;
  return uint64_values_;
}
inline ::pb::Uint64List* ObjectFullValue::release_uint64_values() {
  clear_has_uint64_values();
  ::pb::Uint64List* temp = uint64_values_;
  uint64_values_ = NULL;
  return temp;
}
inline void ObjectFullValue::set_allocated_uint64_values(::pb::Uint64List* uint64_values) {
  delete uint64_values_;
  uint64_values_ = uint64_values;
  if (uint64_values) {
    set_has_uint64_values();
  } else {
    clear_has_uint64_values();
  }
}

// optional .pb.FloatList float_values = 3;
inline bool ObjectFullValue::has_float_values() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ObjectFullValue::set_has_float_values() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ObjectFullValue::clear_has_float_values() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ObjectFullValue::clear_float_values() {
  if (float_values_ != NULL) float_values_->::pb::FloatList::Clear();
  clear_has_float_values();
}
inline const ::pb::FloatList& ObjectFullValue::float_values() const {
  return float_values_ != NULL ? *float_values_ : *default_instance_->float_values_;
}
inline ::pb::FloatList* ObjectFullValue::mutable_float_values() {
  set_has_float_values();
  if (float_values_ == NULL) float_values_ = new ::pb::FloatList;
  return float_values_;
}
inline ::pb::FloatList* ObjectFullValue::release_float_values() {
  clear_has_float_values();
  ::pb::FloatList* temp = float_values_;
  float_values_ = NULL;
  return temp;
}
inline void ObjectFullValue::set_allocated_float_values(::pb::FloatList* float_values) {
  delete float_values_;
  float_values_ = float_values;
  if (float_values) {
    set_has_float_values();
  } else {
    clear_has_float_values();
  }
}

// optional .pb.StringList string_values = 4;
inline bool ObjectFullValue::has_string_values() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ObjectFullValue::set_has_string_values() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ObjectFullValue::clear_has_string_values() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ObjectFullValue::clear_string_values() {
  if (string_values_ != NULL) string_values_->::pb::StringList::Clear();
  clear_has_string_values();
}
inline const ::pb::StringList& ObjectFullValue::string_values() const {
  return string_values_ != NULL ? *string_values_ : *default_instance_->string_values_;
}
inline ::pb::StringList* ObjectFullValue::mutable_string_values() {
  set_has_string_values();
  if (string_values_ == NULL) string_values_ = new ::pb::StringList;
  return string_values_;
}
inline ::pb::StringList* ObjectFullValue::release_string_values() {
  clear_has_string_values();
  ::pb::StringList* temp = string_values_;
  string_values_ = NULL;
  return temp;
}
inline void ObjectFullValue::set_allocated_string_values(::pb::StringList* string_values) {
  delete string_values_;
  string_values_ = string_values;
  if (string_values) {
    set_has_string_values();
  } else {
    clear_has_string_values();
  }
}

// -------------------------------------------------------------------

// Int32ListUpdate

// required uint32 bit_count = 1;
inline bool Int32ListUpdate::has_bit_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Int32ListUpdate::set_has_bit_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Int32ListUpdate::clear_has_bit_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Int32ListUpdate::clear_bit_count() {
  bit_count_ = 0u;
  clear_has_bit_count();
}
inline ::google::protobuf::uint32 Int32ListUpdate::bit_count() const {
  return bit_count_;
}
inline void Int32ListUpdate::set_bit_count(::google::protobuf::uint32 value) {
  set_has_bit_count();
  bit_count_ = value;
}

// repeated uint32 bit_masks = 2;
inline int Int32ListUpdate::bit_masks_size() const {
  return bit_masks_.size();
}
inline void Int32ListUpdate::clear_bit_masks() {
  bit_masks_.Clear();
}
inline ::google::protobuf::uint32 Int32ListUpdate::bit_masks(int index) const {
  return bit_masks_.Get(index);
}
inline void Int32ListUpdate::set_bit_masks(int index, ::google::protobuf::uint32 value) {
  bit_masks_.Set(index, value);
}
inline void Int32ListUpdate::add_bit_masks(::google::protobuf::uint32 value) {
  bit_masks_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Int32ListUpdate::bit_masks() const {
  return bit_masks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Int32ListUpdate::mutable_bit_masks() {
  return &bit_masks_;
}

// repeated int32 values = 3;
inline int Int32ListUpdate::values_size() const {
  return values_.size();
}
inline void Int32ListUpdate::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::int32 Int32ListUpdate::values(int index) const {
  return values_.Get(index);
}
inline void Int32ListUpdate::set_values(int index, ::google::protobuf::int32 value) {
  values_.Set(index, value);
}
inline void Int32ListUpdate::add_values(::google::protobuf::int32 value) {
  values_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Int32ListUpdate::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Int32ListUpdate::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// Uint64ListUpdate

// optional uint32 bit_count = 1;
inline bool Uint64ListUpdate::has_bit_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Uint64ListUpdate::set_has_bit_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Uint64ListUpdate::clear_has_bit_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Uint64ListUpdate::clear_bit_count() {
  bit_count_ = 0u;
  clear_has_bit_count();
}
inline ::google::protobuf::uint32 Uint64ListUpdate::bit_count() const {
  return bit_count_;
}
inline void Uint64ListUpdate::set_bit_count(::google::protobuf::uint32 value) {
  set_has_bit_count();
  bit_count_ = value;
}

// repeated uint32 bit_masks = 2;
inline int Uint64ListUpdate::bit_masks_size() const {
  return bit_masks_.size();
}
inline void Uint64ListUpdate::clear_bit_masks() {
  bit_masks_.Clear();
}
inline ::google::protobuf::uint32 Uint64ListUpdate::bit_masks(int index) const {
  return bit_masks_.Get(index);
}
inline void Uint64ListUpdate::set_bit_masks(int index, ::google::protobuf::uint32 value) {
  bit_masks_.Set(index, value);
}
inline void Uint64ListUpdate::add_bit_masks(::google::protobuf::uint32 value) {
  bit_masks_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Uint64ListUpdate::bit_masks() const {
  return bit_masks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Uint64ListUpdate::mutable_bit_masks() {
  return &bit_masks_;
}

// repeated uint64 values = 3;
inline int Uint64ListUpdate::values_size() const {
  return values_.size();
}
inline void Uint64ListUpdate::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::uint64 Uint64ListUpdate::values(int index) const {
  return values_.Get(index);
}
inline void Uint64ListUpdate::set_values(int index, ::google::protobuf::uint64 value) {
  values_.Set(index, value);
}
inline void Uint64ListUpdate::add_values(::google::protobuf::uint64 value) {
  values_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Uint64ListUpdate::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Uint64ListUpdate::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// FloatListUpdate

// optional uint32 bit_count = 1;
inline bool FloatListUpdate::has_bit_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FloatListUpdate::set_has_bit_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FloatListUpdate::clear_has_bit_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FloatListUpdate::clear_bit_count() {
  bit_count_ = 0u;
  clear_has_bit_count();
}
inline ::google::protobuf::uint32 FloatListUpdate::bit_count() const {
  return bit_count_;
}
inline void FloatListUpdate::set_bit_count(::google::protobuf::uint32 value) {
  set_has_bit_count();
  bit_count_ = value;
}

// repeated uint32 bit_masks = 2;
inline int FloatListUpdate::bit_masks_size() const {
  return bit_masks_.size();
}
inline void FloatListUpdate::clear_bit_masks() {
  bit_masks_.Clear();
}
inline ::google::protobuf::uint32 FloatListUpdate::bit_masks(int index) const {
  return bit_masks_.Get(index);
}
inline void FloatListUpdate::set_bit_masks(int index, ::google::protobuf::uint32 value) {
  bit_masks_.Set(index, value);
}
inline void FloatListUpdate::add_bit_masks(::google::protobuf::uint32 value) {
  bit_masks_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FloatListUpdate::bit_masks() const {
  return bit_masks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FloatListUpdate::mutable_bit_masks() {
  return &bit_masks_;
}

// repeated float values = 3;
inline int FloatListUpdate::values_size() const {
  return values_.size();
}
inline void FloatListUpdate::clear_values() {
  values_.Clear();
}
inline float FloatListUpdate::values(int index) const {
  return values_.Get(index);
}
inline void FloatListUpdate::set_values(int index, float value) {
  values_.Set(index, value);
}
inline void FloatListUpdate::add_values(float value) {
  values_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
FloatListUpdate::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedField< float >*
FloatListUpdate::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// StringListUpdate

// optional uint32 bit_count = 1;
inline bool StringListUpdate::has_bit_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StringListUpdate::set_has_bit_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StringListUpdate::clear_has_bit_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StringListUpdate::clear_bit_count() {
  bit_count_ = 0u;
  clear_has_bit_count();
}
inline ::google::protobuf::uint32 StringListUpdate::bit_count() const {
  return bit_count_;
}
inline void StringListUpdate::set_bit_count(::google::protobuf::uint32 value) {
  set_has_bit_count();
  bit_count_ = value;
}

// repeated uint32 bit_masks = 2;
inline int StringListUpdate::bit_masks_size() const {
  return bit_masks_.size();
}
inline void StringListUpdate::clear_bit_masks() {
  bit_masks_.Clear();
}
inline ::google::protobuf::uint32 StringListUpdate::bit_masks(int index) const {
  return bit_masks_.Get(index);
}
inline void StringListUpdate::set_bit_masks(int index, ::google::protobuf::uint32 value) {
  bit_masks_.Set(index, value);
}
inline void StringListUpdate::add_bit_masks(::google::protobuf::uint32 value) {
  bit_masks_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StringListUpdate::bit_masks() const {
  return bit_masks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StringListUpdate::mutable_bit_masks() {
  return &bit_masks_;
}

// repeated string values = 3;
inline int StringListUpdate::values_size() const {
  return values_.size();
}
inline void StringListUpdate::clear_values() {
  values_.Clear();
}
inline const ::std::string& StringListUpdate::values(int index) const {
  return values_.Get(index);
}
inline ::std::string* StringListUpdate::mutable_values(int index) {
  return values_.Mutable(index);
}
inline void StringListUpdate::set_values(int index, const ::std::string& value) {
  values_.Mutable(index)->assign(value);
}
inline void StringListUpdate::set_values(int index, const char* value) {
  values_.Mutable(index)->assign(value);
}
inline void StringListUpdate::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StringListUpdate::add_values() {
  return values_.Add();
}
inline void StringListUpdate::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
}
inline void StringListUpdate::add_values(const char* value) {
  values_.Add()->assign(value);
}
inline void StringListUpdate::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringListUpdate::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StringListUpdate::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// ObjectValueUpdate

// optional .pb.Int32ListUpdate update_int32 = 1;
inline bool ObjectValueUpdate::has_update_int32() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectValueUpdate::set_has_update_int32() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectValueUpdate::clear_has_update_int32() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectValueUpdate::clear_update_int32() {
  if (update_int32_ != NULL) update_int32_->::pb::Int32ListUpdate::Clear();
  clear_has_update_int32();
}
inline const ::pb::Int32ListUpdate& ObjectValueUpdate::update_int32() const {
  return update_int32_ != NULL ? *update_int32_ : *default_instance_->update_int32_;
}
inline ::pb::Int32ListUpdate* ObjectValueUpdate::mutable_update_int32() {
  set_has_update_int32();
  if (update_int32_ == NULL) update_int32_ = new ::pb::Int32ListUpdate;
  return update_int32_;
}
inline ::pb::Int32ListUpdate* ObjectValueUpdate::release_update_int32() {
  clear_has_update_int32();
  ::pb::Int32ListUpdate* temp = update_int32_;
  update_int32_ = NULL;
  return temp;
}
inline void ObjectValueUpdate::set_allocated_update_int32(::pb::Int32ListUpdate* update_int32) {
  delete update_int32_;
  update_int32_ = update_int32;
  if (update_int32) {
    set_has_update_int32();
  } else {
    clear_has_update_int32();
  }
}

// optional .pb.Uint64ListUpdate update_uint64 = 2;
inline bool ObjectValueUpdate::has_update_uint64() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectValueUpdate::set_has_update_uint64() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ObjectValueUpdate::clear_has_update_uint64() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ObjectValueUpdate::clear_update_uint64() {
  if (update_uint64_ != NULL) update_uint64_->::pb::Uint64ListUpdate::Clear();
  clear_has_update_uint64();
}
inline const ::pb::Uint64ListUpdate& ObjectValueUpdate::update_uint64() const {
  return update_uint64_ != NULL ? *update_uint64_ : *default_instance_->update_uint64_;
}
inline ::pb::Uint64ListUpdate* ObjectValueUpdate::mutable_update_uint64() {
  set_has_update_uint64();
  if (update_uint64_ == NULL) update_uint64_ = new ::pb::Uint64ListUpdate;
  return update_uint64_;
}
inline ::pb::Uint64ListUpdate* ObjectValueUpdate::release_update_uint64() {
  clear_has_update_uint64();
  ::pb::Uint64ListUpdate* temp = update_uint64_;
  update_uint64_ = NULL;
  return temp;
}
inline void ObjectValueUpdate::set_allocated_update_uint64(::pb::Uint64ListUpdate* update_uint64) {
  delete update_uint64_;
  update_uint64_ = update_uint64;
  if (update_uint64) {
    set_has_update_uint64();
  } else {
    clear_has_update_uint64();
  }
}

// optional .pb.FloatListUpdate update_float = 3;
inline bool ObjectValueUpdate::has_update_float() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ObjectValueUpdate::set_has_update_float() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ObjectValueUpdate::clear_has_update_float() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ObjectValueUpdate::clear_update_float() {
  if (update_float_ != NULL) update_float_->::pb::FloatListUpdate::Clear();
  clear_has_update_float();
}
inline const ::pb::FloatListUpdate& ObjectValueUpdate::update_float() const {
  return update_float_ != NULL ? *update_float_ : *default_instance_->update_float_;
}
inline ::pb::FloatListUpdate* ObjectValueUpdate::mutable_update_float() {
  set_has_update_float();
  if (update_float_ == NULL) update_float_ = new ::pb::FloatListUpdate;
  return update_float_;
}
inline ::pb::FloatListUpdate* ObjectValueUpdate::release_update_float() {
  clear_has_update_float();
  ::pb::FloatListUpdate* temp = update_float_;
  update_float_ = NULL;
  return temp;
}
inline void ObjectValueUpdate::set_allocated_update_float(::pb::FloatListUpdate* update_float) {
  delete update_float_;
  update_float_ = update_float;
  if (update_float) {
    set_has_update_float();
  } else {
    clear_has_update_float();
  }
}

// optional .pb.StringListUpdate update_string = 4;
inline bool ObjectValueUpdate::has_update_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ObjectValueUpdate::set_has_update_string() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ObjectValueUpdate::clear_has_update_string() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ObjectValueUpdate::clear_update_string() {
  if (update_string_ != NULL) update_string_->::pb::StringListUpdate::Clear();
  clear_has_update_string();
}
inline const ::pb::StringListUpdate& ObjectValueUpdate::update_string() const {
  return update_string_ != NULL ? *update_string_ : *default_instance_->update_string_;
}
inline ::pb::StringListUpdate* ObjectValueUpdate::mutable_update_string() {
  set_has_update_string();
  if (update_string_ == NULL) update_string_ = new ::pb::StringListUpdate;
  return update_string_;
}
inline ::pb::StringListUpdate* ObjectValueUpdate::release_update_string() {
  clear_has_update_string();
  ::pb::StringListUpdate* temp = update_string_;
  update_string_ = NULL;
  return temp;
}
inline void ObjectValueUpdate::set_allocated_update_string(::pb::StringListUpdate* update_string) {
  delete update_string_;
  update_string_ = update_string;
  if (update_string) {
    set_has_update_string();
  } else {
    clear_has_update_string();
  }
}

// -------------------------------------------------------------------

// GS2C_LootList

// repeated .pb.PairValue item_id_count = 1;
inline int GS2C_LootList::item_id_count_size() const {
  return item_id_count_.size();
}
inline void GS2C_LootList::clear_item_id_count() {
  item_id_count_.Clear();
}
inline const ::pb::PairValue& GS2C_LootList::item_id_count(int index) const {
  return item_id_count_.Get(index);
}
inline ::pb::PairValue* GS2C_LootList::mutable_item_id_count(int index) {
  return item_id_count_.Mutable(index);
}
inline ::pb::PairValue* GS2C_LootList::add_item_id_count() {
  return item_id_count_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::PairValue >&
GS2C_LootList::item_id_count() const {
  return item_id_count_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::PairValue >*
GS2C_LootList::mutable_item_id_count() {
  return &item_id_count_;
}

// repeated .pb.PairValue curency_type_count = 2;
inline int GS2C_LootList::curency_type_count_size() const {
  return curency_type_count_.size();
}
inline void GS2C_LootList::clear_curency_type_count() {
  curency_type_count_.Clear();
}
inline const ::pb::PairValue& GS2C_LootList::curency_type_count(int index) const {
  return curency_type_count_.Get(index);
}
inline ::pb::PairValue* GS2C_LootList::mutable_curency_type_count(int index) {
  return curency_type_count_.Mutable(index);
}
inline ::pb::PairValue* GS2C_LootList::add_curency_type_count() {
  return curency_type_count_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::PairValue >&
GS2C_LootList::curency_type_count() const {
  return curency_type_count_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::PairValue >*
GS2C_LootList::mutable_curency_type_count() {
  return &curency_type_count_;
}

// optional uint32 player_exp = 3;
inline bool GS2C_LootList::has_player_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_LootList::set_has_player_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_LootList::clear_has_player_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_LootList::clear_player_exp() {
  player_exp_ = 0u;
  clear_has_player_exp();
}
inline ::google::protobuf::uint32 GS2C_LootList::player_exp() const {
  return player_exp_;
}
inline void GS2C_LootList::set_player_exp(::google::protobuf::uint32 value) {
  set_has_player_exp();
  player_exp_ = value;
}

// optional uint32 char_exp = 4;
inline bool GS2C_LootList::has_char_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GS2C_LootList::set_has_char_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GS2C_LootList::clear_has_char_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GS2C_LootList::clear_char_exp() {
  char_exp_ = 0u;
  clear_has_char_exp();
}
inline ::google::protobuf::uint32 GS2C_LootList::char_exp() const {
  return char_exp_;
}
inline void GS2C_LootList::set_char_exp(::google::protobuf::uint32 value) {
  set_has_char_exp();
  char_exp_ = value;
}

// -------------------------------------------------------------------

// GS2C_ItemLootList

// repeated .pb.PairValue item_id_value = 1;
inline int GS2C_ItemLootList::item_id_value_size() const {
  return item_id_value_.size();
}
inline void GS2C_ItemLootList::clear_item_id_value() {
  item_id_value_.Clear();
}
inline const ::pb::PairValue& GS2C_ItemLootList::item_id_value(int index) const {
  return item_id_value_.Get(index);
}
inline ::pb::PairValue* GS2C_ItemLootList::mutable_item_id_value(int index) {
  return item_id_value_.Mutable(index);
}
inline ::pb::PairValue* GS2C_ItemLootList::add_item_id_value() {
  return item_id_value_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::PairValue >&
GS2C_ItemLootList::item_id_value() const {
  return item_id_value_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::PairValue >*
GS2C_ItemLootList::mutable_item_id_value() {
  return &item_id_value_;
}

// -------------------------------------------------------------------

// GS2C_PlayerString

// required uint32 str_type = 1;
inline bool GS2C_PlayerString::has_str_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_PlayerString::set_has_str_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_PlayerString::clear_has_str_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_PlayerString::clear_str_type() {
  str_type_ = 0u;
  clear_has_str_type();
}
inline ::google::protobuf::uint32 GS2C_PlayerString::str_type() const {
  return str_type_;
}
inline void GS2C_PlayerString::set_str_type(::google::protobuf::uint32 value) {
  set_has_str_type();
  str_type_ = value;
}

// required string str = 2;
inline bool GS2C_PlayerString::has_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_PlayerString::set_has_str() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_PlayerString::clear_has_str() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_PlayerString::clear_str() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& GS2C_PlayerString::str() const {
  return *str_;
}
inline void GS2C_PlayerString::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void GS2C_PlayerString::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void GS2C_PlayerString::set_str(const char* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GS2C_PlayerString::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  return str_;
}
inline ::std::string* GS2C_PlayerString::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GS2C_PlayerString::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GS2C_PlayerStringGroup

// repeated .pb.GS2C_PlayerString player_strings = 1;
inline int GS2C_PlayerStringGroup::player_strings_size() const {
  return player_strings_.size();
}
inline void GS2C_PlayerStringGroup::clear_player_strings() {
  player_strings_.Clear();
}
inline const ::pb::GS2C_PlayerString& GS2C_PlayerStringGroup::player_strings(int index) const {
  return player_strings_.Get(index);
}
inline ::pb::GS2C_PlayerString* GS2C_PlayerStringGroup::mutable_player_strings(int index) {
  return player_strings_.Mutable(index);
}
inline ::pb::GS2C_PlayerString* GS2C_PlayerStringGroup::add_player_strings() {
  return player_strings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::GS2C_PlayerString >&
GS2C_PlayerStringGroup::player_strings() const {
  return player_strings_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::GS2C_PlayerString >*
GS2C_PlayerStringGroup::mutable_player_strings() {
  return &player_strings_;
}

// -------------------------------------------------------------------

// StReward

// required uint32 type = 1;
inline bool StReward::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StReward::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StReward::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StReward::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 StReward::type() const {
  return type_;
}
inline void StReward::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 value = 2;
inline bool StReward::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StReward::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StReward::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StReward::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 StReward::value() const {
  return value_;
}
inline void StReward::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// StRewards

// repeated .pb.StReward rewards = 1;
inline int StRewards::rewards_size() const {
  return rewards_.size();
}
inline void StRewards::clear_rewards() {
  rewards_.Clear();
}
inline const ::pb::StReward& StRewards::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::pb::StReward* StRewards::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::pb::StReward* StRewards::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
StRewards::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
StRewards::mutable_rewards() {
  return &rewards_;
}

// -------------------------------------------------------------------

// PlayLvUpReward

// repeated .pb.StReward rewards = 1;
inline int PlayLvUpReward::rewards_size() const {
  return rewards_.size();
}
inline void PlayLvUpReward::clear_rewards() {
  rewards_.Clear();
}
inline const ::pb::StReward& PlayLvUpReward::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::pb::StReward* PlayLvUpReward::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::pb::StReward* PlayLvUpReward::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
PlayLvUpReward::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
PlayLvUpReward::mutable_rewards() {
  return &rewards_;
}

// required uint32 playerLv = 2;
inline bool PlayLvUpReward::has_playerlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayLvUpReward::set_has_playerlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayLvUpReward::clear_has_playerlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayLvUpReward::clear_playerlv() {
  playerlv_ = 0u;
  clear_has_playerlv();
}
inline ::google::protobuf::uint32 PlayLvUpReward::playerlv() const {
  return playerlv_;
}
inline void PlayLvUpReward::set_playerlv(::google::protobuf::uint32 value) {
  set_has_playerlv();
  playerlv_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::Data_Operate>() {
  return ::pb::Data_Operate_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CommomDef_2eproto__INCLUDED
