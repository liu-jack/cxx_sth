// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: World.proto

#ifndef PROTOBUF_World_2eproto__INCLUDED
#define PROTOBUF_World_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommomDef.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_World_2eproto();
void protobuf_AssignDesc_World_2eproto();
void protobuf_ShutdownFile_World_2eproto();

class C2GS_Enter_Map;
class C2GS_Leave_Map;
class C2GS_Auto_Attack;
class C2GS_Hero_Move;
class GS2C_Hero_Move;
class C2GS_HERO_STOP_MOVE;
class GS2C_Hero_Pos;
class GS2C_NPC_Pos;
class GS2C_NPC_POS_LIST;
class GS2C_Delete_Npc_World;
class GS2C_Expedition_Army_Info;
class C2GS_Donate_City;
class C2GS_Train_Soldier;
class C2GS_StartTunTian;
class GS2C_StartTunTian;
class GS2C_TunTianReward;
class GS2C_TunTian_Donate_Ret;
class C2GS_Clear_Fresh_TunTian;
class GS2C_Clear_Tuntian_CD_Ret;
class hero_exp_get;
class GS2C_Train_Info;
class Wild_Data;
class GS2C_Wild_Data_Lst;
class C2GS_Bribe_City;
class C2GS_Incite_City;
class Struct_Army_Info;
class GS2C_City_Fight_Info;
class C2GS_Request_Fight_Lst;
class World_Achievement_Info;
class GS2C_World_Achievement_All_Info;
class C2GS_Take_World_Achievement_Reward;
class GS2C_Take_World_Achievement_Reward_Rsp;
class GxDB_World_Achievement_Info;
class GxDB_World_Achievement;

// ===================================================================

class C2GS_Enter_Map : public ::google::protobuf::Message {
 public:
  C2GS_Enter_Map();
  virtual ~C2GS_Enter_Map();

  C2GS_Enter_Map(const C2GS_Enter_Map& from);

  inline C2GS_Enter_Map& operator=(const C2GS_Enter_Map& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Enter_Map& default_instance();

  void Swap(C2GS_Enter_Map* other);

  // implements Message ----------------------------------------------

  C2GS_Enter_Map* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Enter_Map& from);
  void MergeFrom(const C2GS_Enter_Map& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 map_tid = 1;
  inline bool has_map_tid() const;
  inline void clear_map_tid();
  static const int kMapTidFieldNumber = 1;
  inline ::google::protobuf::uint32 map_tid() const;
  inline void set_map_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Enter_Map)
 private:
  inline void set_has_map_tid();
  inline void clear_has_map_tid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 map_tid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Enter_Map* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Leave_Map : public ::google::protobuf::Message {
 public:
  C2GS_Leave_Map();
  virtual ~C2GS_Leave_Map();

  C2GS_Leave_Map(const C2GS_Leave_Map& from);

  inline C2GS_Leave_Map& operator=(const C2GS_Leave_Map& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Leave_Map& default_instance();

  void Swap(C2GS_Leave_Map* other);

  // implements Message ----------------------------------------------

  C2GS_Leave_Map* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Leave_Map& from);
  void MergeFrom(const C2GS_Leave_Map& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 map_tid = 1;
  inline bool has_map_tid() const;
  inline void clear_map_tid();
  static const int kMapTidFieldNumber = 1;
  inline ::google::protobuf::uint32 map_tid() const;
  inline void set_map_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Leave_Map)
 private:
  inline void set_has_map_tid();
  inline void clear_has_map_tid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 map_tid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Leave_Map* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Auto_Attack : public ::google::protobuf::Message {
 public:
  C2GS_Auto_Attack();
  virtual ~C2GS_Auto_Attack();

  C2GS_Auto_Attack(const C2GS_Auto_Attack& from);

  inline C2GS_Auto_Attack& operator=(const C2GS_Auto_Attack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Auto_Attack& default_instance();

  void Swap(C2GS_Auto_Attack* other);

  // implements Message ----------------------------------------------

  C2GS_Auto_Attack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Auto_Attack& from);
  void MergeFrom(const C2GS_Auto_Attack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 hero_ids = 1;
  inline int hero_ids_size() const;
  inline void clear_hero_ids();
  static const int kHeroIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_ids(int index) const;
  inline void set_hero_ids(int index, ::google::protobuf::uint32 value);
  inline void add_hero_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_ids();

  // required uint32 city_id = 2;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 2;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Auto_Attack)
 private:
  inline void set_has_city_id();
  inline void clear_has_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_ids_;
  ::google::protobuf::uint32 city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Auto_Attack* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Hero_Move : public ::google::protobuf::Message {
 public:
  C2GS_Hero_Move();
  virtual ~C2GS_Hero_Move();

  C2GS_Hero_Move(const C2GS_Hero_Move& from);

  inline C2GS_Hero_Move& operator=(const C2GS_Hero_Move& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Hero_Move& default_instance();

  void Swap(C2GS_Hero_Move* other);

  // implements Message ----------------------------------------------

  C2GS_Hero_Move* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Hero_Move& from);
  void MergeFrom(const C2GS_Hero_Move& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // required uint32 city_id = 2;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 2;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Hero_Move)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_city_id();
  inline void clear_has_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 char_id_;
  ::google::protobuf::uint32 city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Hero_Move* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Hero_Move : public ::google::protobuf::Message {
 public:
  GS2C_Hero_Move();
  virtual ~GS2C_Hero_Move();

  GS2C_Hero_Move(const GS2C_Hero_Move& from);

  inline GS2C_Hero_Move& operator=(const GS2C_Hero_Move& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Hero_Move& default_instance();

  void Swap(GS2C_Hero_Move* other);

  // implements Message ----------------------------------------------

  GS2C_Hero_Move* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Hero_Move& from);
  void MergeFrom(const GS2C_Hero_Move& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // repeated uint32 city_id = 2;
  inline int city_id_size() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 2;
  inline ::google::protobuf::uint32 city_id(int index) const;
  inline void set_city_id(int index, ::google::protobuf::uint32 value);
  inline void add_city_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      city_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_city_id();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Hero_Move)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > city_id_;
  ::google::protobuf::uint32 char_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Hero_Move* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_HERO_STOP_MOVE : public ::google::protobuf::Message {
 public:
  C2GS_HERO_STOP_MOVE();
  virtual ~C2GS_HERO_STOP_MOVE();

  C2GS_HERO_STOP_MOVE(const C2GS_HERO_STOP_MOVE& from);

  inline C2GS_HERO_STOP_MOVE& operator=(const C2GS_HERO_STOP_MOVE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_HERO_STOP_MOVE& default_instance();

  void Swap(C2GS_HERO_STOP_MOVE* other);

  // implements Message ----------------------------------------------

  C2GS_HERO_STOP_MOVE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_HERO_STOP_MOVE& from);
  void MergeFrom(const C2GS_HERO_STOP_MOVE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_HERO_STOP_MOVE)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 char_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static C2GS_HERO_STOP_MOVE* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Hero_Pos : public ::google::protobuf::Message {
 public:
  GS2C_Hero_Pos();
  virtual ~GS2C_Hero_Pos();

  GS2C_Hero_Pos(const GS2C_Hero_Pos& from);

  inline GS2C_Hero_Pos& operator=(const GS2C_Hero_Pos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Hero_Pos& default_instance();

  void Swap(GS2C_Hero_Pos* other);

  // implements Message ----------------------------------------------

  GS2C_Hero_Pos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Hero_Pos& from);
  void MergeFrom(const GS2C_Hero_Pos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // required uint32 city_id = 2;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 2;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // optional bool is_jump = 3;
  inline bool has_is_jump() const;
  inline void clear_is_jump();
  static const int kIsJumpFieldNumber = 3;
  inline bool is_jump() const;
  inline void set_is_jump(bool value);

  // optional bool is_move_shutdown = 4;
  inline bool has_is_move_shutdown() const;
  inline void clear_is_move_shutdown();
  static const int kIsMoveShutdownFieldNumber = 4;
  inline bool is_move_shutdown() const;
  inline void set_is_move_shutdown(bool value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Hero_Pos)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_city_id();
  inline void clear_has_city_id();
  inline void set_has_is_jump();
  inline void clear_has_is_jump();
  inline void set_has_is_move_shutdown();
  inline void clear_has_is_move_shutdown();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 char_id_;
  ::google::protobuf::uint32 city_id_;
  bool is_jump_;
  bool is_move_shutdown_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Hero_Pos* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_NPC_Pos : public ::google::protobuf::Message {
 public:
  GS2C_NPC_Pos();
  virtual ~GS2C_NPC_Pos();

  GS2C_NPC_Pos(const GS2C_NPC_Pos& from);

  inline GS2C_NPC_Pos& operator=(const GS2C_NPC_Pos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_NPC_Pos& default_instance();

  void Swap(GS2C_NPC_Pos* other);

  // implements Message ----------------------------------------------

  GS2C_NPC_Pos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_NPC_Pos& from);
  void MergeFrom(const GS2C_NPC_Pos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // required uint32 city_id = 2;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 2;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // optional uint32 unique_id = 3;
  inline bool has_unique_id() const;
  inline void clear_unique_id();
  static const int kUniqueIdFieldNumber = 3;
  inline ::google::protobuf::uint32 unique_id() const;
  inline void set_unique_id(::google::protobuf::uint32 value);

  // optional uint32 belongCountry = 4;
  inline bool has_belongcountry() const;
  inline void clear_belongcountry();
  static const int kBelongCountryFieldNumber = 4;
  inline ::google::protobuf::uint32 belongcountry() const;
  inline void set_belongcountry(::google::protobuf::uint32 value);

  // optional uint32 org_city_id = 5;
  inline bool has_org_city_id() const;
  inline void clear_org_city_id();
  static const int kOrgCityIdFieldNumber = 5;
  inline ::google::protobuf::uint32 org_city_id() const;
  inline void set_org_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_NPC_Pos)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_city_id();
  inline void clear_has_city_id();
  inline void set_has_unique_id();
  inline void clear_has_unique_id();
  inline void set_has_belongcountry();
  inline void clear_has_belongcountry();
  inline void set_has_org_city_id();
  inline void clear_has_org_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 city_id_;
  ::google::protobuf::uint32 unique_id_;
  ::google::protobuf::uint32 belongcountry_;
  ::google::protobuf::uint32 org_city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_NPC_Pos* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_NPC_POS_LIST : public ::google::protobuf::Message {
 public:
  GS2C_NPC_POS_LIST();
  virtual ~GS2C_NPC_POS_LIST();

  GS2C_NPC_POS_LIST(const GS2C_NPC_POS_LIST& from);

  inline GS2C_NPC_POS_LIST& operator=(const GS2C_NPC_POS_LIST& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_NPC_POS_LIST& default_instance();

  void Swap(GS2C_NPC_POS_LIST* other);

  // implements Message ----------------------------------------------

  GS2C_NPC_POS_LIST* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_NPC_POS_LIST& from);
  void MergeFrom(const GS2C_NPC_POS_LIST& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.GS2C_NPC_Pos pos = 1;
  inline int pos_size() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline const ::pb::GS2C_NPC_Pos& pos(int index) const;
  inline ::pb::GS2C_NPC_Pos* mutable_pos(int index);
  inline ::pb::GS2C_NPC_Pos* add_pos();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::GS2C_NPC_Pos >&
      pos() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::GS2C_NPC_Pos >*
      mutable_pos();

  // @@protoc_insertion_point(class_scope:pb.GS2C_NPC_POS_LIST)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::GS2C_NPC_Pos > pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_NPC_POS_LIST* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Delete_Npc_World : public ::google::protobuf::Message {
 public:
  GS2C_Delete_Npc_World();
  virtual ~GS2C_Delete_Npc_World();

  GS2C_Delete_Npc_World(const GS2C_Delete_Npc_World& from);

  inline GS2C_Delete_Npc_World& operator=(const GS2C_Delete_Npc_World& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Delete_Npc_World& default_instance();

  void Swap(GS2C_Delete_Npc_World* other);

  // implements Message ----------------------------------------------

  GS2C_Delete_Npc_World* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Delete_Npc_World& from);
  void MergeFrom(const GS2C_Delete_Npc_World& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 expeid = 1;
  inline bool has_expeid() const;
  inline void clear_expeid();
  static const int kExpeidFieldNumber = 1;
  inline ::google::protobuf::uint32 expeid() const;
  inline void set_expeid(::google::protobuf::uint32 value);

  // optional uint32 city_id = 2;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 2;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Delete_Npc_World)
 private:
  inline void set_has_expeid();
  inline void clear_has_expeid();
  inline void set_has_city_id();
  inline void clear_has_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 expeid_;
  ::google::protobuf::uint32 city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Delete_Npc_World* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Expedition_Army_Info : public ::google::protobuf::Message {
 public:
  GS2C_Expedition_Army_Info();
  virtual ~GS2C_Expedition_Army_Info();

  GS2C_Expedition_Army_Info(const GS2C_Expedition_Army_Info& from);

  inline GS2C_Expedition_Army_Info& operator=(const GS2C_Expedition_Army_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Expedition_Army_Info& default_instance();

  void Swap(GS2C_Expedition_Army_Info* other);

  // implements Message ----------------------------------------------

  GS2C_Expedition_Army_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Expedition_Army_Info& from);
  void MergeFrom(const GS2C_Expedition_Army_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 expedition_id = 1;
  inline bool has_expedition_id() const;
  inline void clear_expedition_id();
  static const int kExpeditionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 expedition_id() const;
  inline void set_expedition_id(::google::protobuf::uint32 value);

  // required uint32 city_id = 2;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 2;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // required uint32 hero_id = 3;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 org_city_id = 4;
  inline bool has_org_city_id() const;
  inline void clear_org_city_id();
  static const int kOrgCityIdFieldNumber = 4;
  inline ::google::protobuf::uint32 org_city_id() const;
  inline void set_org_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Expedition_Army_Info)
 private:
  inline void set_has_expedition_id();
  inline void clear_has_expedition_id();
  inline void set_has_city_id();
  inline void clear_has_city_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_org_city_id();
  inline void clear_has_org_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 expedition_id_;
  ::google::protobuf::uint32 city_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 org_city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Expedition_Army_Info* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Donate_City : public ::google::protobuf::Message {
 public:
  C2GS_Donate_City();
  virtual ~C2GS_Donate_City();

  C2GS_Donate_City(const C2GS_Donate_City& from);

  inline C2GS_Donate_City& operator=(const C2GS_Donate_City& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Donate_City& default_instance();

  void Swap(C2GS_Donate_City* other);

  // implements Message ----------------------------------------------

  C2GS_Donate_City* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Donate_City& from);
  void MergeFrom(const C2GS_Donate_City& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 city_id = 1;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Donate_City)
 private:
  inline void set_has_city_id();
  inline void clear_has_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Donate_City* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Train_Soldier : public ::google::protobuf::Message {
 public:
  C2GS_Train_Soldier();
  virtual ~C2GS_Train_Soldier();

  C2GS_Train_Soldier(const C2GS_Train_Soldier& from);

  inline C2GS_Train_Soldier& operator=(const C2GS_Train_Soldier& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Train_Soldier& default_instance();

  void Swap(C2GS_Train_Soldier* other);

  // implements Message ----------------------------------------------

  C2GS_Train_Soldier* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Train_Soldier& from);
  void MergeFrom(const C2GS_Train_Soldier& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 train_index = 1;
  inline bool has_train_index() const;
  inline void clear_train_index();
  static const int kTrainIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 train_index() const;
  inline void set_train_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Train_Soldier)
 private:
  inline void set_has_train_index();
  inline void clear_has_train_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 train_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Train_Soldier* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_StartTunTian : public ::google::protobuf::Message {
 public:
  C2GS_StartTunTian();
  virtual ~C2GS_StartTunTian();

  C2GS_StartTunTian(const C2GS_StartTunTian& from);

  inline C2GS_StartTunTian& operator=(const C2GS_StartTunTian& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_StartTunTian& default_instance();

  void Swap(C2GS_StartTunTian* other);

  // implements Message ----------------------------------------------

  C2GS_StartTunTian* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_StartTunTian& from);
  void MergeFrom(const C2GS_StartTunTian& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // required uint32 cityid = 2;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityidFieldNumber = 2;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_StartTunTian)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_cityid();
  inline void clear_has_cityid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 cityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static C2GS_StartTunTian* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_StartTunTian : public ::google::protobuf::Message {
 public:
  GS2C_StartTunTian();
  virtual ~GS2C_StartTunTian();

  GS2C_StartTunTian(const GS2C_StartTunTian& from);

  inline GS2C_StartTunTian& operator=(const GS2C_StartTunTian& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_StartTunTian& default_instance();

  void Swap(GS2C_StartTunTian* other);

  // implements Message ----------------------------------------------

  GS2C_StartTunTian* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_StartTunTian& from);
  void MergeFrom(const GS2C_StartTunTian& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool isTuntianSuc = 1;
  inline bool has_istuntiansuc() const;
  inline void clear_istuntiansuc();
  static const int kIsTuntianSucFieldNumber = 1;
  inline bool istuntiansuc() const;
  inline void set_istuntiansuc(bool value);

  // optional uint64 startTime = 2;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint32 heroid = 3;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 3;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_StartTunTian)
 private:
  inline void set_has_istuntiansuc();
  inline void clear_has_istuntiansuc();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_heroid();
  inline void clear_has_heroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 starttime_;
  bool istuntiansuc_;
  ::google::protobuf::uint32 heroid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_StartTunTian* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_TunTianReward : public ::google::protobuf::Message {
 public:
  GS2C_TunTianReward();
  virtual ~GS2C_TunTianReward();

  GS2C_TunTianReward(const GS2C_TunTianReward& from);

  inline GS2C_TunTianReward& operator=(const GS2C_TunTianReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_TunTianReward& default_instance();

  void Swap(GS2C_TunTianReward* other);

  // implements Message ----------------------------------------------

  GS2C_TunTianReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_TunTianReward& from);
  void MergeFrom(const GS2C_TunTianReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 food_count = 1;
  inline bool has_food_count() const;
  inline void clear_food_count();
  static const int kFoodCountFieldNumber = 1;
  inline ::google::protobuf::uint32 food_count() const;
  inline void set_food_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_TunTianReward)
 private:
  inline void set_has_food_count();
  inline void clear_has_food_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 food_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_TunTianReward* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_TunTian_Donate_Ret : public ::google::protobuf::Message {
 public:
  GS2C_TunTian_Donate_Ret();
  virtual ~GS2C_TunTian_Donate_Ret();

  GS2C_TunTian_Donate_Ret(const GS2C_TunTian_Donate_Ret& from);

  inline GS2C_TunTian_Donate_Ret& operator=(const GS2C_TunTian_Donate_Ret& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_TunTian_Donate_Ret& default_instance();

  void Swap(GS2C_TunTian_Donate_Ret* other);

  // implements Message ----------------------------------------------

  GS2C_TunTian_Donate_Ret* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_TunTian_Donate_Ret& from);
  void MergeFrom(const GS2C_TunTian_Donate_Ret& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 donateret = 1;
  inline bool has_donateret() const;
  inline void clear_donateret();
  static const int kDonateretFieldNumber = 1;
  inline ::google::protobuf::uint32 donateret() const;
  inline void set_donateret(::google::protobuf::uint32 value);

  // optional uint64 cdEndTime = 2;
  inline bool has_cdendtime() const;
  inline void clear_cdendtime();
  static const int kCdEndTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 cdendtime() const;
  inline void set_cdendtime(::google::protobuf::uint64 value);

  // optional uint32 tuntianlevel = 3;
  inline bool has_tuntianlevel() const;
  inline void clear_tuntianlevel();
  static const int kTuntianlevelFieldNumber = 3;
  inline ::google::protobuf::uint32 tuntianlevel() const;
  inline void set_tuntianlevel(::google::protobuf::uint32 value);

  // optional uint64 tuntianexp = 4;
  inline bool has_tuntianexp() const;
  inline void clear_tuntianexp();
  static const int kTuntianexpFieldNumber = 4;
  inline ::google::protobuf::uint64 tuntianexp() const;
  inline void set_tuntianexp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_TunTian_Donate_Ret)
 private:
  inline void set_has_donateret();
  inline void clear_has_donateret();
  inline void set_has_cdendtime();
  inline void clear_has_cdendtime();
  inline void set_has_tuntianlevel();
  inline void clear_has_tuntianlevel();
  inline void set_has_tuntianexp();
  inline void clear_has_tuntianexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cdendtime_;
  ::google::protobuf::uint32 donateret_;
  ::google::protobuf::uint32 tuntianlevel_;
  ::google::protobuf::uint64 tuntianexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_TunTian_Donate_Ret* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Clear_Fresh_TunTian : public ::google::protobuf::Message {
 public:
  C2GS_Clear_Fresh_TunTian();
  virtual ~C2GS_Clear_Fresh_TunTian();

  C2GS_Clear_Fresh_TunTian(const C2GS_Clear_Fresh_TunTian& from);

  inline C2GS_Clear_Fresh_TunTian& operator=(const C2GS_Clear_Fresh_TunTian& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Clear_Fresh_TunTian& default_instance();

  void Swap(C2GS_Clear_Fresh_TunTian* other);

  // implements Message ----------------------------------------------

  C2GS_Clear_Fresh_TunTian* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Clear_Fresh_TunTian& from);
  void MergeFrom(const C2GS_Clear_Fresh_TunTian& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isClear = 1;
  inline bool has_isclear() const;
  inline void clear_isclear();
  static const int kIsClearFieldNumber = 1;
  inline bool isclear() const;
  inline void set_isclear(bool value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Clear_Fresh_TunTian)
 private:
  inline void set_has_isclear();
  inline void clear_has_isclear();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool isclear_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Clear_Fresh_TunTian* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Clear_Tuntian_CD_Ret : public ::google::protobuf::Message {
 public:
  GS2C_Clear_Tuntian_CD_Ret();
  virtual ~GS2C_Clear_Tuntian_CD_Ret();

  GS2C_Clear_Tuntian_CD_Ret(const GS2C_Clear_Tuntian_CD_Ret& from);

  inline GS2C_Clear_Tuntian_CD_Ret& operator=(const GS2C_Clear_Tuntian_CD_Ret& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Clear_Tuntian_CD_Ret& default_instance();

  void Swap(GS2C_Clear_Tuntian_CD_Ret* other);

  // implements Message ----------------------------------------------

  GS2C_Clear_Tuntian_CD_Ret* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Clear_Tuntian_CD_Ret& from);
  void MergeFrom(const GS2C_Clear_Tuntian_CD_Ret& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isClearSucc = 1;
  inline bool has_isclearsucc() const;
  inline void clear_isclearsucc();
  static const int kIsClearSuccFieldNumber = 1;
  inline bool isclearsucc() const;
  inline void set_isclearsucc(bool value);

  // optional uint64 cdEndTime = 2;
  inline bool has_cdendtime() const;
  inline void clear_cdendtime();
  static const int kCdEndTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 cdendtime() const;
  inline void set_cdendtime(::google::protobuf::uint64 value);

  // optional uint32 tuntianlevel = 3;
  inline bool has_tuntianlevel() const;
  inline void clear_tuntianlevel();
  static const int kTuntianlevelFieldNumber = 3;
  inline ::google::protobuf::uint32 tuntianlevel() const;
  inline void set_tuntianlevel(::google::protobuf::uint32 value);

  // optional uint64 tuntianexp = 4;
  inline bool has_tuntianexp() const;
  inline void clear_tuntianexp();
  static const int kTuntianexpFieldNumber = 4;
  inline ::google::protobuf::uint64 tuntianexp() const;
  inline void set_tuntianexp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Clear_Tuntian_CD_Ret)
 private:
  inline void set_has_isclearsucc();
  inline void clear_has_isclearsucc();
  inline void set_has_cdendtime();
  inline void clear_has_cdendtime();
  inline void set_has_tuntianlevel();
  inline void clear_has_tuntianlevel();
  inline void set_has_tuntianexp();
  inline void clear_has_tuntianexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 cdendtime_;
  bool isclearsucc_;
  ::google::protobuf::uint32 tuntianlevel_;
  ::google::protobuf::uint64 tuntianexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Clear_Tuntian_CD_Ret* default_instance_;
};
// -------------------------------------------------------------------

class hero_exp_get : public ::google::protobuf::Message {
 public:
  hero_exp_get();
  virtual ~hero_exp_get();

  hero_exp_get(const hero_exp_get& from);

  inline hero_exp_get& operator=(const hero_exp_get& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hero_exp_get& default_instance();

  void Swap(hero_exp_get* other);

  // implements Message ----------------------------------------------

  hero_exp_get* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hero_exp_get& from);
  void MergeFrom(const hero_exp_get& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chatid = 1;
  inline bool has_chatid() const;
  inline void clear_chatid();
  static const int kChatidFieldNumber = 1;
  inline ::google::protobuf::uint32 chatid() const;
  inline void set_chatid(::google::protobuf::uint32 value);

  // optional uint32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.hero_exp_get)
 private:
  inline void set_has_chatid();
  inline void clear_has_chatid();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 chatid_;
  ::google::protobuf::uint32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static hero_exp_get* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Train_Info : public ::google::protobuf::Message {
 public:
  GS2C_Train_Info();
  virtual ~GS2C_Train_Info();

  GS2C_Train_Info(const GS2C_Train_Info& from);

  inline GS2C_Train_Info& operator=(const GS2C_Train_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Train_Info& default_instance();

  void Swap(GS2C_Train_Info* other);

  // implements Message ----------------------------------------------

  GS2C_Train_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Train_Info& from);
  void MergeFrom(const GS2C_Train_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isTraining = 1;
  inline bool has_istraining() const;
  inline void clear_istraining();
  static const int kIsTrainingFieldNumber = 1;
  inline bool istraining() const;
  inline void set_istraining(bool value);

  // repeated uint32 herosid = 2;
  inline int herosid_size() const;
  inline void clear_herosid();
  static const int kHerosidFieldNumber = 2;
  inline ::google::protobuf::uint32 herosid(int index) const;
  inline void set_herosid(int index, ::google::protobuf::uint32 value);
  inline void add_herosid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      herosid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_herosid();

  // optional uint64 trainEndTime = 3;
  inline bool has_trainendtime() const;
  inline void clear_trainendtime();
  static const int kTrainEndTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 trainendtime() const;
  inline void set_trainendtime(::google::protobuf::uint64 value);

  // optional uint32 trainType = 4;
  inline bool has_traintype() const;
  inline void clear_traintype();
  static const int kTrainTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 traintype() const;
  inline void set_traintype(::google::protobuf::uint32 value);

  // repeated .pb.hero_exp_get expGet = 5;
  inline int expget_size() const;
  inline void clear_expget();
  static const int kExpGetFieldNumber = 5;
  inline const ::pb::hero_exp_get& expget(int index) const;
  inline ::pb::hero_exp_get* mutable_expget(int index);
  inline ::pb::hero_exp_get* add_expget();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::hero_exp_get >&
      expget() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::hero_exp_get >*
      mutable_expget();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Train_Info)
 private:
  inline void set_has_istraining();
  inline void clear_has_istraining();
  inline void set_has_trainendtime();
  inline void clear_has_trainendtime();
  inline void set_has_traintype();
  inline void clear_has_traintype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > herosid_;
  bool istraining_;
  ::google::protobuf::uint32 traintype_;
  ::google::protobuf::uint64 trainendtime_;
  ::google::protobuf::RepeatedPtrField< ::pb::hero_exp_get > expget_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Train_Info* default_instance_;
};
// -------------------------------------------------------------------

class Wild_Data : public ::google::protobuf::Message {
 public:
  Wild_Data();
  virtual ~Wild_Data();

  Wild_Data(const Wild_Data& from);

  inline Wild_Data& operator=(const Wild_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Wild_Data& default_instance();

  void Swap(Wild_Data* other);

  // implements Message ----------------------------------------------

  Wild_Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Wild_Data& from);
  void MergeFrom(const Wild_Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 friendliness = 1;
  inline bool has_friendliness() const;
  inline void clear_friendliness();
  static const int kFriendlinessFieldNumber = 1;
  inline ::google::protobuf::uint32 friendliness() const;
  inline void set_friendliness(::google::protobuf::uint32 value);

  // optional uint32 inciteAmount = 2;
  inline bool has_inciteamount() const;
  inline void clear_inciteamount();
  static const int kInciteAmountFieldNumber = 2;
  inline ::google::protobuf::uint32 inciteamount() const;
  inline void set_inciteamount(::google::protobuf::uint32 value);

  // optional uint32 city_id = 3;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 3;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // optional uint32 curBribeMoney = 4;
  inline bool has_curbribemoney() const;
  inline void clear_curbribemoney();
  static const int kCurBribeMoneyFieldNumber = 4;
  inline ::google::protobuf::uint32 curbribemoney() const;
  inline void set_curbribemoney(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.Wild_Data)
 private:
  inline void set_has_friendliness();
  inline void clear_has_friendliness();
  inline void set_has_inciteamount();
  inline void clear_has_inciteamount();
  inline void set_has_city_id();
  inline void clear_has_city_id();
  inline void set_has_curbribemoney();
  inline void clear_has_curbribemoney();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 friendliness_;
  ::google::protobuf::uint32 inciteamount_;
  ::google::protobuf::uint32 city_id_;
  ::google::protobuf::uint32 curbribemoney_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static Wild_Data* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Wild_Data_Lst : public ::google::protobuf::Message {
 public:
  GS2C_Wild_Data_Lst();
  virtual ~GS2C_Wild_Data_Lst();

  GS2C_Wild_Data_Lst(const GS2C_Wild_Data_Lst& from);

  inline GS2C_Wild_Data_Lst& operator=(const GS2C_Wild_Data_Lst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Wild_Data_Lst& default_instance();

  void Swap(GS2C_Wild_Data_Lst* other);

  // implements Message ----------------------------------------------

  GS2C_Wild_Data_Lst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Wild_Data_Lst& from);
  void MergeFrom(const GS2C_Wild_Data_Lst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.Wild_Data wild_lst = 1;
  inline int wild_lst_size() const;
  inline void clear_wild_lst();
  static const int kWildLstFieldNumber = 1;
  inline const ::pb::Wild_Data& wild_lst(int index) const;
  inline ::pb::Wild_Data* mutable_wild_lst(int index);
  inline ::pb::Wild_Data* add_wild_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Wild_Data >&
      wild_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Wild_Data >*
      mutable_wild_lst();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Wild_Data_Lst)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::Wild_Data > wild_lst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Wild_Data_Lst* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Bribe_City : public ::google::protobuf::Message {
 public:
  C2GS_Bribe_City();
  virtual ~C2GS_Bribe_City();

  C2GS_Bribe_City(const C2GS_Bribe_City& from);

  inline C2GS_Bribe_City& operator=(const C2GS_Bribe_City& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Bribe_City& default_instance();

  void Swap(C2GS_Bribe_City* other);

  // implements Message ----------------------------------------------

  C2GS_Bribe_City* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Bribe_City& from);
  void MergeFrom(const C2GS_Bribe_City& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 city_id = 1;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Bribe_City)
 private:
  inline void set_has_city_id();
  inline void clear_has_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Bribe_City* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Incite_City : public ::google::protobuf::Message {
 public:
  C2GS_Incite_City();
  virtual ~C2GS_Incite_City();

  C2GS_Incite_City(const C2GS_Incite_City& from);

  inline C2GS_Incite_City& operator=(const C2GS_Incite_City& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Incite_City& default_instance();

  void Swap(C2GS_Incite_City* other);

  // implements Message ----------------------------------------------

  C2GS_Incite_City* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Incite_City& from);
  void MergeFrom(const C2GS_Incite_City& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 city_id = 1;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Incite_City)
 private:
  inline void set_has_city_id();
  inline void clear_has_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Incite_City* default_instance_;
};
// -------------------------------------------------------------------

class Struct_Army_Info : public ::google::protobuf::Message {
 public:
  Struct_Army_Info();
  virtual ~Struct_Army_Info();

  Struct_Army_Info(const Struct_Army_Info& from);

  inline Struct_Army_Info& operator=(const Struct_Army_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Struct_Army_Info& default_instance();

  void Swap(Struct_Army_Info* other);

  // implements Message ----------------------------------------------

  Struct_Army_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Struct_Army_Info& from);
  void MergeFrom(const Struct_Army_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 country = 1;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 1;
  inline ::google::protobuf::uint32 country() const;
  inline void set_country(::google::protobuf::uint32 value);

  // required uint32 army_count = 2;
  inline bool has_army_count() const;
  inline void clear_army_count();
  static const int kArmyCountFieldNumber = 2;
  inline ::google::protobuf::uint32 army_count() const;
  inline void set_army_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.Struct_Army_Info)
 private:
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_army_count();
  inline void clear_has_army_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 country_;
  ::google::protobuf::uint32 army_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static Struct_Army_Info* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_City_Fight_Info : public ::google::protobuf::Message {
 public:
  GS2C_City_Fight_Info();
  virtual ~GS2C_City_Fight_Info();

  GS2C_City_Fight_Info(const GS2C_City_Fight_Info& from);

  inline GS2C_City_Fight_Info& operator=(const GS2C_City_Fight_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_City_Fight_Info& default_instance();

  void Swap(GS2C_City_Fight_Info* other);

  // implements Message ----------------------------------------------

  GS2C_City_Fight_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_City_Fight_Info& from);
  void MergeFrom(const GS2C_City_Fight_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.Struct_Army_Info attacker_lst = 1;
  inline int attacker_lst_size() const;
  inline void clear_attacker_lst();
  static const int kAttackerLstFieldNumber = 1;
  inline const ::pb::Struct_Army_Info& attacker_lst(int index) const;
  inline ::pb::Struct_Army_Info* mutable_attacker_lst(int index);
  inline ::pb::Struct_Army_Info* add_attacker_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Struct_Army_Info >&
      attacker_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Struct_Army_Info >*
      mutable_attacker_lst();

  // repeated .pb.Struct_Army_Info defender_lst = 2;
  inline int defender_lst_size() const;
  inline void clear_defender_lst();
  static const int kDefenderLstFieldNumber = 2;
  inline const ::pb::Struct_Army_Info& defender_lst(int index) const;
  inline ::pb::Struct_Army_Info* mutable_defender_lst(int index);
  inline ::pb::Struct_Army_Info* add_defender_lst();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Struct_Army_Info >&
      defender_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Struct_Army_Info >*
      mutable_defender_lst();

  // required uint32 city_id = 3;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 3;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_City_Fight_Info)
 private:
  inline void set_has_city_id();
  inline void clear_has_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::Struct_Army_Info > attacker_lst_;
  ::google::protobuf::RepeatedPtrField< ::pb::Struct_Army_Info > defender_lst_;
  ::google::protobuf::uint32 city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_City_Fight_Info* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Request_Fight_Lst : public ::google::protobuf::Message {
 public:
  C2GS_Request_Fight_Lst();
  virtual ~C2GS_Request_Fight_Lst();

  C2GS_Request_Fight_Lst(const C2GS_Request_Fight_Lst& from);

  inline C2GS_Request_Fight_Lst& operator=(const C2GS_Request_Fight_Lst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Request_Fight_Lst& default_instance();

  void Swap(C2GS_Request_Fight_Lst* other);

  // implements Message ----------------------------------------------

  C2GS_Request_Fight_Lst* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Request_Fight_Lst& from);
  void MergeFrom(const C2GS_Request_Fight_Lst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 city_id = 1;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Request_Fight_Lst)
 private:
  inline void set_has_city_id();
  inline void clear_has_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Request_Fight_Lst* default_instance_;
};
// -------------------------------------------------------------------

class World_Achievement_Info : public ::google::protobuf::Message {
 public:
  World_Achievement_Info();
  virtual ~World_Achievement_Info();

  World_Achievement_Info(const World_Achievement_Info& from);

  inline World_Achievement_Info& operator=(const World_Achievement_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_Achievement_Info& default_instance();

  void Swap(World_Achievement_Info* other);

  // implements Message ----------------------------------------------

  World_Achievement_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_Achievement_Info& from);
  void MergeFrom(const World_Achievement_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.World_Achievement_Info)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static World_Achievement_Info* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_World_Achievement_All_Info : public ::google::protobuf::Message {
 public:
  GS2C_World_Achievement_All_Info();
  virtual ~GS2C_World_Achievement_All_Info();

  GS2C_World_Achievement_All_Info(const GS2C_World_Achievement_All_Info& from);

  inline GS2C_World_Achievement_All_Info& operator=(const GS2C_World_Achievement_All_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_World_Achievement_All_Info& default_instance();

  void Swap(GS2C_World_Achievement_All_Info* other);

  // implements Message ----------------------------------------------

  GS2C_World_Achievement_All_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_World_Achievement_All_Info& from);
  void MergeFrom(const GS2C_World_Achievement_All_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.World_Achievement_Info info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::World_Achievement_Info& info(int index) const;
  inline ::pb::World_Achievement_Info* mutable_info(int index);
  inline ::pb::World_Achievement_Info* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::World_Achievement_Info >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::World_Achievement_Info >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:pb.GS2C_World_Achievement_All_Info)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::World_Achievement_Info > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_World_Achievement_All_Info* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Take_World_Achievement_Reward : public ::google::protobuf::Message {
 public:
  C2GS_Take_World_Achievement_Reward();
  virtual ~C2GS_Take_World_Achievement_Reward();

  C2GS_Take_World_Achievement_Reward(const C2GS_Take_World_Achievement_Reward& from);

  inline C2GS_Take_World_Achievement_Reward& operator=(const C2GS_Take_World_Achievement_Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Take_World_Achievement_Reward& default_instance();

  void Swap(C2GS_Take_World_Achievement_Reward* other);

  // implements Message ----------------------------------------------

  C2GS_Take_World_Achievement_Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Take_World_Achievement_Reward& from);
  void MergeFrom(const C2GS_Take_World_Achievement_Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 attack_or_occupy = 2;
  inline bool has_attack_or_occupy() const;
  inline void clear_attack_or_occupy();
  static const int kAttackOrOccupyFieldNumber = 2;
  inline ::google::protobuf::uint32 attack_or_occupy() const;
  inline void set_attack_or_occupy(::google::protobuf::uint32 value);

  // optional uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Take_World_Achievement_Reward)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_attack_or_occupy();
  inline void clear_has_attack_or_occupy();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 attack_or_occupy_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Take_World_Achievement_Reward* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Take_World_Achievement_Reward_Rsp : public ::google::protobuf::Message {
 public:
  GS2C_Take_World_Achievement_Reward_Rsp();
  virtual ~GS2C_Take_World_Achievement_Reward_Rsp();

  GS2C_Take_World_Achievement_Reward_Rsp(const GS2C_Take_World_Achievement_Reward_Rsp& from);

  inline GS2C_Take_World_Achievement_Reward_Rsp& operator=(const GS2C_Take_World_Achievement_Reward_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Take_World_Achievement_Reward_Rsp& default_instance();

  void Swap(GS2C_Take_World_Achievement_Reward_Rsp* other);

  // implements Message ----------------------------------------------

  GS2C_Take_World_Achievement_Reward_Rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Take_World_Achievement_Reward_Rsp& from);
  void MergeFrom(const GS2C_Take_World_Achievement_Reward_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // repeated .pb.StReward reward = 2;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::pb::StReward& reward(int index) const;
  inline ::pb::StReward* mutable_reward(int index);
  inline ::pb::StReward* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Take_World_Achievement_Reward_Rsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::StReward > reward_;
  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Take_World_Achievement_Reward_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_World_Achievement_Info : public ::google::protobuf::Message {
 public:
  GxDB_World_Achievement_Info();
  virtual ~GxDB_World_Achievement_Info();

  GxDB_World_Achievement_Info(const GxDB_World_Achievement_Info& from);

  inline GxDB_World_Achievement_Info& operator=(const GxDB_World_Achievement_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_World_Achievement_Info& default_instance();

  void Swap(GxDB_World_Achievement_Info* other);

  // implements Message ----------------------------------------------

  GxDB_World_Achievement_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_World_Achievement_Info& from);
  void MergeFrom(const GxDB_World_Achievement_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 city_id = 3;
  inline bool has_city_id() const;
  inline void clear_city_id();
  static const int kCityIdFieldNumber = 3;
  inline ::google::protobuf::uint32 city_id() const;
  inline void set_city_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GxDB_World_Achievement_Info)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_city_id();
  inline void clear_has_city_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 city_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GxDB_World_Achievement_Info* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_World_Achievement : public ::google::protobuf::Message {
 public:
  GxDB_World_Achievement();
  virtual ~GxDB_World_Achievement();

  GxDB_World_Achievement(const GxDB_World_Achievement& from);

  inline GxDB_World_Achievement& operator=(const GxDB_World_Achievement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_World_Achievement& default_instance();

  void Swap(GxDB_World_Achievement* other);

  // implements Message ----------------------------------------------

  GxDB_World_Achievement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_World_Achievement& from);
  void MergeFrom(const GxDB_World_Achievement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.GxDB_World_Achievement_Info info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::GxDB_World_Achievement_Info& info(int index) const;
  inline ::pb::GxDB_World_Achievement_Info* mutable_info(int index);
  inline ::pb::GxDB_World_Achievement_Info* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_World_Achievement_Info >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_World_Achievement_Info >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:pb.GxDB_World_Achievement)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::GxDB_World_Achievement_Info > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_World_2eproto();
  friend void protobuf_AssignDesc_World_2eproto();
  friend void protobuf_ShutdownFile_World_2eproto();

  void InitAsDefaultInstance();
  static GxDB_World_Achievement* default_instance_;
};
// ===================================================================


// ===================================================================

// C2GS_Enter_Map

// required uint32 map_tid = 1;
inline bool C2GS_Enter_Map::has_map_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Enter_Map::set_has_map_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Enter_Map::clear_has_map_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Enter_Map::clear_map_tid() {
  map_tid_ = 0u;
  clear_has_map_tid();
}
inline ::google::protobuf::uint32 C2GS_Enter_Map::map_tid() const {
  return map_tid_;
}
inline void C2GS_Enter_Map::set_map_tid(::google::protobuf::uint32 value) {
  set_has_map_tid();
  map_tid_ = value;
}

// -------------------------------------------------------------------

// C2GS_Leave_Map

// required uint32 map_tid = 1;
inline bool C2GS_Leave_Map::has_map_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Leave_Map::set_has_map_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Leave_Map::clear_has_map_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Leave_Map::clear_map_tid() {
  map_tid_ = 0u;
  clear_has_map_tid();
}
inline ::google::protobuf::uint32 C2GS_Leave_Map::map_tid() const {
  return map_tid_;
}
inline void C2GS_Leave_Map::set_map_tid(::google::protobuf::uint32 value) {
  set_has_map_tid();
  map_tid_ = value;
}

// -------------------------------------------------------------------

// C2GS_Auto_Attack

// repeated uint32 hero_ids = 1;
inline int C2GS_Auto_Attack::hero_ids_size() const {
  return hero_ids_.size();
}
inline void C2GS_Auto_Attack::clear_hero_ids() {
  hero_ids_.Clear();
}
inline ::google::protobuf::uint32 C2GS_Auto_Attack::hero_ids(int index) const {
  return hero_ids_.Get(index);
}
inline void C2GS_Auto_Attack::set_hero_ids(int index, ::google::protobuf::uint32 value) {
  hero_ids_.Set(index, value);
}
inline void C2GS_Auto_Attack::add_hero_ids(::google::protobuf::uint32 value) {
  hero_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
C2GS_Auto_Attack::hero_ids() const {
  return hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
C2GS_Auto_Attack::mutable_hero_ids() {
  return &hero_ids_;
}

// required uint32 city_id = 2;
inline bool C2GS_Auto_Attack::has_city_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2GS_Auto_Attack::set_has_city_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2GS_Auto_Attack::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2GS_Auto_Attack::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 C2GS_Auto_Attack::city_id() const {
  return city_id_;
}
inline void C2GS_Auto_Attack::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Hero_Move

// required uint32 char_id = 1;
inline bool C2GS_Hero_Move::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Hero_Move::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Hero_Move::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Hero_Move::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 C2GS_Hero_Move::char_id() const {
  return char_id_;
}
inline void C2GS_Hero_Move::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// required uint32 city_id = 2;
inline bool C2GS_Hero_Move::has_city_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2GS_Hero_Move::set_has_city_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2GS_Hero_Move::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2GS_Hero_Move::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 C2GS_Hero_Move::city_id() const {
  return city_id_;
}
inline void C2GS_Hero_Move::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Hero_Move

// optional uint32 char_id = 1;
inline bool GS2C_Hero_Move::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Hero_Move::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Hero_Move::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Hero_Move::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 GS2C_Hero_Move::char_id() const {
  return char_id_;
}
inline void GS2C_Hero_Move::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// repeated uint32 city_id = 2;
inline int GS2C_Hero_Move::city_id_size() const {
  return city_id_.size();
}
inline void GS2C_Hero_Move::clear_city_id() {
  city_id_.Clear();
}
inline ::google::protobuf::uint32 GS2C_Hero_Move::city_id(int index) const {
  return city_id_.Get(index);
}
inline void GS2C_Hero_Move::set_city_id(int index, ::google::protobuf::uint32 value) {
  city_id_.Set(index, value);
}
inline void GS2C_Hero_Move::add_city_id(::google::protobuf::uint32 value) {
  city_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GS2C_Hero_Move::city_id() const {
  return city_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GS2C_Hero_Move::mutable_city_id() {
  return &city_id_;
}

// -------------------------------------------------------------------

// C2GS_HERO_STOP_MOVE

// required uint32 char_id = 1;
inline bool C2GS_HERO_STOP_MOVE::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_HERO_STOP_MOVE::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_HERO_STOP_MOVE::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_HERO_STOP_MOVE::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 C2GS_HERO_STOP_MOVE::char_id() const {
  return char_id_;
}
inline void C2GS_HERO_STOP_MOVE::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Hero_Pos

// required uint32 char_id = 1;
inline bool GS2C_Hero_Pos::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Hero_Pos::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Hero_Pos::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Hero_Pos::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 GS2C_Hero_Pos::char_id() const {
  return char_id_;
}
inline void GS2C_Hero_Pos::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// required uint32 city_id = 2;
inline bool GS2C_Hero_Pos::has_city_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Hero_Pos::set_has_city_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Hero_Pos::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Hero_Pos::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 GS2C_Hero_Pos::city_id() const {
  return city_id_;
}
inline void GS2C_Hero_Pos::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// optional bool is_jump = 3;
inline bool GS2C_Hero_Pos::has_is_jump() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_Hero_Pos::set_has_is_jump() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_Hero_Pos::clear_has_is_jump() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_Hero_Pos::clear_is_jump() {
  is_jump_ = false;
  clear_has_is_jump();
}
inline bool GS2C_Hero_Pos::is_jump() const {
  return is_jump_;
}
inline void GS2C_Hero_Pos::set_is_jump(bool value) {
  set_has_is_jump();
  is_jump_ = value;
}

// optional bool is_move_shutdown = 4;
inline bool GS2C_Hero_Pos::has_is_move_shutdown() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GS2C_Hero_Pos::set_has_is_move_shutdown() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GS2C_Hero_Pos::clear_has_is_move_shutdown() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GS2C_Hero_Pos::clear_is_move_shutdown() {
  is_move_shutdown_ = false;
  clear_has_is_move_shutdown();
}
inline bool GS2C_Hero_Pos::is_move_shutdown() const {
  return is_move_shutdown_;
}
inline void GS2C_Hero_Pos::set_is_move_shutdown(bool value) {
  set_has_is_move_shutdown();
  is_move_shutdown_ = value;
}

// -------------------------------------------------------------------

// GS2C_NPC_Pos

// required uint32 hero_id = 1;
inline bool GS2C_NPC_Pos::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_NPC_Pos::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_NPC_Pos::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_NPC_Pos::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 GS2C_NPC_Pos::hero_id() const {
  return hero_id_;
}
inline void GS2C_NPC_Pos::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// required uint32 city_id = 2;
inline bool GS2C_NPC_Pos::has_city_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_NPC_Pos::set_has_city_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_NPC_Pos::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_NPC_Pos::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 GS2C_NPC_Pos::city_id() const {
  return city_id_;
}
inline void GS2C_NPC_Pos::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// optional uint32 unique_id = 3;
inline bool GS2C_NPC_Pos::has_unique_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_NPC_Pos::set_has_unique_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_NPC_Pos::clear_has_unique_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_NPC_Pos::clear_unique_id() {
  unique_id_ = 0u;
  clear_has_unique_id();
}
inline ::google::protobuf::uint32 GS2C_NPC_Pos::unique_id() const {
  return unique_id_;
}
inline void GS2C_NPC_Pos::set_unique_id(::google::protobuf::uint32 value) {
  set_has_unique_id();
  unique_id_ = value;
}

// optional uint32 belongCountry = 4;
inline bool GS2C_NPC_Pos::has_belongcountry() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GS2C_NPC_Pos::set_has_belongcountry() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GS2C_NPC_Pos::clear_has_belongcountry() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GS2C_NPC_Pos::clear_belongcountry() {
  belongcountry_ = 0u;
  clear_has_belongcountry();
}
inline ::google::protobuf::uint32 GS2C_NPC_Pos::belongcountry() const {
  return belongcountry_;
}
inline void GS2C_NPC_Pos::set_belongcountry(::google::protobuf::uint32 value) {
  set_has_belongcountry();
  belongcountry_ = value;
}

// optional uint32 org_city_id = 5;
inline bool GS2C_NPC_Pos::has_org_city_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GS2C_NPC_Pos::set_has_org_city_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GS2C_NPC_Pos::clear_has_org_city_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GS2C_NPC_Pos::clear_org_city_id() {
  org_city_id_ = 0u;
  clear_has_org_city_id();
}
inline ::google::protobuf::uint32 GS2C_NPC_Pos::org_city_id() const {
  return org_city_id_;
}
inline void GS2C_NPC_Pos::set_org_city_id(::google::protobuf::uint32 value) {
  set_has_org_city_id();
  org_city_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_NPC_POS_LIST

// repeated .pb.GS2C_NPC_Pos pos = 1;
inline int GS2C_NPC_POS_LIST::pos_size() const {
  return pos_.size();
}
inline void GS2C_NPC_POS_LIST::clear_pos() {
  pos_.Clear();
}
inline const ::pb::GS2C_NPC_Pos& GS2C_NPC_POS_LIST::pos(int index) const {
  return pos_.Get(index);
}
inline ::pb::GS2C_NPC_Pos* GS2C_NPC_POS_LIST::mutable_pos(int index) {
  return pos_.Mutable(index);
}
inline ::pb::GS2C_NPC_Pos* GS2C_NPC_POS_LIST::add_pos() {
  return pos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::GS2C_NPC_Pos >&
GS2C_NPC_POS_LIST::pos() const {
  return pos_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::GS2C_NPC_Pos >*
GS2C_NPC_POS_LIST::mutable_pos() {
  return &pos_;
}

// -------------------------------------------------------------------

// GS2C_Delete_Npc_World

// optional uint32 expeid = 1;
inline bool GS2C_Delete_Npc_World::has_expeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Delete_Npc_World::set_has_expeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Delete_Npc_World::clear_has_expeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Delete_Npc_World::clear_expeid() {
  expeid_ = 0u;
  clear_has_expeid();
}
inline ::google::protobuf::uint32 GS2C_Delete_Npc_World::expeid() const {
  return expeid_;
}
inline void GS2C_Delete_Npc_World::set_expeid(::google::protobuf::uint32 value) {
  set_has_expeid();
  expeid_ = value;
}

// optional uint32 city_id = 2;
inline bool GS2C_Delete_Npc_World::has_city_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Delete_Npc_World::set_has_city_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Delete_Npc_World::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Delete_Npc_World::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 GS2C_Delete_Npc_World::city_id() const {
  return city_id_;
}
inline void GS2C_Delete_Npc_World::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Expedition_Army_Info

// required uint32 expedition_id = 1;
inline bool GS2C_Expedition_Army_Info::has_expedition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Expedition_Army_Info::set_has_expedition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Expedition_Army_Info::clear_has_expedition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Expedition_Army_Info::clear_expedition_id() {
  expedition_id_ = 0u;
  clear_has_expedition_id();
}
inline ::google::protobuf::uint32 GS2C_Expedition_Army_Info::expedition_id() const {
  return expedition_id_;
}
inline void GS2C_Expedition_Army_Info::set_expedition_id(::google::protobuf::uint32 value) {
  set_has_expedition_id();
  expedition_id_ = value;
}

// required uint32 city_id = 2;
inline bool GS2C_Expedition_Army_Info::has_city_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Expedition_Army_Info::set_has_city_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Expedition_Army_Info::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Expedition_Army_Info::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 GS2C_Expedition_Army_Info::city_id() const {
  return city_id_;
}
inline void GS2C_Expedition_Army_Info::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// required uint32 hero_id = 3;
inline bool GS2C_Expedition_Army_Info::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_Expedition_Army_Info::set_has_hero_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_Expedition_Army_Info::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_Expedition_Army_Info::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 GS2C_Expedition_Army_Info::hero_id() const {
  return hero_id_;
}
inline void GS2C_Expedition_Army_Info::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// optional uint32 org_city_id = 4;
inline bool GS2C_Expedition_Army_Info::has_org_city_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GS2C_Expedition_Army_Info::set_has_org_city_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GS2C_Expedition_Army_Info::clear_has_org_city_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GS2C_Expedition_Army_Info::clear_org_city_id() {
  org_city_id_ = 0u;
  clear_has_org_city_id();
}
inline ::google::protobuf::uint32 GS2C_Expedition_Army_Info::org_city_id() const {
  return org_city_id_;
}
inline void GS2C_Expedition_Army_Info::set_org_city_id(::google::protobuf::uint32 value) {
  set_has_org_city_id();
  org_city_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Donate_City

// required uint32 city_id = 1;
inline bool C2GS_Donate_City::has_city_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Donate_City::set_has_city_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Donate_City::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Donate_City::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 C2GS_Donate_City::city_id() const {
  return city_id_;
}
inline void C2GS_Donate_City::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Train_Soldier

// required uint32 train_index = 1;
inline bool C2GS_Train_Soldier::has_train_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Train_Soldier::set_has_train_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Train_Soldier::clear_has_train_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Train_Soldier::clear_train_index() {
  train_index_ = 0u;
  clear_has_train_index();
}
inline ::google::protobuf::uint32 C2GS_Train_Soldier::train_index() const {
  return train_index_;
}
inline void C2GS_Train_Soldier::set_train_index(::google::protobuf::uint32 value) {
  set_has_train_index();
  train_index_ = value;
}

// -------------------------------------------------------------------

// C2GS_StartTunTian

// required uint32 heroid = 1;
inline bool C2GS_StartTunTian::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_StartTunTian::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_StartTunTian::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_StartTunTian::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 C2GS_StartTunTian::heroid() const {
  return heroid_;
}
inline void C2GS_StartTunTian::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// required uint32 cityid = 2;
inline bool C2GS_StartTunTian::has_cityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2GS_StartTunTian::set_has_cityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2GS_StartTunTian::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2GS_StartTunTian::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 C2GS_StartTunTian::cityid() const {
  return cityid_;
}
inline void C2GS_StartTunTian::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
}

// -------------------------------------------------------------------

// GS2C_StartTunTian

// required bool isTuntianSuc = 1;
inline bool GS2C_StartTunTian::has_istuntiansuc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_StartTunTian::set_has_istuntiansuc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_StartTunTian::clear_has_istuntiansuc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_StartTunTian::clear_istuntiansuc() {
  istuntiansuc_ = false;
  clear_has_istuntiansuc();
}
inline bool GS2C_StartTunTian::istuntiansuc() const {
  return istuntiansuc_;
}
inline void GS2C_StartTunTian::set_istuntiansuc(bool value) {
  set_has_istuntiansuc();
  istuntiansuc_ = value;
}

// optional uint64 startTime = 2;
inline bool GS2C_StartTunTian::has_starttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_StartTunTian::set_has_starttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_StartTunTian::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_StartTunTian::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 GS2C_StartTunTian::starttime() const {
  return starttime_;
}
inline void GS2C_StartTunTian::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
}

// optional uint32 heroid = 3;
inline bool GS2C_StartTunTian::has_heroid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_StartTunTian::set_has_heroid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_StartTunTian::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_StartTunTian::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 GS2C_StartTunTian::heroid() const {
  return heroid_;
}
inline void GS2C_StartTunTian::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// -------------------------------------------------------------------

// GS2C_TunTianReward

// required uint32 food_count = 1;
inline bool GS2C_TunTianReward::has_food_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_TunTianReward::set_has_food_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_TunTianReward::clear_has_food_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_TunTianReward::clear_food_count() {
  food_count_ = 0u;
  clear_has_food_count();
}
inline ::google::protobuf::uint32 GS2C_TunTianReward::food_count() const {
  return food_count_;
}
inline void GS2C_TunTianReward::set_food_count(::google::protobuf::uint32 value) {
  set_has_food_count();
  food_count_ = value;
}

// -------------------------------------------------------------------

// GS2C_TunTian_Donate_Ret

// optional uint32 donateret = 1;
inline bool GS2C_TunTian_Donate_Ret::has_donateret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_TunTian_Donate_Ret::set_has_donateret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_TunTian_Donate_Ret::clear_has_donateret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_TunTian_Donate_Ret::clear_donateret() {
  donateret_ = 0u;
  clear_has_donateret();
}
inline ::google::protobuf::uint32 GS2C_TunTian_Donate_Ret::donateret() const {
  return donateret_;
}
inline void GS2C_TunTian_Donate_Ret::set_donateret(::google::protobuf::uint32 value) {
  set_has_donateret();
  donateret_ = value;
}

// optional uint64 cdEndTime = 2;
inline bool GS2C_TunTian_Donate_Ret::has_cdendtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_TunTian_Donate_Ret::set_has_cdendtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_TunTian_Donate_Ret::clear_has_cdendtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_TunTian_Donate_Ret::clear_cdendtime() {
  cdendtime_ = GOOGLE_ULONGLONG(0);
  clear_has_cdendtime();
}
inline ::google::protobuf::uint64 GS2C_TunTian_Donate_Ret::cdendtime() const {
  return cdendtime_;
}
inline void GS2C_TunTian_Donate_Ret::set_cdendtime(::google::protobuf::uint64 value) {
  set_has_cdendtime();
  cdendtime_ = value;
}

// optional uint32 tuntianlevel = 3;
inline bool GS2C_TunTian_Donate_Ret::has_tuntianlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_TunTian_Donate_Ret::set_has_tuntianlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_TunTian_Donate_Ret::clear_has_tuntianlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_TunTian_Donate_Ret::clear_tuntianlevel() {
  tuntianlevel_ = 0u;
  clear_has_tuntianlevel();
}
inline ::google::protobuf::uint32 GS2C_TunTian_Donate_Ret::tuntianlevel() const {
  return tuntianlevel_;
}
inline void GS2C_TunTian_Donate_Ret::set_tuntianlevel(::google::protobuf::uint32 value) {
  set_has_tuntianlevel();
  tuntianlevel_ = value;
}

// optional uint64 tuntianexp = 4;
inline bool GS2C_TunTian_Donate_Ret::has_tuntianexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GS2C_TunTian_Donate_Ret::set_has_tuntianexp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GS2C_TunTian_Donate_Ret::clear_has_tuntianexp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GS2C_TunTian_Donate_Ret::clear_tuntianexp() {
  tuntianexp_ = GOOGLE_ULONGLONG(0);
  clear_has_tuntianexp();
}
inline ::google::protobuf::uint64 GS2C_TunTian_Donate_Ret::tuntianexp() const {
  return tuntianexp_;
}
inline void GS2C_TunTian_Donate_Ret::set_tuntianexp(::google::protobuf::uint64 value) {
  set_has_tuntianexp();
  tuntianexp_ = value;
}

// -------------------------------------------------------------------

// C2GS_Clear_Fresh_TunTian

// optional bool isClear = 1;
inline bool C2GS_Clear_Fresh_TunTian::has_isclear() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Clear_Fresh_TunTian::set_has_isclear() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Clear_Fresh_TunTian::clear_has_isclear() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Clear_Fresh_TunTian::clear_isclear() {
  isclear_ = false;
  clear_has_isclear();
}
inline bool C2GS_Clear_Fresh_TunTian::isclear() const {
  return isclear_;
}
inline void C2GS_Clear_Fresh_TunTian::set_isclear(bool value) {
  set_has_isclear();
  isclear_ = value;
}

// -------------------------------------------------------------------

// GS2C_Clear_Tuntian_CD_Ret

// optional bool isClearSucc = 1;
inline bool GS2C_Clear_Tuntian_CD_Ret::has_isclearsucc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Clear_Tuntian_CD_Ret::set_has_isclearsucc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Clear_Tuntian_CD_Ret::clear_has_isclearsucc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Clear_Tuntian_CD_Ret::clear_isclearsucc() {
  isclearsucc_ = false;
  clear_has_isclearsucc();
}
inline bool GS2C_Clear_Tuntian_CD_Ret::isclearsucc() const {
  return isclearsucc_;
}
inline void GS2C_Clear_Tuntian_CD_Ret::set_isclearsucc(bool value) {
  set_has_isclearsucc();
  isclearsucc_ = value;
}

// optional uint64 cdEndTime = 2;
inline bool GS2C_Clear_Tuntian_CD_Ret::has_cdendtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Clear_Tuntian_CD_Ret::set_has_cdendtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Clear_Tuntian_CD_Ret::clear_has_cdendtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Clear_Tuntian_CD_Ret::clear_cdendtime() {
  cdendtime_ = GOOGLE_ULONGLONG(0);
  clear_has_cdendtime();
}
inline ::google::protobuf::uint64 GS2C_Clear_Tuntian_CD_Ret::cdendtime() const {
  return cdendtime_;
}
inline void GS2C_Clear_Tuntian_CD_Ret::set_cdendtime(::google::protobuf::uint64 value) {
  set_has_cdendtime();
  cdendtime_ = value;
}

// optional uint32 tuntianlevel = 3;
inline bool GS2C_Clear_Tuntian_CD_Ret::has_tuntianlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_Clear_Tuntian_CD_Ret::set_has_tuntianlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_Clear_Tuntian_CD_Ret::clear_has_tuntianlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_Clear_Tuntian_CD_Ret::clear_tuntianlevel() {
  tuntianlevel_ = 0u;
  clear_has_tuntianlevel();
}
inline ::google::protobuf::uint32 GS2C_Clear_Tuntian_CD_Ret::tuntianlevel() const {
  return tuntianlevel_;
}
inline void GS2C_Clear_Tuntian_CD_Ret::set_tuntianlevel(::google::protobuf::uint32 value) {
  set_has_tuntianlevel();
  tuntianlevel_ = value;
}

// optional uint64 tuntianexp = 4;
inline bool GS2C_Clear_Tuntian_CD_Ret::has_tuntianexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GS2C_Clear_Tuntian_CD_Ret::set_has_tuntianexp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GS2C_Clear_Tuntian_CD_Ret::clear_has_tuntianexp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GS2C_Clear_Tuntian_CD_Ret::clear_tuntianexp() {
  tuntianexp_ = GOOGLE_ULONGLONG(0);
  clear_has_tuntianexp();
}
inline ::google::protobuf::uint64 GS2C_Clear_Tuntian_CD_Ret::tuntianexp() const {
  return tuntianexp_;
}
inline void GS2C_Clear_Tuntian_CD_Ret::set_tuntianexp(::google::protobuf::uint64 value) {
  set_has_tuntianexp();
  tuntianexp_ = value;
}

// -------------------------------------------------------------------

// hero_exp_get

// optional uint32 chatid = 1;
inline bool hero_exp_get::has_chatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hero_exp_get::set_has_chatid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hero_exp_get::clear_has_chatid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hero_exp_get::clear_chatid() {
  chatid_ = 0u;
  clear_has_chatid();
}
inline ::google::protobuf::uint32 hero_exp_get::chatid() const {
  return chatid_;
}
inline void hero_exp_get::set_chatid(::google::protobuf::uint32 value) {
  set_has_chatid();
  chatid_ = value;
}

// optional uint32 exp = 2;
inline bool hero_exp_get::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hero_exp_get::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hero_exp_get::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hero_exp_get::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 hero_exp_get::exp() const {
  return exp_;
}
inline void hero_exp_get::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// GS2C_Train_Info

// optional bool isTraining = 1;
inline bool GS2C_Train_Info::has_istraining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Train_Info::set_has_istraining() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Train_Info::clear_has_istraining() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Train_Info::clear_istraining() {
  istraining_ = false;
  clear_has_istraining();
}
inline bool GS2C_Train_Info::istraining() const {
  return istraining_;
}
inline void GS2C_Train_Info::set_istraining(bool value) {
  set_has_istraining();
  istraining_ = value;
}

// repeated uint32 herosid = 2;
inline int GS2C_Train_Info::herosid_size() const {
  return herosid_.size();
}
inline void GS2C_Train_Info::clear_herosid() {
  herosid_.Clear();
}
inline ::google::protobuf::uint32 GS2C_Train_Info::herosid(int index) const {
  return herosid_.Get(index);
}
inline void GS2C_Train_Info::set_herosid(int index, ::google::protobuf::uint32 value) {
  herosid_.Set(index, value);
}
inline void GS2C_Train_Info::add_herosid(::google::protobuf::uint32 value) {
  herosid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GS2C_Train_Info::herosid() const {
  return herosid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GS2C_Train_Info::mutable_herosid() {
  return &herosid_;
}

// optional uint64 trainEndTime = 3;
inline bool GS2C_Train_Info::has_trainendtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_Train_Info::set_has_trainendtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_Train_Info::clear_has_trainendtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_Train_Info::clear_trainendtime() {
  trainendtime_ = GOOGLE_ULONGLONG(0);
  clear_has_trainendtime();
}
inline ::google::protobuf::uint64 GS2C_Train_Info::trainendtime() const {
  return trainendtime_;
}
inline void GS2C_Train_Info::set_trainendtime(::google::protobuf::uint64 value) {
  set_has_trainendtime();
  trainendtime_ = value;
}

// optional uint32 trainType = 4;
inline bool GS2C_Train_Info::has_traintype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GS2C_Train_Info::set_has_traintype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GS2C_Train_Info::clear_has_traintype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GS2C_Train_Info::clear_traintype() {
  traintype_ = 0u;
  clear_has_traintype();
}
inline ::google::protobuf::uint32 GS2C_Train_Info::traintype() const {
  return traintype_;
}
inline void GS2C_Train_Info::set_traintype(::google::protobuf::uint32 value) {
  set_has_traintype();
  traintype_ = value;
}

// repeated .pb.hero_exp_get expGet = 5;
inline int GS2C_Train_Info::expget_size() const {
  return expget_.size();
}
inline void GS2C_Train_Info::clear_expget() {
  expget_.Clear();
}
inline const ::pb::hero_exp_get& GS2C_Train_Info::expget(int index) const {
  return expget_.Get(index);
}
inline ::pb::hero_exp_get* GS2C_Train_Info::mutable_expget(int index) {
  return expget_.Mutable(index);
}
inline ::pb::hero_exp_get* GS2C_Train_Info::add_expget() {
  return expget_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::hero_exp_get >&
GS2C_Train_Info::expget() const {
  return expget_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::hero_exp_get >*
GS2C_Train_Info::mutable_expget() {
  return &expget_;
}

// -------------------------------------------------------------------

// Wild_Data

// required uint32 friendliness = 1;
inline bool Wild_Data::has_friendliness() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Wild_Data::set_has_friendliness() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Wild_Data::clear_has_friendliness() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Wild_Data::clear_friendliness() {
  friendliness_ = 0u;
  clear_has_friendliness();
}
inline ::google::protobuf::uint32 Wild_Data::friendliness() const {
  return friendliness_;
}
inline void Wild_Data::set_friendliness(::google::protobuf::uint32 value) {
  set_has_friendliness();
  friendliness_ = value;
}

// optional uint32 inciteAmount = 2;
inline bool Wild_Data::has_inciteamount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Wild_Data::set_has_inciteamount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Wild_Data::clear_has_inciteamount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Wild_Data::clear_inciteamount() {
  inciteamount_ = 0u;
  clear_has_inciteamount();
}
inline ::google::protobuf::uint32 Wild_Data::inciteamount() const {
  return inciteamount_;
}
inline void Wild_Data::set_inciteamount(::google::protobuf::uint32 value) {
  set_has_inciteamount();
  inciteamount_ = value;
}

// optional uint32 city_id = 3;
inline bool Wild_Data::has_city_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Wild_Data::set_has_city_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Wild_Data::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Wild_Data::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 Wild_Data::city_id() const {
  return city_id_;
}
inline void Wild_Data::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// optional uint32 curBribeMoney = 4;
inline bool Wild_Data::has_curbribemoney() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Wild_Data::set_has_curbribemoney() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Wild_Data::clear_has_curbribemoney() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Wild_Data::clear_curbribemoney() {
  curbribemoney_ = 0u;
  clear_has_curbribemoney();
}
inline ::google::protobuf::uint32 Wild_Data::curbribemoney() const {
  return curbribemoney_;
}
inline void Wild_Data::set_curbribemoney(::google::protobuf::uint32 value) {
  set_has_curbribemoney();
  curbribemoney_ = value;
}

// -------------------------------------------------------------------

// GS2C_Wild_Data_Lst

// repeated .pb.Wild_Data wild_lst = 1;
inline int GS2C_Wild_Data_Lst::wild_lst_size() const {
  return wild_lst_.size();
}
inline void GS2C_Wild_Data_Lst::clear_wild_lst() {
  wild_lst_.Clear();
}
inline const ::pb::Wild_Data& GS2C_Wild_Data_Lst::wild_lst(int index) const {
  return wild_lst_.Get(index);
}
inline ::pb::Wild_Data* GS2C_Wild_Data_Lst::mutable_wild_lst(int index) {
  return wild_lst_.Mutable(index);
}
inline ::pb::Wild_Data* GS2C_Wild_Data_Lst::add_wild_lst() {
  return wild_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Wild_Data >&
GS2C_Wild_Data_Lst::wild_lst() const {
  return wild_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Wild_Data >*
GS2C_Wild_Data_Lst::mutable_wild_lst() {
  return &wild_lst_;
}

// -------------------------------------------------------------------

// C2GS_Bribe_City

// required uint32 city_id = 1;
inline bool C2GS_Bribe_City::has_city_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Bribe_City::set_has_city_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Bribe_City::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Bribe_City::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 C2GS_Bribe_City::city_id() const {
  return city_id_;
}
inline void C2GS_Bribe_City::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Incite_City

// required uint32 city_id = 1;
inline bool C2GS_Incite_City::has_city_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Incite_City::set_has_city_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Incite_City::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Incite_City::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 C2GS_Incite_City::city_id() const {
  return city_id_;
}
inline void C2GS_Incite_City::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// -------------------------------------------------------------------

// Struct_Army_Info

// required uint32 country = 1;
inline bool Struct_Army_Info::has_country() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Struct_Army_Info::set_has_country() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Struct_Army_Info::clear_has_country() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Struct_Army_Info::clear_country() {
  country_ = 0u;
  clear_has_country();
}
inline ::google::protobuf::uint32 Struct_Army_Info::country() const {
  return country_;
}
inline void Struct_Army_Info::set_country(::google::protobuf::uint32 value) {
  set_has_country();
  country_ = value;
}

// required uint32 army_count = 2;
inline bool Struct_Army_Info::has_army_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Struct_Army_Info::set_has_army_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Struct_Army_Info::clear_has_army_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Struct_Army_Info::clear_army_count() {
  army_count_ = 0u;
  clear_has_army_count();
}
inline ::google::protobuf::uint32 Struct_Army_Info::army_count() const {
  return army_count_;
}
inline void Struct_Army_Info::set_army_count(::google::protobuf::uint32 value) {
  set_has_army_count();
  army_count_ = value;
}

// -------------------------------------------------------------------

// GS2C_City_Fight_Info

// repeated .pb.Struct_Army_Info attacker_lst = 1;
inline int GS2C_City_Fight_Info::attacker_lst_size() const {
  return attacker_lst_.size();
}
inline void GS2C_City_Fight_Info::clear_attacker_lst() {
  attacker_lst_.Clear();
}
inline const ::pb::Struct_Army_Info& GS2C_City_Fight_Info::attacker_lst(int index) const {
  return attacker_lst_.Get(index);
}
inline ::pb::Struct_Army_Info* GS2C_City_Fight_Info::mutable_attacker_lst(int index) {
  return attacker_lst_.Mutable(index);
}
inline ::pb::Struct_Army_Info* GS2C_City_Fight_Info::add_attacker_lst() {
  return attacker_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Struct_Army_Info >&
GS2C_City_Fight_Info::attacker_lst() const {
  return attacker_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Struct_Army_Info >*
GS2C_City_Fight_Info::mutable_attacker_lst() {
  return &attacker_lst_;
}

// repeated .pb.Struct_Army_Info defender_lst = 2;
inline int GS2C_City_Fight_Info::defender_lst_size() const {
  return defender_lst_.size();
}
inline void GS2C_City_Fight_Info::clear_defender_lst() {
  defender_lst_.Clear();
}
inline const ::pb::Struct_Army_Info& GS2C_City_Fight_Info::defender_lst(int index) const {
  return defender_lst_.Get(index);
}
inline ::pb::Struct_Army_Info* GS2C_City_Fight_Info::mutable_defender_lst(int index) {
  return defender_lst_.Mutable(index);
}
inline ::pb::Struct_Army_Info* GS2C_City_Fight_Info::add_defender_lst() {
  return defender_lst_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Struct_Army_Info >&
GS2C_City_Fight_Info::defender_lst() const {
  return defender_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Struct_Army_Info >*
GS2C_City_Fight_Info::mutable_defender_lst() {
  return &defender_lst_;
}

// required uint32 city_id = 3;
inline bool GS2C_City_Fight_Info::has_city_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_City_Fight_Info::set_has_city_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_City_Fight_Info::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_City_Fight_Info::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 GS2C_City_Fight_Info::city_id() const {
  return city_id_;
}
inline void GS2C_City_Fight_Info::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Request_Fight_Lst

// required uint32 city_id = 1;
inline bool C2GS_Request_Fight_Lst::has_city_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Request_Fight_Lst::set_has_city_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Request_Fight_Lst::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Request_Fight_Lst::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 C2GS_Request_Fight_Lst::city_id() const {
  return city_id_;
}
inline void C2GS_Request_Fight_Lst::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// -------------------------------------------------------------------

// World_Achievement_Info

// optional uint32 id = 1;
inline bool World_Achievement_Info::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_Achievement_Info::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_Achievement_Info::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_Achievement_Info::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 World_Achievement_Info::id() const {
  return id_;
}
inline void World_Achievement_Info::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 type = 2;
inline bool World_Achievement_Info::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_Achievement_Info::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_Achievement_Info::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_Achievement_Info::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 World_Achievement_Info::type() const {
  return type_;
}
inline void World_Achievement_Info::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 state = 3;
inline bool World_Achievement_Info::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_Achievement_Info::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_Achievement_Info::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_Achievement_Info::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 World_Achievement_Info::state() const {
  return state_;
}
inline void World_Achievement_Info::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// GS2C_World_Achievement_All_Info

// repeated .pb.World_Achievement_Info info = 1;
inline int GS2C_World_Achievement_All_Info::info_size() const {
  return info_.size();
}
inline void GS2C_World_Achievement_All_Info::clear_info() {
  info_.Clear();
}
inline const ::pb::World_Achievement_Info& GS2C_World_Achievement_All_Info::info(int index) const {
  return info_.Get(index);
}
inline ::pb::World_Achievement_Info* GS2C_World_Achievement_All_Info::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::pb::World_Achievement_Info* GS2C_World_Achievement_All_Info::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::World_Achievement_Info >&
GS2C_World_Achievement_All_Info::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::World_Achievement_Info >*
GS2C_World_Achievement_All_Info::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// C2GS_Take_World_Achievement_Reward

// optional uint32 type = 1;
inline bool C2GS_Take_World_Achievement_Reward::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Take_World_Achievement_Reward::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Take_World_Achievement_Reward::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Take_World_Achievement_Reward::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 C2GS_Take_World_Achievement_Reward::type() const {
  return type_;
}
inline void C2GS_Take_World_Achievement_Reward::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 attack_or_occupy = 2;
inline bool C2GS_Take_World_Achievement_Reward::has_attack_or_occupy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2GS_Take_World_Achievement_Reward::set_has_attack_or_occupy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2GS_Take_World_Achievement_Reward::clear_has_attack_or_occupy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2GS_Take_World_Achievement_Reward::clear_attack_or_occupy() {
  attack_or_occupy_ = 0u;
  clear_has_attack_or_occupy();
}
inline ::google::protobuf::uint32 C2GS_Take_World_Achievement_Reward::attack_or_occupy() const {
  return attack_or_occupy_;
}
inline void C2GS_Take_World_Achievement_Reward::set_attack_or_occupy(::google::protobuf::uint32 value) {
  set_has_attack_or_occupy();
  attack_or_occupy_ = value;
}

// optional uint32 id = 3;
inline bool C2GS_Take_World_Achievement_Reward::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2GS_Take_World_Achievement_Reward::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2GS_Take_World_Achievement_Reward::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2GS_Take_World_Achievement_Reward::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 C2GS_Take_World_Achievement_Reward::id() const {
  return id_;
}
inline void C2GS_Take_World_Achievement_Reward::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Take_World_Achievement_Reward_Rsp

// optional uint32 ret = 1;
inline bool GS2C_Take_World_Achievement_Reward_Rsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Take_World_Achievement_Reward_Rsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Take_World_Achievement_Reward_Rsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Take_World_Achievement_Reward_Rsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 GS2C_Take_World_Achievement_Reward_Rsp::ret() const {
  return ret_;
}
inline void GS2C_Take_World_Achievement_Reward_Rsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// repeated .pb.StReward reward = 2;
inline int GS2C_Take_World_Achievement_Reward_Rsp::reward_size() const {
  return reward_.size();
}
inline void GS2C_Take_World_Achievement_Reward_Rsp::clear_reward() {
  reward_.Clear();
}
inline const ::pb::StReward& GS2C_Take_World_Achievement_Reward_Rsp::reward(int index) const {
  return reward_.Get(index);
}
inline ::pb::StReward* GS2C_Take_World_Achievement_Reward_Rsp::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::pb::StReward* GS2C_Take_World_Achievement_Reward_Rsp::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
GS2C_Take_World_Achievement_Reward_Rsp::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
GS2C_Take_World_Achievement_Reward_Rsp::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// GxDB_World_Achievement_Info

// optional uint32 type = 1;
inline bool GxDB_World_Achievement_Info::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GxDB_World_Achievement_Info::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GxDB_World_Achievement_Info::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GxDB_World_Achievement_Info::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GxDB_World_Achievement_Info::type() const {
  return type_;
}
inline void GxDB_World_Achievement_Info::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 state = 2;
inline bool GxDB_World_Achievement_Info::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GxDB_World_Achievement_Info::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GxDB_World_Achievement_Info::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GxDB_World_Achievement_Info::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 GxDB_World_Achievement_Info::state() const {
  return state_;
}
inline void GxDB_World_Achievement_Info::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// optional uint32 city_id = 3;
inline bool GxDB_World_Achievement_Info::has_city_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GxDB_World_Achievement_Info::set_has_city_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GxDB_World_Achievement_Info::clear_has_city_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GxDB_World_Achievement_Info::clear_city_id() {
  city_id_ = 0u;
  clear_has_city_id();
}
inline ::google::protobuf::uint32 GxDB_World_Achievement_Info::city_id() const {
  return city_id_;
}
inline void GxDB_World_Achievement_Info::set_city_id(::google::protobuf::uint32 value) {
  set_has_city_id();
  city_id_ = value;
}

// -------------------------------------------------------------------

// GxDB_World_Achievement

// repeated .pb.GxDB_World_Achievement_Info info = 1;
inline int GxDB_World_Achievement::info_size() const {
  return info_.size();
}
inline void GxDB_World_Achievement::clear_info() {
  info_.Clear();
}
inline const ::pb::GxDB_World_Achievement_Info& GxDB_World_Achievement::info(int index) const {
  return info_.Get(index);
}
inline ::pb::GxDB_World_Achievement_Info* GxDB_World_Achievement::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::pb::GxDB_World_Achievement_Info* GxDB_World_Achievement::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_World_Achievement_Info >&
GxDB_World_Achievement::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_World_Achievement_Info >*
GxDB_World_Achievement::mutable_info() {
  return &info_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_World_2eproto__INCLUDED
