// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Quest.proto

#ifndef PROTOBUF_Quest_2eproto__INCLUDED
#define PROTOBUF_Quest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommomDef.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Quest_2eproto();
void protobuf_AssignDesc_Quest_2eproto();
void protobuf_ShutdownFile_Quest_2eproto();

class GxDB_Quest;
class FinishMask;
class GS2C_QuestList;
class GxDB_Behavior;
class GxDB_BehaviorList;
class Daily_Quest_Info;
class GS2C_Daily_Quest_All_Info;
class C2GS_Daily_Quest_Reward;
class GS2C_Daily_Quest_Update;
class GS2C_Daily_Quest_Reward_Res;
class GxDB_Daily_Quest_Info;
class GxDB_Daily_Quest;
class Grow_Up_Quest_Info;
class Group_Up_Group_Info;
class GS2C_Grow_Up_Quest_All_Info;
class C2GS_Grow_Up_Quest_Reward;
class GS2C_Grow_Up_Quest_Reward_Res;
class GS2C_Grow_Up_Quest_Update;
class GS2C_Grow_Up_Quest_Group_Update;
class GxDB_Grow_Up_Quest_Info;
class GxDB_Grow_Up_Quest_Group_Info;
class GxDB_Grow_Up_Quest;
class GxDB_Grow_Up_Quest_Group;
class GxDB_Grow_Up_Quest_Delete;
class WannaBeStrongerBaseInfo;
class WannaBeStrongerInfo;
class C2GS_WannaBeStrongerReward;
class GS2C_WannaBeStrongerRewardRes;
class GS2C_WannaBeStrongerUpdate;
class GS2C_WannaBeStrongerAllInfo;
class GxDB_WannaBeStrongerInfoAllInfo;
class GS2C_Sign_Res;
class C2GS_Take_Extra_Reward;
class GS2C_Take_Extra_Reward_res;
class GS2C_Update_date;
class GxDB_Sign_info;
class GxDB_Sign_Up;
class pass_stage_reward_info;
class GS2C_Pass_Stage_Reward_All_Info;
class C2GS_Pass_Stage_Reward;
class GS2C_Pass_Stage_Reward_Res;
class GxDB_Pass_Stage_Reward;
class GxDB_Pass_Stage_Reward_Delete;

enum GrowUpQuestType {
  LEVLE_UP = 1,
  GET_EXPLOIT = 2,
  ATTACK_CITY = 3,
  XILIAN_EQUIP = 4,
  BAOQI_LEVEL_UP = 5,
  CHARACTER_LEVEL = 6,
  ALL_QUEST = 7,
  SOLIVER_QUAILTY = 8,
  QIKUANG_QUAILTY = 9,
  JINGKUANG_QUAILTY = 10,
  BINYING_QUAILTY = 11,
  RED_EQUIP = 12,
  PURPLE_EQUIP = 13,
  ORANGE_EQUIP = 14
};
bool GrowUpQuestType_IsValid(int value);
const GrowUpQuestType GrowUpQuestType_MIN = LEVLE_UP;
const GrowUpQuestType GrowUpQuestType_MAX = ORANGE_EQUIP;
const int GrowUpQuestType_ARRAYSIZE = GrowUpQuestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GrowUpQuestType_descriptor();
inline const ::std::string& GrowUpQuestType_Name(GrowUpQuestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GrowUpQuestType_descriptor(), value);
}
inline bool GrowUpQuestType_Parse(
    const ::std::string& name, GrowUpQuestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GrowUpQuestType>(
    GrowUpQuestType_descriptor(), name, value);
}
enum GrowUpRewardType {
  REWARD_NORMAL = 1,
  REWARD_GROUP = 2,
  REWARD_ALL_GROUP = 3
};
bool GrowUpRewardType_IsValid(int value);
const GrowUpRewardType GrowUpRewardType_MIN = REWARD_NORMAL;
const GrowUpRewardType GrowUpRewardType_MAX = REWARD_ALL_GROUP;
const int GrowUpRewardType_ARRAYSIZE = GrowUpRewardType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GrowUpRewardType_descriptor();
inline const ::std::string& GrowUpRewardType_Name(GrowUpRewardType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GrowUpRewardType_descriptor(), value);
}
inline bool GrowUpRewardType_Parse(
    const ::std::string& name, GrowUpRewardType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GrowUpRewardType>(
    GrowUpRewardType_descriptor(), name, value);
}
enum PSignType {
  MORMAL_SIGN = 1,
  RETROACTIVE = 2
};
bool PSignType_IsValid(int value);
const PSignType PSignType_MIN = MORMAL_SIGN;
const PSignType PSignType_MAX = RETROACTIVE;
const int PSignType_ARRAYSIZE = PSignType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PSignType_descriptor();
inline const ::std::string& PSignType_Name(PSignType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PSignType_descriptor(), value);
}
inline bool PSignType_Parse(
    const ::std::string& name, PSignType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PSignType>(
    PSignType_descriptor(), name, value);
}
enum SignResult {
  SIGN_SUCCESS = 1,
  SIGN_DIAMONDS_NOT_ENOUGH = 2,
  SIGN_HAD_SIGNED = 3,
  SIGN_CANT_RETROACTIVE = 4,
  SIGN_OTHER_REASON = 5
};
bool SignResult_IsValid(int value);
const SignResult SignResult_MIN = SIGN_SUCCESS;
const SignResult SignResult_MAX = SIGN_OTHER_REASON;
const int SignResult_ARRAYSIZE = SignResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* SignResult_descriptor();
inline const ::std::string& SignResult_Name(SignResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    SignResult_descriptor(), value);
}
inline bool SignResult_Parse(
    const ::std::string& name, SignResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SignResult>(
    SignResult_descriptor(), name, value);
}
enum ExtraRewardResult {
  EX_HAS_GET_REWARD = 1,
  EX_GET_SUCCESS = 2
};
bool ExtraRewardResult_IsValid(int value);
const ExtraRewardResult ExtraRewardResult_MIN = EX_HAS_GET_REWARD;
const ExtraRewardResult ExtraRewardResult_MAX = EX_GET_SUCCESS;
const int ExtraRewardResult_ARRAYSIZE = ExtraRewardResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExtraRewardResult_descriptor();
inline const ::std::string& ExtraRewardResult_Name(ExtraRewardResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExtraRewardResult_descriptor(), value);
}
inline bool ExtraRewardResult_Parse(
    const ::std::string& name, ExtraRewardResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExtraRewardResult>(
    ExtraRewardResult_descriptor(), name, value);
}
enum PassStageEnum {
  PS_TAKE_REWARD_SUCCESS = 0,
  PS_STAGE_NOT_PASSED = 1,
  PS_STAGE_HAS_TAKE_REWARD = 2,
  PS_OTHER_REASON = 3
};
bool PassStageEnum_IsValid(int value);
const PassStageEnum PassStageEnum_MIN = PS_TAKE_REWARD_SUCCESS;
const PassStageEnum PassStageEnum_MAX = PS_OTHER_REASON;
const int PassStageEnum_ARRAYSIZE = PassStageEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* PassStageEnum_descriptor();
inline const ::std::string& PassStageEnum_Name(PassStageEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    PassStageEnum_descriptor(), value);
}
inline bool PassStageEnum_Parse(
    const ::std::string& name, PassStageEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PassStageEnum>(
    PassStageEnum_descriptor(), name, value);
}
// ===================================================================

class GxDB_Quest : public ::google::protobuf::Message {
 public:
  GxDB_Quest();
  virtual ~GxDB_Quest();

  GxDB_Quest(const GxDB_Quest& from);

  inline GxDB_Quest& operator=(const GxDB_Quest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Quest& default_instance();

  void Swap(GxDB_Quest* other);

  // implements Message ----------------------------------------------

  GxDB_Quest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Quest& from);
  void MergeFrom(const GxDB_Quest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_deleted = 1;
  inline bool has_is_deleted() const;
  inline void clear_is_deleted();
  static const int kIsDeletedFieldNumber = 1;
  inline bool is_deleted() const;
  inline void set_is_deleted(bool value);

  // required uint32 quest_id = 2;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 2;
  inline ::google::protobuf::uint32 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint32 value);

  // optional int64 active_time = 4;
  inline bool has_active_time() const;
  inline void clear_active_time();
  static const int kActiveTimeFieldNumber = 4;
  inline ::google::protobuf::int64 active_time() const;
  inline void set_active_time(::google::protobuf::int64 value);

  // optional uint32 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GxDB_Quest)
 private:
  inline void set_has_is_deleted();
  inline void clear_has_is_deleted();
  inline void set_has_quest_id();
  inline void clear_has_quest_id();
  inline void set_has_active_time();
  inline void clear_has_active_time();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool is_deleted_;
  ::google::protobuf::uint32 quest_id_;
  ::google::protobuf::int64 active_time_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Quest* default_instance_;
};
// -------------------------------------------------------------------

class FinishMask : public ::google::protobuf::Message {
 public:
  FinishMask();
  virtual ~FinishMask();

  FinishMask(const FinishMask& from);

  inline FinishMask& operator=(const FinishMask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FinishMask& default_instance();

  void Swap(FinishMask* other);

  // implements Message ----------------------------------------------

  FinishMask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FinishMask& from);
  void MergeFrom(const FinishMask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.Uint32List finish_masks = 1;
  inline bool has_finish_masks() const;
  inline void clear_finish_masks();
  static const int kFinishMasksFieldNumber = 1;
  inline const ::pb::Uint32List& finish_masks() const;
  inline ::pb::Uint32List* mutable_finish_masks();
  inline ::pb::Uint32List* release_finish_masks();
  inline void set_allocated_finish_masks(::pb::Uint32List* finish_masks);

  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FinishMask)
 private:
  inline void set_has_finish_masks();
  inline void clear_has_finish_masks();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::Uint32List* finish_masks_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static FinishMask* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_QuestList : public ::google::protobuf::Message {
 public:
  GS2C_QuestList();
  virtual ~GS2C_QuestList();

  GS2C_QuestList(const GS2C_QuestList& from);

  inline GS2C_QuestList& operator=(const GS2C_QuestList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_QuestList& default_instance();

  void Swap(GS2C_QuestList* other);

  // implements Message ----------------------------------------------

  GS2C_QuestList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_QuestList& from);
  void MergeFrom(const GS2C_QuestList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.GxDB_Quest quests = 1;
  inline int quests_size() const;
  inline void clear_quests();
  static const int kQuestsFieldNumber = 1;
  inline const ::pb::GxDB_Quest& quests(int index) const;
  inline ::pb::GxDB_Quest* mutable_quests(int index);
  inline ::pb::GxDB_Quest* add_quests();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Quest >&
      quests() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Quest >*
      mutable_quests();

  // optional .pb.FinishMask finish_mask = 2;
  inline bool has_finish_mask() const;
  inline void clear_finish_mask();
  static const int kFinishMaskFieldNumber = 2;
  inline const ::pb::FinishMask& finish_mask() const;
  inline ::pb::FinishMask* mutable_finish_mask();
  inline ::pb::FinishMask* release_finish_mask();
  inline void set_allocated_finish_mask(::pb::FinishMask* finish_mask);

  // @@protoc_insertion_point(class_scope:pb.GS2C_QuestList)
 private:
  inline void set_has_finish_mask();
  inline void clear_has_finish_mask();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Quest > quests_;
  ::pb::FinishMask* finish_mask_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_QuestList* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_Behavior : public ::google::protobuf::Message {
 public:
  GxDB_Behavior();
  virtual ~GxDB_Behavior();

  GxDB_Behavior(const GxDB_Behavior& from);

  inline GxDB_Behavior& operator=(const GxDB_Behavior& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Behavior& default_instance();

  void Swap(GxDB_Behavior* other);

  // implements Message ----------------------------------------------

  GxDB_Behavior* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Behavior& from);
  void MergeFrom(const GxDB_Behavior& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 behavior = 1;
  inline bool has_behavior() const;
  inline void clear_behavior();
  static const int kBehaviorFieldNumber = 1;
  inline ::google::protobuf::uint64 behavior() const;
  inline void set_behavior(::google::protobuf::uint64 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required int64 last_trigger_time = 3;
  inline bool has_last_trigger_time() const;
  inline void clear_last_trigger_time();
  static const int kLastTriggerTimeFieldNumber = 3;
  inline ::google::protobuf::int64 last_trigger_time() const;
  inline void set_last_trigger_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pb.GxDB_Behavior)
 private:
  inline void set_has_behavior();
  inline void clear_has_behavior();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_last_trigger_time();
  inline void clear_has_last_trigger_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 behavior_;
  ::google::protobuf::int64 last_trigger_time_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Behavior* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_BehaviorList : public ::google::protobuf::Message {
 public:
  GxDB_BehaviorList();
  virtual ~GxDB_BehaviorList();

  GxDB_BehaviorList(const GxDB_BehaviorList& from);

  inline GxDB_BehaviorList& operator=(const GxDB_BehaviorList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_BehaviorList& default_instance();

  void Swap(GxDB_BehaviorList* other);

  // implements Message ----------------------------------------------

  GxDB_BehaviorList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_BehaviorList& from);
  void MergeFrom(const GxDB_BehaviorList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.GxDB_Behavior behavior_list = 1;
  inline int behavior_list_size() const;
  inline void clear_behavior_list();
  static const int kBehaviorListFieldNumber = 1;
  inline const ::pb::GxDB_Behavior& behavior_list(int index) const;
  inline ::pb::GxDB_Behavior* mutable_behavior_list(int index);
  inline ::pb::GxDB_Behavior* add_behavior_list();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Behavior >&
      behavior_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Behavior >*
      mutable_behavior_list();

  // @@protoc_insertion_point(class_scope:pb.GxDB_BehaviorList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Behavior > behavior_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_BehaviorList* default_instance_;
};
// -------------------------------------------------------------------

class Daily_Quest_Info : public ::google::protobuf::Message {
 public:
  Daily_Quest_Info();
  virtual ~Daily_Quest_Info();

  Daily_Quest_Info(const Daily_Quest_Info& from);

  inline Daily_Quest_Info& operator=(const Daily_Quest_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Daily_Quest_Info& default_instance();

  void Swap(Daily_Quest_Info* other);

  // implements Message ----------------------------------------------

  Daily_Quest_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Daily_Quest_Info& from);
  void MergeFrom(const Daily_Quest_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 quest_id = 1;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::uint32 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint32 value);

  // required uint32 finish_times = 2;
  inline bool has_finish_times() const;
  inline void clear_finish_times();
  static const int kFinishTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 finish_times() const;
  inline void set_finish_times(::google::protobuf::uint32 value);

  // required uint32 need_finish_times = 3;
  inline bool has_need_finish_times() const;
  inline void clear_need_finish_times();
  static const int kNeedFinishTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 need_finish_times() const;
  inline void set_need_finish_times(::google::protobuf::uint32 value);

  // required uint32 score = 4;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.Daily_Quest_Info)
 private:
  inline void set_has_quest_id();
  inline void clear_has_quest_id();
  inline void set_has_finish_times();
  inline void clear_has_finish_times();
  inline void set_has_need_finish_times();
  inline void clear_has_need_finish_times();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 quest_id_;
  ::google::protobuf::uint32 finish_times_;
  ::google::protobuf::uint32 need_finish_times_;
  ::google::protobuf::uint32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static Daily_Quest_Info* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Daily_Quest_All_Info : public ::google::protobuf::Message {
 public:
  GS2C_Daily_Quest_All_Info();
  virtual ~GS2C_Daily_Quest_All_Info();

  GS2C_Daily_Quest_All_Info(const GS2C_Daily_Quest_All_Info& from);

  inline GS2C_Daily_Quest_All_Info& operator=(const GS2C_Daily_Quest_All_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Daily_Quest_All_Info& default_instance();

  void Swap(GS2C_Daily_Quest_All_Info* other);

  // implements Message ----------------------------------------------

  GS2C_Daily_Quest_All_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Daily_Quest_All_Info& from);
  void MergeFrom(const GS2C_Daily_Quest_All_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.Daily_Quest_Info quest_info = 1;
  inline int quest_info_size() const;
  inline void clear_quest_info();
  static const int kQuestInfoFieldNumber = 1;
  inline const ::pb::Daily_Quest_Info& quest_info(int index) const;
  inline ::pb::Daily_Quest_Info* mutable_quest_info(int index);
  inline ::pb::Daily_Quest_Info* add_quest_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Daily_Quest_Info >&
      quest_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Daily_Quest_Info >*
      mutable_quest_info();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Daily_Quest_All_Info)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::Daily_Quest_Info > quest_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Daily_Quest_All_Info* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Daily_Quest_Reward : public ::google::protobuf::Message {
 public:
  C2GS_Daily_Quest_Reward();
  virtual ~C2GS_Daily_Quest_Reward();

  C2GS_Daily_Quest_Reward(const C2GS_Daily_Quest_Reward& from);

  inline C2GS_Daily_Quest_Reward& operator=(const C2GS_Daily_Quest_Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Daily_Quest_Reward& default_instance();

  void Swap(C2GS_Daily_Quest_Reward* other);

  // implements Message ----------------------------------------------

  C2GS_Daily_Quest_Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Daily_Quest_Reward& from);
  void MergeFrom(const C2GS_Daily_Quest_Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 reward_id = 1;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 1;
  inline ::google::protobuf::uint32 reward_id() const;
  inline void set_reward_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Daily_Quest_Reward)
 private:
  inline void set_has_reward_id();
  inline void clear_has_reward_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 reward_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Daily_Quest_Reward* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Daily_Quest_Update : public ::google::protobuf::Message {
 public:
  GS2C_Daily_Quest_Update();
  virtual ~GS2C_Daily_Quest_Update();

  GS2C_Daily_Quest_Update(const GS2C_Daily_Quest_Update& from);

  inline GS2C_Daily_Quest_Update& operator=(const GS2C_Daily_Quest_Update& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Daily_Quest_Update& default_instance();

  void Swap(GS2C_Daily_Quest_Update* other);

  // implements Message ----------------------------------------------

  GS2C_Daily_Quest_Update* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Daily_Quest_Update& from);
  void MergeFrom(const GS2C_Daily_Quest_Update& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.Daily_Quest_Info quest_info = 1;
  inline bool has_quest_info() const;
  inline void clear_quest_info();
  static const int kQuestInfoFieldNumber = 1;
  inline const ::pb::Daily_Quest_Info& quest_info() const;
  inline ::pb::Daily_Quest_Info* mutable_quest_info();
  inline ::pb::Daily_Quest_Info* release_quest_info();
  inline void set_allocated_quest_info(::pb::Daily_Quest_Info* quest_info);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Daily_Quest_Update)
 private:
  inline void set_has_quest_info();
  inline void clear_has_quest_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::Daily_Quest_Info* quest_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Daily_Quest_Update* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Daily_Quest_Reward_Res : public ::google::protobuf::Message {
 public:
  GS2C_Daily_Quest_Reward_Res();
  virtual ~GS2C_Daily_Quest_Reward_Res();

  GS2C_Daily_Quest_Reward_Res(const GS2C_Daily_Quest_Reward_Res& from);

  inline GS2C_Daily_Quest_Reward_Res& operator=(const GS2C_Daily_Quest_Reward_Res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Daily_Quest_Reward_Res& default_instance();

  void Swap(GS2C_Daily_Quest_Reward_Res* other);

  // implements Message ----------------------------------------------

  GS2C_Daily_Quest_Reward_Res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Daily_Quest_Reward_Res& from);
  void MergeFrom(const GS2C_Daily_Quest_Reward_Res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.StReward rewards = 1;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::pb::StReward& rewards(int index) const;
  inline ::pb::StReward* mutable_rewards(int index);
  inline ::pb::StReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Daily_Quest_Reward_Res)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::StReward > rewards_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Daily_Quest_Reward_Res* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_Daily_Quest_Info : public ::google::protobuf::Message {
 public:
  GxDB_Daily_Quest_Info();
  virtual ~GxDB_Daily_Quest_Info();

  GxDB_Daily_Quest_Info(const GxDB_Daily_Quest_Info& from);

  inline GxDB_Daily_Quest_Info& operator=(const GxDB_Daily_Quest_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Daily_Quest_Info& default_instance();

  void Swap(GxDB_Daily_Quest_Info* other);

  // implements Message ----------------------------------------------

  GxDB_Daily_Quest_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Daily_Quest_Info& from);
  void MergeFrom(const GxDB_Daily_Quest_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 quest_id = 1;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::uint32 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint32 value);

  // required uint32 finished_times = 2;
  inline bool has_finished_times() const;
  inline void clear_finished_times();
  static const int kFinishedTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 finished_times() const;
  inline void set_finished_times(::google::protobuf::uint32 value);

  // required uint32 is_finished = 3;
  inline bool has_is_finished() const;
  inline void clear_is_finished();
  static const int kIsFinishedFieldNumber = 3;
  inline ::google::protobuf::uint32 is_finished() const;
  inline void set_is_finished(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GxDB_Daily_Quest_Info)
 private:
  inline void set_has_quest_id();
  inline void clear_has_quest_id();
  inline void set_has_finished_times();
  inline void clear_has_finished_times();
  inline void set_has_is_finished();
  inline void clear_has_is_finished();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 quest_id_;
  ::google::protobuf::uint32 finished_times_;
  ::google::protobuf::uint32 is_finished_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Daily_Quest_Info* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_Daily_Quest : public ::google::protobuf::Message {
 public:
  GxDB_Daily_Quest();
  virtual ~GxDB_Daily_Quest();

  GxDB_Daily_Quest(const GxDB_Daily_Quest& from);

  inline GxDB_Daily_Quest& operator=(const GxDB_Daily_Quest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Daily_Quest& default_instance();

  void Swap(GxDB_Daily_Quest* other);

  // implements Message ----------------------------------------------

  GxDB_Daily_Quest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Daily_Quest& from);
  void MergeFrom(const GxDB_Daily_Quest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.GxDB_Daily_Quest_Info quest_info = 1;
  inline int quest_info_size() const;
  inline void clear_quest_info();
  static const int kQuestInfoFieldNumber = 1;
  inline const ::pb::GxDB_Daily_Quest_Info& quest_info(int index) const;
  inline ::pb::GxDB_Daily_Quest_Info* mutable_quest_info(int index);
  inline ::pb::GxDB_Daily_Quest_Info* add_quest_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Daily_Quest_Info >&
      quest_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Daily_Quest_Info >*
      mutable_quest_info();

  // @@protoc_insertion_point(class_scope:pb.GxDB_Daily_Quest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Daily_Quest_Info > quest_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Daily_Quest* default_instance_;
};
// -------------------------------------------------------------------

class Grow_Up_Quest_Info : public ::google::protobuf::Message {
 public:
  Grow_Up_Quest_Info();
  virtual ~Grow_Up_Quest_Info();

  Grow_Up_Quest_Info(const Grow_Up_Quest_Info& from);

  inline Grow_Up_Quest_Info& operator=(const Grow_Up_Quest_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Grow_Up_Quest_Info& default_instance();

  void Swap(Grow_Up_Quest_Info* other);

  // implements Message ----------------------------------------------

  Grow_Up_Quest_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Grow_Up_Quest_Info& from);
  void MergeFrom(const Grow_Up_Quest_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // required uint32 quest_type = 2;
  inline bool has_quest_type() const;
  inline void clear_quest_type();
  static const int kQuestTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 quest_type() const;
  inline void set_quest_type(::google::protobuf::uint32 value);

  // required uint32 quest_id = 3;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 3;
  inline ::google::protobuf::uint32 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint32 value);

  // required uint32 cur_value = 4;
  inline bool has_cur_value() const;
  inline void clear_cur_value();
  static const int kCurValueFieldNumber = 4;
  inline ::google::protobuf::uint32 cur_value() const;
  inline void set_cur_value(::google::protobuf::uint32 value);

  // required uint32 need_value = 5;
  inline bool has_need_value() const;
  inline void clear_need_value();
  static const int kNeedValueFieldNumber = 5;
  inline ::google::protobuf::uint32 need_value() const;
  inline void set_need_value(::google::protobuf::uint32 value);

  // required uint32 is_finished = 6;
  inline bool has_is_finished() const;
  inline void clear_is_finished();
  static const int kIsFinishedFieldNumber = 6;
  inline ::google::protobuf::uint32 is_finished() const;
  inline void set_is_finished(::google::protobuf::uint32 value);

  // optional uint32 is_take_reward = 7;
  inline bool has_is_take_reward() const;
  inline void clear_is_take_reward();
  static const int kIsTakeRewardFieldNumber = 7;
  inline ::google::protobuf::uint32 is_take_reward() const;
  inline void set_is_take_reward(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.Grow_Up_Quest_Info)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_quest_type();
  inline void clear_has_quest_type();
  inline void set_has_quest_id();
  inline void clear_has_quest_id();
  inline void set_has_cur_value();
  inline void clear_has_cur_value();
  inline void set_has_need_value();
  inline void clear_has_need_value();
  inline void set_has_is_finished();
  inline void clear_has_is_finished();
  inline void set_has_is_take_reward();
  inline void clear_has_is_take_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 quest_type_;
  ::google::protobuf::uint32 quest_id_;
  ::google::protobuf::uint32 cur_value_;
  ::google::protobuf::uint32 need_value_;
  ::google::protobuf::uint32 is_finished_;
  ::google::protobuf::uint32 is_take_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static Grow_Up_Quest_Info* default_instance_;
};
// -------------------------------------------------------------------

class Group_Up_Group_Info : public ::google::protobuf::Message {
 public:
  Group_Up_Group_Info();
  virtual ~Group_Up_Group_Info();

  Group_Up_Group_Info(const Group_Up_Group_Info& from);

  inline Group_Up_Group_Info& operator=(const Group_Up_Group_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Group_Up_Group_Info& default_instance();

  void Swap(Group_Up_Group_Info* other);

  // implements Message ----------------------------------------------

  Group_Up_Group_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Group_Up_Group_Info& from);
  void MergeFrom(const Group_Up_Group_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // required uint32 is_finished = 2;
  inline bool has_is_finished() const;
  inline void clear_is_finished();
  static const int kIsFinishedFieldNumber = 2;
  inline ::google::protobuf::uint32 is_finished() const;
  inline void set_is_finished(::google::protobuf::uint32 value);

  // optional uint32 is_take_group_reward = 3;
  inline bool has_is_take_group_reward() const;
  inline void clear_is_take_group_reward();
  static const int kIsTakeGroupRewardFieldNumber = 3;
  inline ::google::protobuf::uint32 is_take_group_reward() const;
  inline void set_is_take_group_reward(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.Group_Up_Group_Info)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_is_finished();
  inline void clear_has_is_finished();
  inline void set_has_is_take_group_reward();
  inline void clear_has_is_take_group_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 is_finished_;
  ::google::protobuf::uint32 is_take_group_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static Group_Up_Group_Info* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Grow_Up_Quest_All_Info : public ::google::protobuf::Message {
 public:
  GS2C_Grow_Up_Quest_All_Info();
  virtual ~GS2C_Grow_Up_Quest_All_Info();

  GS2C_Grow_Up_Quest_All_Info(const GS2C_Grow_Up_Quest_All_Info& from);

  inline GS2C_Grow_Up_Quest_All_Info& operator=(const GS2C_Grow_Up_Quest_All_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Grow_Up_Quest_All_Info& default_instance();

  void Swap(GS2C_Grow_Up_Quest_All_Info* other);

  // implements Message ----------------------------------------------

  GS2C_Grow_Up_Quest_All_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Grow_Up_Quest_All_Info& from);
  void MergeFrom(const GS2C_Grow_Up_Quest_All_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.Grow_Up_Quest_Info grow_up_info = 1;
  inline int grow_up_info_size() const;
  inline void clear_grow_up_info();
  static const int kGrowUpInfoFieldNumber = 1;
  inline const ::pb::Grow_Up_Quest_Info& grow_up_info(int index) const;
  inline ::pb::Grow_Up_Quest_Info* mutable_grow_up_info(int index);
  inline ::pb::Grow_Up_Quest_Info* add_grow_up_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Grow_Up_Quest_Info >&
      grow_up_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Grow_Up_Quest_Info >*
      mutable_grow_up_info();

  // repeated .pb.Group_Up_Group_Info group_info = 2;
  inline int group_info_size() const;
  inline void clear_group_info();
  static const int kGroupInfoFieldNumber = 2;
  inline const ::pb::Group_Up_Group_Info& group_info(int index) const;
  inline ::pb::Group_Up_Group_Info* mutable_group_info(int index);
  inline ::pb::Group_Up_Group_Info* add_group_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Group_Up_Group_Info >&
      group_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Group_Up_Group_Info >*
      mutable_group_info();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Grow_Up_Quest_All_Info)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::Grow_Up_Quest_Info > grow_up_info_;
  ::google::protobuf::RepeatedPtrField< ::pb::Group_Up_Group_Info > group_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Grow_Up_Quest_All_Info* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Grow_Up_Quest_Reward : public ::google::protobuf::Message {
 public:
  C2GS_Grow_Up_Quest_Reward();
  virtual ~C2GS_Grow_Up_Quest_Reward();

  C2GS_Grow_Up_Quest_Reward(const C2GS_Grow_Up_Quest_Reward& from);

  inline C2GS_Grow_Up_Quest_Reward& operator=(const C2GS_Grow_Up_Quest_Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Grow_Up_Quest_Reward& default_instance();

  void Swap(C2GS_Grow_Up_Quest_Reward* other);

  // implements Message ----------------------------------------------

  C2GS_Grow_Up_Quest_Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Grow_Up_Quest_Reward& from);
  void MergeFrom(const C2GS_Grow_Up_Quest_Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.GrowUpRewardType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::pb::GrowUpRewardType type() const;
  inline void set_type(::pb::GrowUpRewardType value);

  // required uint32 quest_id = 2;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 2;
  inline ::google::protobuf::uint32 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Grow_Up_Quest_Reward)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_quest_id();
  inline void clear_has_quest_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;
  ::google::protobuf::uint32 quest_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Grow_Up_Quest_Reward* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Grow_Up_Quest_Reward_Res : public ::google::protobuf::Message {
 public:
  GS2C_Grow_Up_Quest_Reward_Res();
  virtual ~GS2C_Grow_Up_Quest_Reward_Res();

  GS2C_Grow_Up_Quest_Reward_Res(const GS2C_Grow_Up_Quest_Reward_Res& from);

  inline GS2C_Grow_Up_Quest_Reward_Res& operator=(const GS2C_Grow_Up_Quest_Reward_Res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Grow_Up_Quest_Reward_Res& default_instance();

  void Swap(GS2C_Grow_Up_Quest_Reward_Res* other);

  // implements Message ----------------------------------------------

  GS2C_Grow_Up_Quest_Reward_Res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Grow_Up_Quest_Reward_Res& from);
  void MergeFrom(const GS2C_Grow_Up_Quest_Reward_Res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.StReward rewards = 1;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::pb::StReward& rewards(int index) const;
  inline ::pb::StReward* mutable_rewards(int index);
  inline ::pb::StReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Grow_Up_Quest_Reward_Res)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::StReward > rewards_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Grow_Up_Quest_Reward_Res* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Grow_Up_Quest_Update : public ::google::protobuf::Message {
 public:
  GS2C_Grow_Up_Quest_Update();
  virtual ~GS2C_Grow_Up_Quest_Update();

  GS2C_Grow_Up_Quest_Update(const GS2C_Grow_Up_Quest_Update& from);

  inline GS2C_Grow_Up_Quest_Update& operator=(const GS2C_Grow_Up_Quest_Update& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Grow_Up_Quest_Update& default_instance();

  void Swap(GS2C_Grow_Up_Quest_Update* other);

  // implements Message ----------------------------------------------

  GS2C_Grow_Up_Quest_Update* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Grow_Up_Quest_Update& from);
  void MergeFrom(const GS2C_Grow_Up_Quest_Update& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.Grow_Up_Quest_Info grow_up_info = 1;
  inline bool has_grow_up_info() const;
  inline void clear_grow_up_info();
  static const int kGrowUpInfoFieldNumber = 1;
  inline const ::pb::Grow_Up_Quest_Info& grow_up_info() const;
  inline ::pb::Grow_Up_Quest_Info* mutable_grow_up_info();
  inline ::pb::Grow_Up_Quest_Info* release_grow_up_info();
  inline void set_allocated_grow_up_info(::pb::Grow_Up_Quest_Info* grow_up_info);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Grow_Up_Quest_Update)
 private:
  inline void set_has_grow_up_info();
  inline void clear_has_grow_up_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::Grow_Up_Quest_Info* grow_up_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Grow_Up_Quest_Update* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Grow_Up_Quest_Group_Update : public ::google::protobuf::Message {
 public:
  GS2C_Grow_Up_Quest_Group_Update();
  virtual ~GS2C_Grow_Up_Quest_Group_Update();

  GS2C_Grow_Up_Quest_Group_Update(const GS2C_Grow_Up_Quest_Group_Update& from);

  inline GS2C_Grow_Up_Quest_Group_Update& operator=(const GS2C_Grow_Up_Quest_Group_Update& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Grow_Up_Quest_Group_Update& default_instance();

  void Swap(GS2C_Grow_Up_Quest_Group_Update* other);

  // implements Message ----------------------------------------------

  GS2C_Grow_Up_Quest_Group_Update* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Grow_Up_Quest_Group_Update& from);
  void MergeFrom(const GS2C_Grow_Up_Quest_Group_Update& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.Group_Up_Group_Info group_info = 1;
  inline bool has_group_info() const;
  inline void clear_group_info();
  static const int kGroupInfoFieldNumber = 1;
  inline const ::pb::Group_Up_Group_Info& group_info() const;
  inline ::pb::Group_Up_Group_Info* mutable_group_info();
  inline ::pb::Group_Up_Group_Info* release_group_info();
  inline void set_allocated_group_info(::pb::Group_Up_Group_Info* group_info);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Grow_Up_Quest_Group_Update)
 private:
  inline void set_has_group_info();
  inline void clear_has_group_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::Group_Up_Group_Info* group_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Grow_Up_Quest_Group_Update* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_Grow_Up_Quest_Info : public ::google::protobuf::Message {
 public:
  GxDB_Grow_Up_Quest_Info();
  virtual ~GxDB_Grow_Up_Quest_Info();

  GxDB_Grow_Up_Quest_Info(const GxDB_Grow_Up_Quest_Info& from);

  inline GxDB_Grow_Up_Quest_Info& operator=(const GxDB_Grow_Up_Quest_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Grow_Up_Quest_Info& default_instance();

  void Swap(GxDB_Grow_Up_Quest_Info* other);

  // implements Message ----------------------------------------------

  GxDB_Grow_Up_Quest_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Grow_Up_Quest_Info& from);
  void MergeFrom(const GxDB_Grow_Up_Quest_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 quest_id = 1;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::uint32 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint32 value);

  // required uint32 quest_type = 2;
  inline bool has_quest_type() const;
  inline void clear_quest_type();
  static const int kQuestTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 quest_type() const;
  inline void set_quest_type(::google::protobuf::uint32 value);

  // required uint32 group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // required uint32 cur_value = 4;
  inline bool has_cur_value() const;
  inline void clear_cur_value();
  static const int kCurValueFieldNumber = 4;
  inline ::google::protobuf::uint32 cur_value() const;
  inline void set_cur_value(::google::protobuf::uint32 value);

  // required uint32 is_finished = 5;
  inline bool has_is_finished() const;
  inline void clear_is_finished();
  static const int kIsFinishedFieldNumber = 5;
  inline ::google::protobuf::uint32 is_finished() const;
  inline void set_is_finished(::google::protobuf::uint32 value);

  // optional uint32 is_take_reward = 6;
  inline bool has_is_take_reward() const;
  inline void clear_is_take_reward();
  static const int kIsTakeRewardFieldNumber = 6;
  inline ::google::protobuf::uint32 is_take_reward() const;
  inline void set_is_take_reward(::google::protobuf::uint32 value);

  // optional uint32 operate_type = 7;
  inline bool has_operate_type() const;
  inline void clear_operate_type();
  static const int kOperateTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 operate_type() const;
  inline void set_operate_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GxDB_Grow_Up_Quest_Info)
 private:
  inline void set_has_quest_id();
  inline void clear_has_quest_id();
  inline void set_has_quest_type();
  inline void clear_has_quest_type();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_cur_value();
  inline void clear_has_cur_value();
  inline void set_has_is_finished();
  inline void clear_has_is_finished();
  inline void set_has_is_take_reward();
  inline void clear_has_is_take_reward();
  inline void set_has_operate_type();
  inline void clear_has_operate_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 quest_id_;
  ::google::protobuf::uint32 quest_type_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 cur_value_;
  ::google::protobuf::uint32 is_finished_;
  ::google::protobuf::uint32 is_take_reward_;
  ::google::protobuf::uint32 operate_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Grow_Up_Quest_Info* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_Grow_Up_Quest_Group_Info : public ::google::protobuf::Message {
 public:
  GxDB_Grow_Up_Quest_Group_Info();
  virtual ~GxDB_Grow_Up_Quest_Group_Info();

  GxDB_Grow_Up_Quest_Group_Info(const GxDB_Grow_Up_Quest_Group_Info& from);

  inline GxDB_Grow_Up_Quest_Group_Info& operator=(const GxDB_Grow_Up_Quest_Group_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Grow_Up_Quest_Group_Info& default_instance();

  void Swap(GxDB_Grow_Up_Quest_Group_Info* other);

  // implements Message ----------------------------------------------

  GxDB_Grow_Up_Quest_Group_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Grow_Up_Quest_Group_Info& from);
  void MergeFrom(const GxDB_Grow_Up_Quest_Group_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // required uint32 group_is_finished = 2;
  inline bool has_group_is_finished() const;
  inline void clear_group_is_finished();
  static const int kGroupIsFinishedFieldNumber = 2;
  inline ::google::protobuf::uint32 group_is_finished() const;
  inline void set_group_is_finished(::google::protobuf::uint32 value);

  // optional uint32 is_take_group_reward = 3;
  inline bool has_is_take_group_reward() const;
  inline void clear_is_take_group_reward();
  static const int kIsTakeGroupRewardFieldNumber = 3;
  inline ::google::protobuf::uint32 is_take_group_reward() const;
  inline void set_is_take_group_reward(::google::protobuf::uint32 value);

  // optional uint32 operate_type = 4;
  inline bool has_operate_type() const;
  inline void clear_operate_type();
  static const int kOperateTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 operate_type() const;
  inline void set_operate_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GxDB_Grow_Up_Quest_Group_Info)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_is_finished();
  inline void clear_has_group_is_finished();
  inline void set_has_is_take_group_reward();
  inline void clear_has_is_take_group_reward();
  inline void set_has_operate_type();
  inline void clear_has_operate_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 group_is_finished_;
  ::google::protobuf::uint32 is_take_group_reward_;
  ::google::protobuf::uint32 operate_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Grow_Up_Quest_Group_Info* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_Grow_Up_Quest : public ::google::protobuf::Message {
 public:
  GxDB_Grow_Up_Quest();
  virtual ~GxDB_Grow_Up_Quest();

  GxDB_Grow_Up_Quest(const GxDB_Grow_Up_Quest& from);

  inline GxDB_Grow_Up_Quest& operator=(const GxDB_Grow_Up_Quest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Grow_Up_Quest& default_instance();

  void Swap(GxDB_Grow_Up_Quest* other);

  // implements Message ----------------------------------------------

  GxDB_Grow_Up_Quest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Grow_Up_Quest& from);
  void MergeFrom(const GxDB_Grow_Up_Quest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.GxDB_Grow_Up_Quest_Info quest_info = 1;
  inline int quest_info_size() const;
  inline void clear_quest_info();
  static const int kQuestInfoFieldNumber = 1;
  inline const ::pb::GxDB_Grow_Up_Quest_Info& quest_info(int index) const;
  inline ::pb::GxDB_Grow_Up_Quest_Info* mutable_quest_info(int index);
  inline ::pb::GxDB_Grow_Up_Quest_Info* add_quest_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Grow_Up_Quest_Info >&
      quest_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Grow_Up_Quest_Info >*
      mutable_quest_info();

  // @@protoc_insertion_point(class_scope:pb.GxDB_Grow_Up_Quest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Grow_Up_Quest_Info > quest_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Grow_Up_Quest* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_Grow_Up_Quest_Group : public ::google::protobuf::Message {
 public:
  GxDB_Grow_Up_Quest_Group();
  virtual ~GxDB_Grow_Up_Quest_Group();

  GxDB_Grow_Up_Quest_Group(const GxDB_Grow_Up_Quest_Group& from);

  inline GxDB_Grow_Up_Quest_Group& operator=(const GxDB_Grow_Up_Quest_Group& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Grow_Up_Quest_Group& default_instance();

  void Swap(GxDB_Grow_Up_Quest_Group* other);

  // implements Message ----------------------------------------------

  GxDB_Grow_Up_Quest_Group* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Grow_Up_Quest_Group& from);
  void MergeFrom(const GxDB_Grow_Up_Quest_Group& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.GxDB_Grow_Up_Quest_Group_Info group_info = 1;
  inline int group_info_size() const;
  inline void clear_group_info();
  static const int kGroupInfoFieldNumber = 1;
  inline const ::pb::GxDB_Grow_Up_Quest_Group_Info& group_info(int index) const;
  inline ::pb::GxDB_Grow_Up_Quest_Group_Info* mutable_group_info(int index);
  inline ::pb::GxDB_Grow_Up_Quest_Group_Info* add_group_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Grow_Up_Quest_Group_Info >&
      group_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Grow_Up_Quest_Group_Info >*
      mutable_group_info();

  // @@protoc_insertion_point(class_scope:pb.GxDB_Grow_Up_Quest_Group)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Grow_Up_Quest_Group_Info > group_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Grow_Up_Quest_Group* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_Grow_Up_Quest_Delete : public ::google::protobuf::Message {
 public:
  GxDB_Grow_Up_Quest_Delete();
  virtual ~GxDB_Grow_Up_Quest_Delete();

  GxDB_Grow_Up_Quest_Delete(const GxDB_Grow_Up_Quest_Delete& from);

  inline GxDB_Grow_Up_Quest_Delete& operator=(const GxDB_Grow_Up_Quest_Delete& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Grow_Up_Quest_Delete& default_instance();

  void Swap(GxDB_Grow_Up_Quest_Delete* other);

  // implements Message ----------------------------------------------

  GxDB_Grow_Up_Quest_Delete* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Grow_Up_Quest_Delete& from);
  void MergeFrom(const GxDB_Grow_Up_Quest_Delete& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 operate_type = 1;
  inline bool has_operate_type() const;
  inline void clear_operate_type();
  static const int kOperateTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 operate_type() const;
  inline void set_operate_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GxDB_Grow_Up_Quest_Delete)
 private:
  inline void set_has_operate_type();
  inline void clear_has_operate_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 operate_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Grow_Up_Quest_Delete* default_instance_;
};
// -------------------------------------------------------------------

class WannaBeStrongerBaseInfo : public ::google::protobuf::Message {
 public:
  WannaBeStrongerBaseInfo();
  virtual ~WannaBeStrongerBaseInfo();

  WannaBeStrongerBaseInfo(const WannaBeStrongerBaseInfo& from);

  inline WannaBeStrongerBaseInfo& operator=(const WannaBeStrongerBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WannaBeStrongerBaseInfo& default_instance();

  void Swap(WannaBeStrongerBaseInfo* other);

  // implements Message ----------------------------------------------

  WannaBeStrongerBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WannaBeStrongerBaseInfo& from);
  void MergeFrom(const WannaBeStrongerBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 quest_id = 1;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::uint32 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint32 value);

  // optional uint32 cur_value = 2;
  inline bool has_cur_value() const;
  inline void clear_cur_value();
  static const int kCurValueFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_value() const;
  inline void set_cur_value(::google::protobuf::uint32 value);

  // optional uint32 need_value1 = 3;
  inline bool has_need_value1() const;
  inline void clear_need_value1();
  static const int kNeedValue1FieldNumber = 3;
  inline ::google::protobuf::uint32 need_value1() const;
  inline void set_need_value1(::google::protobuf::uint32 value);

  // optional uint32 need_value2 = 4;
  inline bool has_need_value2() const;
  inline void clear_need_value2();
  static const int kNeedValue2FieldNumber = 4;
  inline ::google::protobuf::uint32 need_value2() const;
  inline void set_need_value2(::google::protobuf::uint32 value);

  // optional uint32 quest_type = 5;
  inline bool has_quest_type() const;
  inline void clear_quest_type();
  static const int kQuestTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 quest_type() const;
  inline void set_quest_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.WannaBeStrongerBaseInfo)
 private:
  inline void set_has_quest_id();
  inline void clear_has_quest_id();
  inline void set_has_cur_value();
  inline void clear_has_cur_value();
  inline void set_has_need_value1();
  inline void clear_has_need_value1();
  inline void set_has_need_value2();
  inline void clear_has_need_value2();
  inline void set_has_quest_type();
  inline void clear_has_quest_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 quest_id_;
  ::google::protobuf::uint32 cur_value_;
  ::google::protobuf::uint32 need_value1_;
  ::google::protobuf::uint32 need_value2_;
  ::google::protobuf::uint32 quest_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static WannaBeStrongerBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class WannaBeStrongerInfo : public ::google::protobuf::Message {
 public:
  WannaBeStrongerInfo();
  virtual ~WannaBeStrongerInfo();

  WannaBeStrongerInfo(const WannaBeStrongerInfo& from);

  inline WannaBeStrongerInfo& operator=(const WannaBeStrongerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WannaBeStrongerInfo& default_instance();

  void Swap(WannaBeStrongerInfo* other);

  // implements Message ----------------------------------------------

  WannaBeStrongerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WannaBeStrongerInfo& from);
  void MergeFrom(const WannaBeStrongerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // repeated .pb.WannaBeStrongerBaseInfo base_info = 2;
  inline int base_info_size() const;
  inline void clear_base_info();
  static const int kBaseInfoFieldNumber = 2;
  inline const ::pb::WannaBeStrongerBaseInfo& base_info(int index) const;
  inline ::pb::WannaBeStrongerBaseInfo* mutable_base_info(int index);
  inline ::pb::WannaBeStrongerBaseInfo* add_base_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerBaseInfo >&
      base_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerBaseInfo >*
      mutable_base_info();

  // optional bool is_achieve = 3;
  inline bool has_is_achieve() const;
  inline void clear_is_achieve();
  static const int kIsAchieveFieldNumber = 3;
  inline bool is_achieve() const;
  inline void set_is_achieve(bool value);

  // optional bool is_take_reward = 4;
  inline bool has_is_take_reward() const;
  inline void clear_is_take_reward();
  static const int kIsTakeRewardFieldNumber = 4;
  inline bool is_take_reward() const;
  inline void set_is_take_reward(bool value);

  // @@protoc_insertion_point(class_scope:pb.WannaBeStrongerInfo)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_is_achieve();
  inline void clear_has_is_achieve();
  inline void set_has_is_take_reward();
  inline void clear_has_is_take_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerBaseInfo > base_info_;
  ::google::protobuf::uint32 group_id_;
  bool is_achieve_;
  bool is_take_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static WannaBeStrongerInfo* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_WannaBeStrongerReward : public ::google::protobuf::Message {
 public:
  C2GS_WannaBeStrongerReward();
  virtual ~C2GS_WannaBeStrongerReward();

  C2GS_WannaBeStrongerReward(const C2GS_WannaBeStrongerReward& from);

  inline C2GS_WannaBeStrongerReward& operator=(const C2GS_WannaBeStrongerReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_WannaBeStrongerReward& default_instance();

  void Swap(C2GS_WannaBeStrongerReward* other);

  // implements Message ----------------------------------------------

  C2GS_WannaBeStrongerReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_WannaBeStrongerReward& from);
  void MergeFrom(const C2GS_WannaBeStrongerReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_WannaBeStrongerReward)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 group_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static C2GS_WannaBeStrongerReward* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_WannaBeStrongerRewardRes : public ::google::protobuf::Message {
 public:
  GS2C_WannaBeStrongerRewardRes();
  virtual ~GS2C_WannaBeStrongerRewardRes();

  GS2C_WannaBeStrongerRewardRes(const GS2C_WannaBeStrongerRewardRes& from);

  inline GS2C_WannaBeStrongerRewardRes& operator=(const GS2C_WannaBeStrongerRewardRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_WannaBeStrongerRewardRes& default_instance();

  void Swap(GS2C_WannaBeStrongerRewardRes* other);

  // implements Message ----------------------------------------------

  GS2C_WannaBeStrongerRewardRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_WannaBeStrongerRewardRes& from);
  void MergeFrom(const GS2C_WannaBeStrongerRewardRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.StReward rewards = 1;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::pb::StReward& rewards(int index) const;
  inline ::pb::StReward* mutable_rewards(int index);
  inline ::pb::StReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:pb.GS2C_WannaBeStrongerRewardRes)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::StReward > rewards_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_WannaBeStrongerRewardRes* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_WannaBeStrongerUpdate : public ::google::protobuf::Message {
 public:
  GS2C_WannaBeStrongerUpdate();
  virtual ~GS2C_WannaBeStrongerUpdate();

  GS2C_WannaBeStrongerUpdate(const GS2C_WannaBeStrongerUpdate& from);

  inline GS2C_WannaBeStrongerUpdate& operator=(const GS2C_WannaBeStrongerUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_WannaBeStrongerUpdate& default_instance();

  void Swap(GS2C_WannaBeStrongerUpdate* other);

  // implements Message ----------------------------------------------

  GS2C_WannaBeStrongerUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_WannaBeStrongerUpdate& from);
  void MergeFrom(const GS2C_WannaBeStrongerUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.WannaBeStrongerInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::WannaBeStrongerInfo& info() const;
  inline ::pb::WannaBeStrongerInfo* mutable_info();
  inline ::pb::WannaBeStrongerInfo* release_info();
  inline void set_allocated_info(::pb::WannaBeStrongerInfo* info);

  // @@protoc_insertion_point(class_scope:pb.GS2C_WannaBeStrongerUpdate)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::WannaBeStrongerInfo* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_WannaBeStrongerUpdate* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_WannaBeStrongerAllInfo : public ::google::protobuf::Message {
 public:
  GS2C_WannaBeStrongerAllInfo();
  virtual ~GS2C_WannaBeStrongerAllInfo();

  GS2C_WannaBeStrongerAllInfo(const GS2C_WannaBeStrongerAllInfo& from);

  inline GS2C_WannaBeStrongerAllInfo& operator=(const GS2C_WannaBeStrongerAllInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_WannaBeStrongerAllInfo& default_instance();

  void Swap(GS2C_WannaBeStrongerAllInfo* other);

  // implements Message ----------------------------------------------

  GS2C_WannaBeStrongerAllInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_WannaBeStrongerAllInfo& from);
  void MergeFrom(const GS2C_WannaBeStrongerAllInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.WannaBeStrongerInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::WannaBeStrongerInfo& info(int index) const;
  inline ::pb::WannaBeStrongerInfo* mutable_info(int index);
  inline ::pb::WannaBeStrongerInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:pb.GS2C_WannaBeStrongerAllInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerInfo > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_WannaBeStrongerAllInfo* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_WannaBeStrongerInfoAllInfo : public ::google::protobuf::Message {
 public:
  GxDB_WannaBeStrongerInfoAllInfo();
  virtual ~GxDB_WannaBeStrongerInfoAllInfo();

  GxDB_WannaBeStrongerInfoAllInfo(const GxDB_WannaBeStrongerInfoAllInfo& from);

  inline GxDB_WannaBeStrongerInfoAllInfo& operator=(const GxDB_WannaBeStrongerInfoAllInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_WannaBeStrongerInfoAllInfo& default_instance();

  void Swap(GxDB_WannaBeStrongerInfoAllInfo* other);

  // implements Message ----------------------------------------------

  GxDB_WannaBeStrongerInfoAllInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_WannaBeStrongerInfoAllInfo& from);
  void MergeFrom(const GxDB_WannaBeStrongerInfoAllInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.WannaBeStrongerInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::WannaBeStrongerInfo& info(int index) const;
  inline ::pb::WannaBeStrongerInfo* mutable_info(int index);
  inline ::pb::WannaBeStrongerInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:pb.GxDB_WannaBeStrongerInfoAllInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerInfo > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_WannaBeStrongerInfoAllInfo* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Sign_Res : public ::google::protobuf::Message {
 public:
  GS2C_Sign_Res();
  virtual ~GS2C_Sign_Res();

  GS2C_Sign_Res(const GS2C_Sign_Res& from);

  inline GS2C_Sign_Res& operator=(const GS2C_Sign_Res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Sign_Res& default_instance();

  void Swap(GS2C_Sign_Res* other);

  // implements Message ----------------------------------------------

  GS2C_Sign_Res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Sign_Res& from);
  void MergeFrom(const GS2C_Sign_Res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.SignResult ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::pb::SignResult ret() const;
  inline void set_ret(::pb::SignResult value);

  // repeated .pb.StReward rewards = 2;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 2;
  inline const ::pb::StReward& rewards(int index) const;
  inline ::pb::StReward* mutable_rewards(int index);
  inline ::pb::StReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Sign_Res)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::StReward > rewards_;
  int ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Sign_Res* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Take_Extra_Reward : public ::google::protobuf::Message {
 public:
  C2GS_Take_Extra_Reward();
  virtual ~C2GS_Take_Extra_Reward();

  C2GS_Take_Extra_Reward(const C2GS_Take_Extra_Reward& from);

  inline C2GS_Take_Extra_Reward& operator=(const C2GS_Take_Extra_Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Take_Extra_Reward& default_instance();

  void Swap(C2GS_Take_Extra_Reward* other);

  // implements Message ----------------------------------------------

  C2GS_Take_Extra_Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Take_Extra_Reward& from);
  void MergeFrom(const C2GS_Take_Extra_Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Take_Extra_Reward)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 day_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Take_Extra_Reward* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Take_Extra_Reward_res : public ::google::protobuf::Message {
 public:
  GS2C_Take_Extra_Reward_res();
  virtual ~GS2C_Take_Extra_Reward_res();

  GS2C_Take_Extra_Reward_res(const GS2C_Take_Extra_Reward_res& from);

  inline GS2C_Take_Extra_Reward_res& operator=(const GS2C_Take_Extra_Reward_res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Take_Extra_Reward_res& default_instance();

  void Swap(GS2C_Take_Extra_Reward_res* other);

  // implements Message ----------------------------------------------

  GS2C_Take_Extra_Reward_res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Take_Extra_Reward_res& from);
  void MergeFrom(const GS2C_Take_Extra_Reward_res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.ExtraRewardResult ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::pb::ExtraRewardResult ret() const;
  inline void set_ret(::pb::ExtraRewardResult value);

  // repeated .pb.StReward rewards = 2;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 2;
  inline const ::pb::StReward& rewards(int index) const;
  inline ::pb::StReward* mutable_rewards(int index);
  inline ::pb::StReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Take_Extra_Reward_res)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::StReward > rewards_;
  int ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Take_Extra_Reward_res* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Update_date : public ::google::protobuf::Message {
 public:
  GS2C_Update_date();
  virtual ~GS2C_Update_date();

  GS2C_Update_date(const GS2C_Update_date& from);

  inline GS2C_Update_date& operator=(const GS2C_Update_date& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Update_date& default_instance();

  void Swap(GS2C_Update_date* other);

  // implements Message ----------------------------------------------

  GS2C_Update_date* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Update_date& from);
  void MergeFrom(const GS2C_Update_date& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // required uint32 is_signed = 2;
  inline bool has_is_signed() const;
  inline void clear_is_signed();
  static const int kIsSignedFieldNumber = 2;
  inline ::google::protobuf::uint32 is_signed() const;
  inline void set_is_signed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Update_date)
 private:
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_is_signed();
  inline void clear_has_is_signed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 day_;
  ::google::protobuf::uint32 is_signed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Update_date* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_Sign_info : public ::google::protobuf::Message {
 public:
  GxDB_Sign_info();
  virtual ~GxDB_Sign_info();

  GxDB_Sign_info(const GxDB_Sign_info& from);

  inline GxDB_Sign_info& operator=(const GxDB_Sign_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Sign_info& default_instance();

  void Swap(GxDB_Sign_info* other);

  // implements Message ----------------------------------------------

  GxDB_Sign_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Sign_info& from);
  void MergeFrom(const GxDB_Sign_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dayth = 1;
  inline bool has_dayth() const;
  inline void clear_dayth();
  static const int kDaythFieldNumber = 1;
  inline ::google::protobuf::uint32 dayth() const;
  inline void set_dayth(::google::protobuf::uint32 value);

  // required uint32 IsSigned = 2;
  inline bool has_issigned() const;
  inline void clear_issigned();
  static const int kIsSignedFieldNumber = 2;
  inline ::google::protobuf::uint32 issigned() const;
  inline void set_issigned(::google::protobuf::uint32 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GxDB_Sign_info)
 private:
  inline void set_has_dayth();
  inline void clear_has_dayth();
  inline void set_has_issigned();
  inline void clear_has_issigned();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dayth_;
  ::google::protobuf::uint32 issigned_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Sign_info* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_Sign_Up : public ::google::protobuf::Message {
 public:
  GxDB_Sign_Up();
  virtual ~GxDB_Sign_Up();

  GxDB_Sign_Up(const GxDB_Sign_Up& from);

  inline GxDB_Sign_Up& operator=(const GxDB_Sign_Up& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Sign_Up& default_instance();

  void Swap(GxDB_Sign_Up* other);

  // implements Message ----------------------------------------------

  GxDB_Sign_Up* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Sign_Up& from);
  void MergeFrom(const GxDB_Sign_Up& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.GxDB_Sign_info info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::pb::GxDB_Sign_info& info(int index) const;
  inline ::pb::GxDB_Sign_info* mutable_info(int index);
  inline ::pb::GxDB_Sign_info* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Sign_info >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Sign_info >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:pb.GxDB_Sign_Up)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Sign_info > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Sign_Up* default_instance_;
};
// -------------------------------------------------------------------

class pass_stage_reward_info : public ::google::protobuf::Message {
 public:
  pass_stage_reward_info();
  virtual ~pass_stage_reward_info();

  pass_stage_reward_info(const pass_stage_reward_info& from);

  inline pass_stage_reward_info& operator=(const pass_stage_reward_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pass_stage_reward_info& default_instance();

  void Swap(pass_stage_reward_info* other);

  // implements Message ----------------------------------------------

  pass_stage_reward_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pass_stage_reward_info& from);
  void MergeFrom(const pass_stage_reward_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 is_take_reward = 2;
  inline bool has_is_take_reward() const;
  inline void clear_is_take_reward();
  static const int kIsTakeRewardFieldNumber = 2;
  inline ::google::protobuf::uint32 is_take_reward() const;
  inline void set_is_take_reward(::google::protobuf::uint32 value);

  // required uint32 stage_level = 3;
  inline bool has_stage_level() const;
  inline void clear_stage_level();
  static const int kStageLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 stage_level() const;
  inline void set_stage_level(::google::protobuf::uint32 value);

  // required uint32 stage_is_passed = 4;
  inline bool has_stage_is_passed() const;
  inline void clear_stage_is_passed();
  static const int kStageIsPassedFieldNumber = 4;
  inline ::google::protobuf::uint32 stage_is_passed() const;
  inline void set_stage_is_passed(::google::protobuf::uint32 value);

  // optional uint32 operate_type = 5;
  inline bool has_operate_type() const;
  inline void clear_operate_type();
  static const int kOperateTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 operate_type() const;
  inline void set_operate_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.pass_stage_reward_info)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_is_take_reward();
  inline void clear_has_is_take_reward();
  inline void set_has_stage_level();
  inline void clear_has_stage_level();
  inline void set_has_stage_is_passed();
  inline void clear_has_stage_is_passed();
  inline void set_has_operate_type();
  inline void clear_has_operate_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 is_take_reward_;
  ::google::protobuf::uint32 stage_level_;
  ::google::protobuf::uint32 stage_is_passed_;
  ::google::protobuf::uint32 operate_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static pass_stage_reward_info* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Pass_Stage_Reward_All_Info : public ::google::protobuf::Message {
 public:
  GS2C_Pass_Stage_Reward_All_Info();
  virtual ~GS2C_Pass_Stage_Reward_All_Info();

  GS2C_Pass_Stage_Reward_All_Info(const GS2C_Pass_Stage_Reward_All_Info& from);

  inline GS2C_Pass_Stage_Reward_All_Info& operator=(const GS2C_Pass_Stage_Reward_All_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Pass_Stage_Reward_All_Info& default_instance();

  void Swap(GS2C_Pass_Stage_Reward_All_Info* other);

  // implements Message ----------------------------------------------

  GS2C_Pass_Stage_Reward_All_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Pass_Stage_Reward_All_Info& from);
  void MergeFrom(const GS2C_Pass_Stage_Reward_All_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.pass_stage_reward_info pass_stage_info = 1;
  inline int pass_stage_info_size() const;
  inline void clear_pass_stage_info();
  static const int kPassStageInfoFieldNumber = 1;
  inline const ::pb::pass_stage_reward_info& pass_stage_info(int index) const;
  inline ::pb::pass_stage_reward_info* mutable_pass_stage_info(int index);
  inline ::pb::pass_stage_reward_info* add_pass_stage_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::pass_stage_reward_info >&
      pass_stage_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::pass_stage_reward_info >*
      mutable_pass_stage_info();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Pass_Stage_Reward_All_Info)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::pass_stage_reward_info > pass_stage_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Pass_Stage_Reward_All_Info* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Pass_Stage_Reward : public ::google::protobuf::Message {
 public:
  C2GS_Pass_Stage_Reward();
  virtual ~C2GS_Pass_Stage_Reward();

  C2GS_Pass_Stage_Reward(const C2GS_Pass_Stage_Reward& from);

  inline C2GS_Pass_Stage_Reward& operator=(const C2GS_Pass_Stage_Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Pass_Stage_Reward& default_instance();

  void Swap(C2GS_Pass_Stage_Reward* other);

  // implements Message ----------------------------------------------

  C2GS_Pass_Stage_Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Pass_Stage_Reward& from);
  void MergeFrom(const C2GS_Pass_Stage_Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Pass_Stage_Reward)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Pass_Stage_Reward* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Pass_Stage_Reward_Res : public ::google::protobuf::Message {
 public:
  GS2C_Pass_Stage_Reward_Res();
  virtual ~GS2C_Pass_Stage_Reward_Res();

  GS2C_Pass_Stage_Reward_Res(const GS2C_Pass_Stage_Reward_Res& from);

  inline GS2C_Pass_Stage_Reward_Res& operator=(const GS2C_Pass_Stage_Reward_Res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Pass_Stage_Reward_Res& default_instance();

  void Swap(GS2C_Pass_Stage_Reward_Res* other);

  // implements Message ----------------------------------------------

  GS2C_Pass_Stage_Reward_Res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Pass_Stage_Reward_Res& from);
  void MergeFrom(const GS2C_Pass_Stage_Reward_Res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.StReward rewards = 1;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::pb::StReward& rewards() const;
  inline ::pb::StReward* mutable_rewards();
  inline ::pb::StReward* release_rewards();
  inline void set_allocated_rewards(::pb::StReward* rewards);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Pass_Stage_Reward_Res)
 private:
  inline void set_has_rewards();
  inline void clear_has_rewards();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::pb::StReward* rewards_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Pass_Stage_Reward_Res* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_Pass_Stage_Reward : public ::google::protobuf::Message {
 public:
  GxDB_Pass_Stage_Reward();
  virtual ~GxDB_Pass_Stage_Reward();

  GxDB_Pass_Stage_Reward(const GxDB_Pass_Stage_Reward& from);

  inline GxDB_Pass_Stage_Reward& operator=(const GxDB_Pass_Stage_Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Pass_Stage_Reward& default_instance();

  void Swap(GxDB_Pass_Stage_Reward* other);

  // implements Message ----------------------------------------------

  GxDB_Pass_Stage_Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Pass_Stage_Reward& from);
  void MergeFrom(const GxDB_Pass_Stage_Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.pass_stage_reward_info pass_stage_info = 1;
  inline int pass_stage_info_size() const;
  inline void clear_pass_stage_info();
  static const int kPassStageInfoFieldNumber = 1;
  inline const ::pb::pass_stage_reward_info& pass_stage_info(int index) const;
  inline ::pb::pass_stage_reward_info* mutable_pass_stage_info(int index);
  inline ::pb::pass_stage_reward_info* add_pass_stage_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::pass_stage_reward_info >&
      pass_stage_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::pass_stage_reward_info >*
      mutable_pass_stage_info();

  // @@protoc_insertion_point(class_scope:pb.GxDB_Pass_Stage_Reward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::pass_stage_reward_info > pass_stage_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Pass_Stage_Reward* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_Pass_Stage_Reward_Delete : public ::google::protobuf::Message {
 public:
  GxDB_Pass_Stage_Reward_Delete();
  virtual ~GxDB_Pass_Stage_Reward_Delete();

  GxDB_Pass_Stage_Reward_Delete(const GxDB_Pass_Stage_Reward_Delete& from);

  inline GxDB_Pass_Stage_Reward_Delete& operator=(const GxDB_Pass_Stage_Reward_Delete& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Pass_Stage_Reward_Delete& default_instance();

  void Swap(GxDB_Pass_Stage_Reward_Delete* other);

  // implements Message ----------------------------------------------

  GxDB_Pass_Stage_Reward_Delete* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Pass_Stage_Reward_Delete& from);
  void MergeFrom(const GxDB_Pass_Stage_Reward_Delete& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 operate_type = 1;
  inline bool has_operate_type() const;
  inline void clear_operate_type();
  static const int kOperateTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 operate_type() const;
  inline void set_operate_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GxDB_Pass_Stage_Reward_Delete)
 private:
  inline void set_has_operate_type();
  inline void clear_has_operate_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 operate_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Quest_2eproto();
  friend void protobuf_AssignDesc_Quest_2eproto();
  friend void protobuf_ShutdownFile_Quest_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Pass_Stage_Reward_Delete* default_instance_;
};
// ===================================================================


// ===================================================================

// GxDB_Quest

// optional bool is_deleted = 1;
inline bool GxDB_Quest::has_is_deleted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GxDB_Quest::set_has_is_deleted() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GxDB_Quest::clear_has_is_deleted() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GxDB_Quest::clear_is_deleted() {
  is_deleted_ = false;
  clear_has_is_deleted();
}
inline bool GxDB_Quest::is_deleted() const {
  return is_deleted_;
}
inline void GxDB_Quest::set_is_deleted(bool value) {
  set_has_is_deleted();
  is_deleted_ = value;
}

// required uint32 quest_id = 2;
inline bool GxDB_Quest::has_quest_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GxDB_Quest::set_has_quest_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GxDB_Quest::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GxDB_Quest::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 GxDB_Quest::quest_id() const {
  return quest_id_;
}
inline void GxDB_Quest::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
}

// optional int64 active_time = 4;
inline bool GxDB_Quest::has_active_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GxDB_Quest::set_has_active_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GxDB_Quest::clear_has_active_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GxDB_Quest::clear_active_time() {
  active_time_ = GOOGLE_LONGLONG(0);
  clear_has_active_time();
}
inline ::google::protobuf::int64 GxDB_Quest::active_time() const {
  return active_time_;
}
inline void GxDB_Quest::set_active_time(::google::protobuf::int64 value) {
  set_has_active_time();
  active_time_ = value;
}

// optional uint32 value = 3;
inline bool GxDB_Quest::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GxDB_Quest::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GxDB_Quest::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GxDB_Quest::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 GxDB_Quest::value() const {
  return value_;
}
inline void GxDB_Quest::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// FinishMask

// optional .pb.Uint32List finish_masks = 1;
inline bool FinishMask::has_finish_masks() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FinishMask::set_has_finish_masks() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FinishMask::clear_has_finish_masks() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FinishMask::clear_finish_masks() {
  if (finish_masks_ != NULL) finish_masks_->::pb::Uint32List::Clear();
  clear_has_finish_masks();
}
inline const ::pb::Uint32List& FinishMask::finish_masks() const {
  return finish_masks_ != NULL ? *finish_masks_ : *default_instance_->finish_masks_;
}
inline ::pb::Uint32List* FinishMask::mutable_finish_masks() {
  set_has_finish_masks();
  if (finish_masks_ == NULL) finish_masks_ = new ::pb::Uint32List;
  return finish_masks_;
}
inline ::pb::Uint32List* FinishMask::release_finish_masks() {
  clear_has_finish_masks();
  ::pb::Uint32List* temp = finish_masks_;
  finish_masks_ = NULL;
  return temp;
}
inline void FinishMask::set_allocated_finish_masks(::pb::Uint32List* finish_masks) {
  delete finish_masks_;
  finish_masks_ = finish_masks;
  if (finish_masks) {
    set_has_finish_masks();
  } else {
    clear_has_finish_masks();
  }
}

// optional uint32 count = 2;
inline bool FinishMask::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FinishMask::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FinishMask::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FinishMask::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 FinishMask::count() const {
  return count_;
}
inline void FinishMask::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// GS2C_QuestList

// repeated .pb.GxDB_Quest quests = 1;
inline int GS2C_QuestList::quests_size() const {
  return quests_.size();
}
inline void GS2C_QuestList::clear_quests() {
  quests_.Clear();
}
inline const ::pb::GxDB_Quest& GS2C_QuestList::quests(int index) const {
  return quests_.Get(index);
}
inline ::pb::GxDB_Quest* GS2C_QuestList::mutable_quests(int index) {
  return quests_.Mutable(index);
}
inline ::pb::GxDB_Quest* GS2C_QuestList::add_quests() {
  return quests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Quest >&
GS2C_QuestList::quests() const {
  return quests_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Quest >*
GS2C_QuestList::mutable_quests() {
  return &quests_;
}

// optional .pb.FinishMask finish_mask = 2;
inline bool GS2C_QuestList::has_finish_mask() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_QuestList::set_has_finish_mask() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_QuestList::clear_has_finish_mask() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_QuestList::clear_finish_mask() {
  if (finish_mask_ != NULL) finish_mask_->::pb::FinishMask::Clear();
  clear_has_finish_mask();
}
inline const ::pb::FinishMask& GS2C_QuestList::finish_mask() const {
  return finish_mask_ != NULL ? *finish_mask_ : *default_instance_->finish_mask_;
}
inline ::pb::FinishMask* GS2C_QuestList::mutable_finish_mask() {
  set_has_finish_mask();
  if (finish_mask_ == NULL) finish_mask_ = new ::pb::FinishMask;
  return finish_mask_;
}
inline ::pb::FinishMask* GS2C_QuestList::release_finish_mask() {
  clear_has_finish_mask();
  ::pb::FinishMask* temp = finish_mask_;
  finish_mask_ = NULL;
  return temp;
}
inline void GS2C_QuestList::set_allocated_finish_mask(::pb::FinishMask* finish_mask) {
  delete finish_mask_;
  finish_mask_ = finish_mask;
  if (finish_mask) {
    set_has_finish_mask();
  } else {
    clear_has_finish_mask();
  }
}

// -------------------------------------------------------------------

// GxDB_Behavior

// required uint64 behavior = 1;
inline bool GxDB_Behavior::has_behavior() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GxDB_Behavior::set_has_behavior() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GxDB_Behavior::clear_has_behavior() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GxDB_Behavior::clear_behavior() {
  behavior_ = GOOGLE_ULONGLONG(0);
  clear_has_behavior();
}
inline ::google::protobuf::uint64 GxDB_Behavior::behavior() const {
  return behavior_;
}
inline void GxDB_Behavior::set_behavior(::google::protobuf::uint64 value) {
  set_has_behavior();
  behavior_ = value;
}

// required uint32 count = 2;
inline bool GxDB_Behavior::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GxDB_Behavior::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GxDB_Behavior::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GxDB_Behavior::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GxDB_Behavior::count() const {
  return count_;
}
inline void GxDB_Behavior::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// required int64 last_trigger_time = 3;
inline bool GxDB_Behavior::has_last_trigger_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GxDB_Behavior::set_has_last_trigger_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GxDB_Behavior::clear_has_last_trigger_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GxDB_Behavior::clear_last_trigger_time() {
  last_trigger_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_trigger_time();
}
inline ::google::protobuf::int64 GxDB_Behavior::last_trigger_time() const {
  return last_trigger_time_;
}
inline void GxDB_Behavior::set_last_trigger_time(::google::protobuf::int64 value) {
  set_has_last_trigger_time();
  last_trigger_time_ = value;
}

// -------------------------------------------------------------------

// GxDB_BehaviorList

// repeated .pb.GxDB_Behavior behavior_list = 1;
inline int GxDB_BehaviorList::behavior_list_size() const {
  return behavior_list_.size();
}
inline void GxDB_BehaviorList::clear_behavior_list() {
  behavior_list_.Clear();
}
inline const ::pb::GxDB_Behavior& GxDB_BehaviorList::behavior_list(int index) const {
  return behavior_list_.Get(index);
}
inline ::pb::GxDB_Behavior* GxDB_BehaviorList::mutable_behavior_list(int index) {
  return behavior_list_.Mutable(index);
}
inline ::pb::GxDB_Behavior* GxDB_BehaviorList::add_behavior_list() {
  return behavior_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Behavior >&
GxDB_BehaviorList::behavior_list() const {
  return behavior_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Behavior >*
GxDB_BehaviorList::mutable_behavior_list() {
  return &behavior_list_;
}

// -------------------------------------------------------------------

// Daily_Quest_Info

// required uint32 quest_id = 1;
inline bool Daily_Quest_Info::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Daily_Quest_Info::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Daily_Quest_Info::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Daily_Quest_Info::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 Daily_Quest_Info::quest_id() const {
  return quest_id_;
}
inline void Daily_Quest_Info::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
}

// required uint32 finish_times = 2;
inline bool Daily_Quest_Info::has_finish_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Daily_Quest_Info::set_has_finish_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Daily_Quest_Info::clear_has_finish_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Daily_Quest_Info::clear_finish_times() {
  finish_times_ = 0u;
  clear_has_finish_times();
}
inline ::google::protobuf::uint32 Daily_Quest_Info::finish_times() const {
  return finish_times_;
}
inline void Daily_Quest_Info::set_finish_times(::google::protobuf::uint32 value) {
  set_has_finish_times();
  finish_times_ = value;
}

// required uint32 need_finish_times = 3;
inline bool Daily_Quest_Info::has_need_finish_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Daily_Quest_Info::set_has_need_finish_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Daily_Quest_Info::clear_has_need_finish_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Daily_Quest_Info::clear_need_finish_times() {
  need_finish_times_ = 0u;
  clear_has_need_finish_times();
}
inline ::google::protobuf::uint32 Daily_Quest_Info::need_finish_times() const {
  return need_finish_times_;
}
inline void Daily_Quest_Info::set_need_finish_times(::google::protobuf::uint32 value) {
  set_has_need_finish_times();
  need_finish_times_ = value;
}

// required uint32 score = 4;
inline bool Daily_Quest_Info::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Daily_Quest_Info::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Daily_Quest_Info::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Daily_Quest_Info::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 Daily_Quest_Info::score() const {
  return score_;
}
inline void Daily_Quest_Info::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// GS2C_Daily_Quest_All_Info

// repeated .pb.Daily_Quest_Info quest_info = 1;
inline int GS2C_Daily_Quest_All_Info::quest_info_size() const {
  return quest_info_.size();
}
inline void GS2C_Daily_Quest_All_Info::clear_quest_info() {
  quest_info_.Clear();
}
inline const ::pb::Daily_Quest_Info& GS2C_Daily_Quest_All_Info::quest_info(int index) const {
  return quest_info_.Get(index);
}
inline ::pb::Daily_Quest_Info* GS2C_Daily_Quest_All_Info::mutable_quest_info(int index) {
  return quest_info_.Mutable(index);
}
inline ::pb::Daily_Quest_Info* GS2C_Daily_Quest_All_Info::add_quest_info() {
  return quest_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Daily_Quest_Info >&
GS2C_Daily_Quest_All_Info::quest_info() const {
  return quest_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Daily_Quest_Info >*
GS2C_Daily_Quest_All_Info::mutable_quest_info() {
  return &quest_info_;
}

// -------------------------------------------------------------------

// C2GS_Daily_Quest_Reward

// required uint32 reward_id = 1;
inline bool C2GS_Daily_Quest_Reward::has_reward_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Daily_Quest_Reward::set_has_reward_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Daily_Quest_Reward::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Daily_Quest_Reward::clear_reward_id() {
  reward_id_ = 0u;
  clear_has_reward_id();
}
inline ::google::protobuf::uint32 C2GS_Daily_Quest_Reward::reward_id() const {
  return reward_id_;
}
inline void C2GS_Daily_Quest_Reward::set_reward_id(::google::protobuf::uint32 value) {
  set_has_reward_id();
  reward_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Daily_Quest_Update

// required .pb.Daily_Quest_Info quest_info = 1;
inline bool GS2C_Daily_Quest_Update::has_quest_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Daily_Quest_Update::set_has_quest_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Daily_Quest_Update::clear_has_quest_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Daily_Quest_Update::clear_quest_info() {
  if (quest_info_ != NULL) quest_info_->::pb::Daily_Quest_Info::Clear();
  clear_has_quest_info();
}
inline const ::pb::Daily_Quest_Info& GS2C_Daily_Quest_Update::quest_info() const {
  return quest_info_ != NULL ? *quest_info_ : *default_instance_->quest_info_;
}
inline ::pb::Daily_Quest_Info* GS2C_Daily_Quest_Update::mutable_quest_info() {
  set_has_quest_info();
  if (quest_info_ == NULL) quest_info_ = new ::pb::Daily_Quest_Info;
  return quest_info_;
}
inline ::pb::Daily_Quest_Info* GS2C_Daily_Quest_Update::release_quest_info() {
  clear_has_quest_info();
  ::pb::Daily_Quest_Info* temp = quest_info_;
  quest_info_ = NULL;
  return temp;
}
inline void GS2C_Daily_Quest_Update::set_allocated_quest_info(::pb::Daily_Quest_Info* quest_info) {
  delete quest_info_;
  quest_info_ = quest_info;
  if (quest_info) {
    set_has_quest_info();
  } else {
    clear_has_quest_info();
  }
}

// -------------------------------------------------------------------

// GS2C_Daily_Quest_Reward_Res

// repeated .pb.StReward rewards = 1;
inline int GS2C_Daily_Quest_Reward_Res::rewards_size() const {
  return rewards_.size();
}
inline void GS2C_Daily_Quest_Reward_Res::clear_rewards() {
  rewards_.Clear();
}
inline const ::pb::StReward& GS2C_Daily_Quest_Reward_Res::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::pb::StReward* GS2C_Daily_Quest_Reward_Res::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::pb::StReward* GS2C_Daily_Quest_Reward_Res::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
GS2C_Daily_Quest_Reward_Res::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
GS2C_Daily_Quest_Reward_Res::mutable_rewards() {
  return &rewards_;
}

// -------------------------------------------------------------------

// GxDB_Daily_Quest_Info

// required uint32 quest_id = 1;
inline bool GxDB_Daily_Quest_Info::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GxDB_Daily_Quest_Info::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GxDB_Daily_Quest_Info::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GxDB_Daily_Quest_Info::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 GxDB_Daily_Quest_Info::quest_id() const {
  return quest_id_;
}
inline void GxDB_Daily_Quest_Info::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
}

// required uint32 finished_times = 2;
inline bool GxDB_Daily_Quest_Info::has_finished_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GxDB_Daily_Quest_Info::set_has_finished_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GxDB_Daily_Quest_Info::clear_has_finished_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GxDB_Daily_Quest_Info::clear_finished_times() {
  finished_times_ = 0u;
  clear_has_finished_times();
}
inline ::google::protobuf::uint32 GxDB_Daily_Quest_Info::finished_times() const {
  return finished_times_;
}
inline void GxDB_Daily_Quest_Info::set_finished_times(::google::protobuf::uint32 value) {
  set_has_finished_times();
  finished_times_ = value;
}

// required uint32 is_finished = 3;
inline bool GxDB_Daily_Quest_Info::has_is_finished() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GxDB_Daily_Quest_Info::set_has_is_finished() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GxDB_Daily_Quest_Info::clear_has_is_finished() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GxDB_Daily_Quest_Info::clear_is_finished() {
  is_finished_ = 0u;
  clear_has_is_finished();
}
inline ::google::protobuf::uint32 GxDB_Daily_Quest_Info::is_finished() const {
  return is_finished_;
}
inline void GxDB_Daily_Quest_Info::set_is_finished(::google::protobuf::uint32 value) {
  set_has_is_finished();
  is_finished_ = value;
}

// -------------------------------------------------------------------

// GxDB_Daily_Quest

// repeated .pb.GxDB_Daily_Quest_Info quest_info = 1;
inline int GxDB_Daily_Quest::quest_info_size() const {
  return quest_info_.size();
}
inline void GxDB_Daily_Quest::clear_quest_info() {
  quest_info_.Clear();
}
inline const ::pb::GxDB_Daily_Quest_Info& GxDB_Daily_Quest::quest_info(int index) const {
  return quest_info_.Get(index);
}
inline ::pb::GxDB_Daily_Quest_Info* GxDB_Daily_Quest::mutable_quest_info(int index) {
  return quest_info_.Mutable(index);
}
inline ::pb::GxDB_Daily_Quest_Info* GxDB_Daily_Quest::add_quest_info() {
  return quest_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Daily_Quest_Info >&
GxDB_Daily_Quest::quest_info() const {
  return quest_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Daily_Quest_Info >*
GxDB_Daily_Quest::mutable_quest_info() {
  return &quest_info_;
}

// -------------------------------------------------------------------

// Grow_Up_Quest_Info

// required uint32 group_id = 1;
inline bool Grow_Up_Quest_Info::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Grow_Up_Quest_Info::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Grow_Up_Quest_Info::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Grow_Up_Quest_Info::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 Grow_Up_Quest_Info::group_id() const {
  return group_id_;
}
inline void Grow_Up_Quest_Info::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
}

// required uint32 quest_type = 2;
inline bool Grow_Up_Quest_Info::has_quest_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Grow_Up_Quest_Info::set_has_quest_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Grow_Up_Quest_Info::clear_has_quest_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Grow_Up_Quest_Info::clear_quest_type() {
  quest_type_ = 0u;
  clear_has_quest_type();
}
inline ::google::protobuf::uint32 Grow_Up_Quest_Info::quest_type() const {
  return quest_type_;
}
inline void Grow_Up_Quest_Info::set_quest_type(::google::protobuf::uint32 value) {
  set_has_quest_type();
  quest_type_ = value;
}

// required uint32 quest_id = 3;
inline bool Grow_Up_Quest_Info::has_quest_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Grow_Up_Quest_Info::set_has_quest_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Grow_Up_Quest_Info::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Grow_Up_Quest_Info::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 Grow_Up_Quest_Info::quest_id() const {
  return quest_id_;
}
inline void Grow_Up_Quest_Info::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
}

// required uint32 cur_value = 4;
inline bool Grow_Up_Quest_Info::has_cur_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Grow_Up_Quest_Info::set_has_cur_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Grow_Up_Quest_Info::clear_has_cur_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Grow_Up_Quest_Info::clear_cur_value() {
  cur_value_ = 0u;
  clear_has_cur_value();
}
inline ::google::protobuf::uint32 Grow_Up_Quest_Info::cur_value() const {
  return cur_value_;
}
inline void Grow_Up_Quest_Info::set_cur_value(::google::protobuf::uint32 value) {
  set_has_cur_value();
  cur_value_ = value;
}

// required uint32 need_value = 5;
inline bool Grow_Up_Quest_Info::has_need_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Grow_Up_Quest_Info::set_has_need_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Grow_Up_Quest_Info::clear_has_need_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Grow_Up_Quest_Info::clear_need_value() {
  need_value_ = 0u;
  clear_has_need_value();
}
inline ::google::protobuf::uint32 Grow_Up_Quest_Info::need_value() const {
  return need_value_;
}
inline void Grow_Up_Quest_Info::set_need_value(::google::protobuf::uint32 value) {
  set_has_need_value();
  need_value_ = value;
}

// required uint32 is_finished = 6;
inline bool Grow_Up_Quest_Info::has_is_finished() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Grow_Up_Quest_Info::set_has_is_finished() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Grow_Up_Quest_Info::clear_has_is_finished() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Grow_Up_Quest_Info::clear_is_finished() {
  is_finished_ = 0u;
  clear_has_is_finished();
}
inline ::google::protobuf::uint32 Grow_Up_Quest_Info::is_finished() const {
  return is_finished_;
}
inline void Grow_Up_Quest_Info::set_is_finished(::google::protobuf::uint32 value) {
  set_has_is_finished();
  is_finished_ = value;
}

// optional uint32 is_take_reward = 7;
inline bool Grow_Up_Quest_Info::has_is_take_reward() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Grow_Up_Quest_Info::set_has_is_take_reward() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Grow_Up_Quest_Info::clear_has_is_take_reward() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Grow_Up_Quest_Info::clear_is_take_reward() {
  is_take_reward_ = 0u;
  clear_has_is_take_reward();
}
inline ::google::protobuf::uint32 Grow_Up_Quest_Info::is_take_reward() const {
  return is_take_reward_;
}
inline void Grow_Up_Quest_Info::set_is_take_reward(::google::protobuf::uint32 value) {
  set_has_is_take_reward();
  is_take_reward_ = value;
}

// -------------------------------------------------------------------

// Group_Up_Group_Info

// required uint32 group_id = 1;
inline bool Group_Up_Group_Info::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Group_Up_Group_Info::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Group_Up_Group_Info::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Group_Up_Group_Info::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 Group_Up_Group_Info::group_id() const {
  return group_id_;
}
inline void Group_Up_Group_Info::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
}

// required uint32 is_finished = 2;
inline bool Group_Up_Group_Info::has_is_finished() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Group_Up_Group_Info::set_has_is_finished() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Group_Up_Group_Info::clear_has_is_finished() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Group_Up_Group_Info::clear_is_finished() {
  is_finished_ = 0u;
  clear_has_is_finished();
}
inline ::google::protobuf::uint32 Group_Up_Group_Info::is_finished() const {
  return is_finished_;
}
inline void Group_Up_Group_Info::set_is_finished(::google::protobuf::uint32 value) {
  set_has_is_finished();
  is_finished_ = value;
}

// optional uint32 is_take_group_reward = 3;
inline bool Group_Up_Group_Info::has_is_take_group_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Group_Up_Group_Info::set_has_is_take_group_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Group_Up_Group_Info::clear_has_is_take_group_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Group_Up_Group_Info::clear_is_take_group_reward() {
  is_take_group_reward_ = 0u;
  clear_has_is_take_group_reward();
}
inline ::google::protobuf::uint32 Group_Up_Group_Info::is_take_group_reward() const {
  return is_take_group_reward_;
}
inline void Group_Up_Group_Info::set_is_take_group_reward(::google::protobuf::uint32 value) {
  set_has_is_take_group_reward();
  is_take_group_reward_ = value;
}

// -------------------------------------------------------------------

// GS2C_Grow_Up_Quest_All_Info

// repeated .pb.Grow_Up_Quest_Info grow_up_info = 1;
inline int GS2C_Grow_Up_Quest_All_Info::grow_up_info_size() const {
  return grow_up_info_.size();
}
inline void GS2C_Grow_Up_Quest_All_Info::clear_grow_up_info() {
  grow_up_info_.Clear();
}
inline const ::pb::Grow_Up_Quest_Info& GS2C_Grow_Up_Quest_All_Info::grow_up_info(int index) const {
  return grow_up_info_.Get(index);
}
inline ::pb::Grow_Up_Quest_Info* GS2C_Grow_Up_Quest_All_Info::mutable_grow_up_info(int index) {
  return grow_up_info_.Mutable(index);
}
inline ::pb::Grow_Up_Quest_Info* GS2C_Grow_Up_Quest_All_Info::add_grow_up_info() {
  return grow_up_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Grow_Up_Quest_Info >&
GS2C_Grow_Up_Quest_All_Info::grow_up_info() const {
  return grow_up_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Grow_Up_Quest_Info >*
GS2C_Grow_Up_Quest_All_Info::mutable_grow_up_info() {
  return &grow_up_info_;
}

// repeated .pb.Group_Up_Group_Info group_info = 2;
inline int GS2C_Grow_Up_Quest_All_Info::group_info_size() const {
  return group_info_.size();
}
inline void GS2C_Grow_Up_Quest_All_Info::clear_group_info() {
  group_info_.Clear();
}
inline const ::pb::Group_Up_Group_Info& GS2C_Grow_Up_Quest_All_Info::group_info(int index) const {
  return group_info_.Get(index);
}
inline ::pb::Group_Up_Group_Info* GS2C_Grow_Up_Quest_All_Info::mutable_group_info(int index) {
  return group_info_.Mutable(index);
}
inline ::pb::Group_Up_Group_Info* GS2C_Grow_Up_Quest_All_Info::add_group_info() {
  return group_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Group_Up_Group_Info >&
GS2C_Grow_Up_Quest_All_Info::group_info() const {
  return group_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Group_Up_Group_Info >*
GS2C_Grow_Up_Quest_All_Info::mutable_group_info() {
  return &group_info_;
}

// -------------------------------------------------------------------

// C2GS_Grow_Up_Quest_Reward

// required .pb.GrowUpRewardType type = 1;
inline bool C2GS_Grow_Up_Quest_Reward::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Grow_Up_Quest_Reward::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Grow_Up_Quest_Reward::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Grow_Up_Quest_Reward::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::pb::GrowUpRewardType C2GS_Grow_Up_Quest_Reward::type() const {
  return static_cast< ::pb::GrowUpRewardType >(type_);
}
inline void C2GS_Grow_Up_Quest_Reward::set_type(::pb::GrowUpRewardType value) {
  assert(::pb::GrowUpRewardType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required uint32 quest_id = 2;
inline bool C2GS_Grow_Up_Quest_Reward::has_quest_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2GS_Grow_Up_Quest_Reward::set_has_quest_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2GS_Grow_Up_Quest_Reward::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2GS_Grow_Up_Quest_Reward::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 C2GS_Grow_Up_Quest_Reward::quest_id() const {
  return quest_id_;
}
inline void C2GS_Grow_Up_Quest_Reward::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Grow_Up_Quest_Reward_Res

// repeated .pb.StReward rewards = 1;
inline int GS2C_Grow_Up_Quest_Reward_Res::rewards_size() const {
  return rewards_.size();
}
inline void GS2C_Grow_Up_Quest_Reward_Res::clear_rewards() {
  rewards_.Clear();
}
inline const ::pb::StReward& GS2C_Grow_Up_Quest_Reward_Res::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::pb::StReward* GS2C_Grow_Up_Quest_Reward_Res::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::pb::StReward* GS2C_Grow_Up_Quest_Reward_Res::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
GS2C_Grow_Up_Quest_Reward_Res::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
GS2C_Grow_Up_Quest_Reward_Res::mutable_rewards() {
  return &rewards_;
}

// -------------------------------------------------------------------

// GS2C_Grow_Up_Quest_Update

// required .pb.Grow_Up_Quest_Info grow_up_info = 1;
inline bool GS2C_Grow_Up_Quest_Update::has_grow_up_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Grow_Up_Quest_Update::set_has_grow_up_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Grow_Up_Quest_Update::clear_has_grow_up_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Grow_Up_Quest_Update::clear_grow_up_info() {
  if (grow_up_info_ != NULL) grow_up_info_->::pb::Grow_Up_Quest_Info::Clear();
  clear_has_grow_up_info();
}
inline const ::pb::Grow_Up_Quest_Info& GS2C_Grow_Up_Quest_Update::grow_up_info() const {
  return grow_up_info_ != NULL ? *grow_up_info_ : *default_instance_->grow_up_info_;
}
inline ::pb::Grow_Up_Quest_Info* GS2C_Grow_Up_Quest_Update::mutable_grow_up_info() {
  set_has_grow_up_info();
  if (grow_up_info_ == NULL) grow_up_info_ = new ::pb::Grow_Up_Quest_Info;
  return grow_up_info_;
}
inline ::pb::Grow_Up_Quest_Info* GS2C_Grow_Up_Quest_Update::release_grow_up_info() {
  clear_has_grow_up_info();
  ::pb::Grow_Up_Quest_Info* temp = grow_up_info_;
  grow_up_info_ = NULL;
  return temp;
}
inline void GS2C_Grow_Up_Quest_Update::set_allocated_grow_up_info(::pb::Grow_Up_Quest_Info* grow_up_info) {
  delete grow_up_info_;
  grow_up_info_ = grow_up_info;
  if (grow_up_info) {
    set_has_grow_up_info();
  } else {
    clear_has_grow_up_info();
  }
}

// -------------------------------------------------------------------

// GS2C_Grow_Up_Quest_Group_Update

// required .pb.Group_Up_Group_Info group_info = 1;
inline bool GS2C_Grow_Up_Quest_Group_Update::has_group_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Grow_Up_Quest_Group_Update::set_has_group_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Grow_Up_Quest_Group_Update::clear_has_group_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Grow_Up_Quest_Group_Update::clear_group_info() {
  if (group_info_ != NULL) group_info_->::pb::Group_Up_Group_Info::Clear();
  clear_has_group_info();
}
inline const ::pb::Group_Up_Group_Info& GS2C_Grow_Up_Quest_Group_Update::group_info() const {
  return group_info_ != NULL ? *group_info_ : *default_instance_->group_info_;
}
inline ::pb::Group_Up_Group_Info* GS2C_Grow_Up_Quest_Group_Update::mutable_group_info() {
  set_has_group_info();
  if (group_info_ == NULL) group_info_ = new ::pb::Group_Up_Group_Info;
  return group_info_;
}
inline ::pb::Group_Up_Group_Info* GS2C_Grow_Up_Quest_Group_Update::release_group_info() {
  clear_has_group_info();
  ::pb::Group_Up_Group_Info* temp = group_info_;
  group_info_ = NULL;
  return temp;
}
inline void GS2C_Grow_Up_Quest_Group_Update::set_allocated_group_info(::pb::Group_Up_Group_Info* group_info) {
  delete group_info_;
  group_info_ = group_info;
  if (group_info) {
    set_has_group_info();
  } else {
    clear_has_group_info();
  }
}

// -------------------------------------------------------------------

// GxDB_Grow_Up_Quest_Info

// required uint32 quest_id = 1;
inline bool GxDB_Grow_Up_Quest_Info::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GxDB_Grow_Up_Quest_Info::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GxDB_Grow_Up_Quest_Info::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GxDB_Grow_Up_Quest_Info::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 GxDB_Grow_Up_Quest_Info::quest_id() const {
  return quest_id_;
}
inline void GxDB_Grow_Up_Quest_Info::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
}

// required uint32 quest_type = 2;
inline bool GxDB_Grow_Up_Quest_Info::has_quest_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GxDB_Grow_Up_Quest_Info::set_has_quest_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GxDB_Grow_Up_Quest_Info::clear_has_quest_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GxDB_Grow_Up_Quest_Info::clear_quest_type() {
  quest_type_ = 0u;
  clear_has_quest_type();
}
inline ::google::protobuf::uint32 GxDB_Grow_Up_Quest_Info::quest_type() const {
  return quest_type_;
}
inline void GxDB_Grow_Up_Quest_Info::set_quest_type(::google::protobuf::uint32 value) {
  set_has_quest_type();
  quest_type_ = value;
}

// required uint32 group_id = 3;
inline bool GxDB_Grow_Up_Quest_Info::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GxDB_Grow_Up_Quest_Info::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GxDB_Grow_Up_Quest_Info::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GxDB_Grow_Up_Quest_Info::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GxDB_Grow_Up_Quest_Info::group_id() const {
  return group_id_;
}
inline void GxDB_Grow_Up_Quest_Info::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
}

// required uint32 cur_value = 4;
inline bool GxDB_Grow_Up_Quest_Info::has_cur_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GxDB_Grow_Up_Quest_Info::set_has_cur_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GxDB_Grow_Up_Quest_Info::clear_has_cur_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GxDB_Grow_Up_Quest_Info::clear_cur_value() {
  cur_value_ = 0u;
  clear_has_cur_value();
}
inline ::google::protobuf::uint32 GxDB_Grow_Up_Quest_Info::cur_value() const {
  return cur_value_;
}
inline void GxDB_Grow_Up_Quest_Info::set_cur_value(::google::protobuf::uint32 value) {
  set_has_cur_value();
  cur_value_ = value;
}

// required uint32 is_finished = 5;
inline bool GxDB_Grow_Up_Quest_Info::has_is_finished() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GxDB_Grow_Up_Quest_Info::set_has_is_finished() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GxDB_Grow_Up_Quest_Info::clear_has_is_finished() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GxDB_Grow_Up_Quest_Info::clear_is_finished() {
  is_finished_ = 0u;
  clear_has_is_finished();
}
inline ::google::protobuf::uint32 GxDB_Grow_Up_Quest_Info::is_finished() const {
  return is_finished_;
}
inline void GxDB_Grow_Up_Quest_Info::set_is_finished(::google::protobuf::uint32 value) {
  set_has_is_finished();
  is_finished_ = value;
}

// optional uint32 is_take_reward = 6;
inline bool GxDB_Grow_Up_Quest_Info::has_is_take_reward() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GxDB_Grow_Up_Quest_Info::set_has_is_take_reward() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GxDB_Grow_Up_Quest_Info::clear_has_is_take_reward() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GxDB_Grow_Up_Quest_Info::clear_is_take_reward() {
  is_take_reward_ = 0u;
  clear_has_is_take_reward();
}
inline ::google::protobuf::uint32 GxDB_Grow_Up_Quest_Info::is_take_reward() const {
  return is_take_reward_;
}
inline void GxDB_Grow_Up_Quest_Info::set_is_take_reward(::google::protobuf::uint32 value) {
  set_has_is_take_reward();
  is_take_reward_ = value;
}

// optional uint32 operate_type = 7;
inline bool GxDB_Grow_Up_Quest_Info::has_operate_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GxDB_Grow_Up_Quest_Info::set_has_operate_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GxDB_Grow_Up_Quest_Info::clear_has_operate_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GxDB_Grow_Up_Quest_Info::clear_operate_type() {
  operate_type_ = 0u;
  clear_has_operate_type();
}
inline ::google::protobuf::uint32 GxDB_Grow_Up_Quest_Info::operate_type() const {
  return operate_type_;
}
inline void GxDB_Grow_Up_Quest_Info::set_operate_type(::google::protobuf::uint32 value) {
  set_has_operate_type();
  operate_type_ = value;
}

// -------------------------------------------------------------------

// GxDB_Grow_Up_Quest_Group_Info

// required uint32 group_id = 1;
inline bool GxDB_Grow_Up_Quest_Group_Info::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GxDB_Grow_Up_Quest_Group_Info::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GxDB_Grow_Up_Quest_Group_Info::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GxDB_Grow_Up_Quest_Group_Info::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GxDB_Grow_Up_Quest_Group_Info::group_id() const {
  return group_id_;
}
inline void GxDB_Grow_Up_Quest_Group_Info::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
}

// required uint32 group_is_finished = 2;
inline bool GxDB_Grow_Up_Quest_Group_Info::has_group_is_finished() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GxDB_Grow_Up_Quest_Group_Info::set_has_group_is_finished() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GxDB_Grow_Up_Quest_Group_Info::clear_has_group_is_finished() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GxDB_Grow_Up_Quest_Group_Info::clear_group_is_finished() {
  group_is_finished_ = 0u;
  clear_has_group_is_finished();
}
inline ::google::protobuf::uint32 GxDB_Grow_Up_Quest_Group_Info::group_is_finished() const {
  return group_is_finished_;
}
inline void GxDB_Grow_Up_Quest_Group_Info::set_group_is_finished(::google::protobuf::uint32 value) {
  set_has_group_is_finished();
  group_is_finished_ = value;
}

// optional uint32 is_take_group_reward = 3;
inline bool GxDB_Grow_Up_Quest_Group_Info::has_is_take_group_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GxDB_Grow_Up_Quest_Group_Info::set_has_is_take_group_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GxDB_Grow_Up_Quest_Group_Info::clear_has_is_take_group_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GxDB_Grow_Up_Quest_Group_Info::clear_is_take_group_reward() {
  is_take_group_reward_ = 0u;
  clear_has_is_take_group_reward();
}
inline ::google::protobuf::uint32 GxDB_Grow_Up_Quest_Group_Info::is_take_group_reward() const {
  return is_take_group_reward_;
}
inline void GxDB_Grow_Up_Quest_Group_Info::set_is_take_group_reward(::google::protobuf::uint32 value) {
  set_has_is_take_group_reward();
  is_take_group_reward_ = value;
}

// optional uint32 operate_type = 4;
inline bool GxDB_Grow_Up_Quest_Group_Info::has_operate_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GxDB_Grow_Up_Quest_Group_Info::set_has_operate_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GxDB_Grow_Up_Quest_Group_Info::clear_has_operate_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GxDB_Grow_Up_Quest_Group_Info::clear_operate_type() {
  operate_type_ = 0u;
  clear_has_operate_type();
}
inline ::google::protobuf::uint32 GxDB_Grow_Up_Quest_Group_Info::operate_type() const {
  return operate_type_;
}
inline void GxDB_Grow_Up_Quest_Group_Info::set_operate_type(::google::protobuf::uint32 value) {
  set_has_operate_type();
  operate_type_ = value;
}

// -------------------------------------------------------------------

// GxDB_Grow_Up_Quest

// repeated .pb.GxDB_Grow_Up_Quest_Info quest_info = 1;
inline int GxDB_Grow_Up_Quest::quest_info_size() const {
  return quest_info_.size();
}
inline void GxDB_Grow_Up_Quest::clear_quest_info() {
  quest_info_.Clear();
}
inline const ::pb::GxDB_Grow_Up_Quest_Info& GxDB_Grow_Up_Quest::quest_info(int index) const {
  return quest_info_.Get(index);
}
inline ::pb::GxDB_Grow_Up_Quest_Info* GxDB_Grow_Up_Quest::mutable_quest_info(int index) {
  return quest_info_.Mutable(index);
}
inline ::pb::GxDB_Grow_Up_Quest_Info* GxDB_Grow_Up_Quest::add_quest_info() {
  return quest_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Grow_Up_Quest_Info >&
GxDB_Grow_Up_Quest::quest_info() const {
  return quest_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Grow_Up_Quest_Info >*
GxDB_Grow_Up_Quest::mutable_quest_info() {
  return &quest_info_;
}

// -------------------------------------------------------------------

// GxDB_Grow_Up_Quest_Group

// repeated .pb.GxDB_Grow_Up_Quest_Group_Info group_info = 1;
inline int GxDB_Grow_Up_Quest_Group::group_info_size() const {
  return group_info_.size();
}
inline void GxDB_Grow_Up_Quest_Group::clear_group_info() {
  group_info_.Clear();
}
inline const ::pb::GxDB_Grow_Up_Quest_Group_Info& GxDB_Grow_Up_Quest_Group::group_info(int index) const {
  return group_info_.Get(index);
}
inline ::pb::GxDB_Grow_Up_Quest_Group_Info* GxDB_Grow_Up_Quest_Group::mutable_group_info(int index) {
  return group_info_.Mutable(index);
}
inline ::pb::GxDB_Grow_Up_Quest_Group_Info* GxDB_Grow_Up_Quest_Group::add_group_info() {
  return group_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Grow_Up_Quest_Group_Info >&
GxDB_Grow_Up_Quest_Group::group_info() const {
  return group_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Grow_Up_Quest_Group_Info >*
GxDB_Grow_Up_Quest_Group::mutable_group_info() {
  return &group_info_;
}

// -------------------------------------------------------------------

// GxDB_Grow_Up_Quest_Delete

// required uint32 operate_type = 1;
inline bool GxDB_Grow_Up_Quest_Delete::has_operate_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GxDB_Grow_Up_Quest_Delete::set_has_operate_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GxDB_Grow_Up_Quest_Delete::clear_has_operate_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GxDB_Grow_Up_Quest_Delete::clear_operate_type() {
  operate_type_ = 0u;
  clear_has_operate_type();
}
inline ::google::protobuf::uint32 GxDB_Grow_Up_Quest_Delete::operate_type() const {
  return operate_type_;
}
inline void GxDB_Grow_Up_Quest_Delete::set_operate_type(::google::protobuf::uint32 value) {
  set_has_operate_type();
  operate_type_ = value;
}

// -------------------------------------------------------------------

// WannaBeStrongerBaseInfo

// optional uint32 quest_id = 1;
inline bool WannaBeStrongerBaseInfo::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WannaBeStrongerBaseInfo::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WannaBeStrongerBaseInfo::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WannaBeStrongerBaseInfo::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 WannaBeStrongerBaseInfo::quest_id() const {
  return quest_id_;
}
inline void WannaBeStrongerBaseInfo::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
}

// optional uint32 cur_value = 2;
inline bool WannaBeStrongerBaseInfo::has_cur_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WannaBeStrongerBaseInfo::set_has_cur_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WannaBeStrongerBaseInfo::clear_has_cur_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WannaBeStrongerBaseInfo::clear_cur_value() {
  cur_value_ = 0u;
  clear_has_cur_value();
}
inline ::google::protobuf::uint32 WannaBeStrongerBaseInfo::cur_value() const {
  return cur_value_;
}
inline void WannaBeStrongerBaseInfo::set_cur_value(::google::protobuf::uint32 value) {
  set_has_cur_value();
  cur_value_ = value;
}

// optional uint32 need_value1 = 3;
inline bool WannaBeStrongerBaseInfo::has_need_value1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WannaBeStrongerBaseInfo::set_has_need_value1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WannaBeStrongerBaseInfo::clear_has_need_value1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WannaBeStrongerBaseInfo::clear_need_value1() {
  need_value1_ = 0u;
  clear_has_need_value1();
}
inline ::google::protobuf::uint32 WannaBeStrongerBaseInfo::need_value1() const {
  return need_value1_;
}
inline void WannaBeStrongerBaseInfo::set_need_value1(::google::protobuf::uint32 value) {
  set_has_need_value1();
  need_value1_ = value;
}

// optional uint32 need_value2 = 4;
inline bool WannaBeStrongerBaseInfo::has_need_value2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WannaBeStrongerBaseInfo::set_has_need_value2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WannaBeStrongerBaseInfo::clear_has_need_value2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WannaBeStrongerBaseInfo::clear_need_value2() {
  need_value2_ = 0u;
  clear_has_need_value2();
}
inline ::google::protobuf::uint32 WannaBeStrongerBaseInfo::need_value2() const {
  return need_value2_;
}
inline void WannaBeStrongerBaseInfo::set_need_value2(::google::protobuf::uint32 value) {
  set_has_need_value2();
  need_value2_ = value;
}

// optional uint32 quest_type = 5;
inline bool WannaBeStrongerBaseInfo::has_quest_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WannaBeStrongerBaseInfo::set_has_quest_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WannaBeStrongerBaseInfo::clear_has_quest_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WannaBeStrongerBaseInfo::clear_quest_type() {
  quest_type_ = 0u;
  clear_has_quest_type();
}
inline ::google::protobuf::uint32 WannaBeStrongerBaseInfo::quest_type() const {
  return quest_type_;
}
inline void WannaBeStrongerBaseInfo::set_quest_type(::google::protobuf::uint32 value) {
  set_has_quest_type();
  quest_type_ = value;
}

// -------------------------------------------------------------------

// WannaBeStrongerInfo

// optional uint32 group_id = 1;
inline bool WannaBeStrongerInfo::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WannaBeStrongerInfo::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WannaBeStrongerInfo::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WannaBeStrongerInfo::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 WannaBeStrongerInfo::group_id() const {
  return group_id_;
}
inline void WannaBeStrongerInfo::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
}

// repeated .pb.WannaBeStrongerBaseInfo base_info = 2;
inline int WannaBeStrongerInfo::base_info_size() const {
  return base_info_.size();
}
inline void WannaBeStrongerInfo::clear_base_info() {
  base_info_.Clear();
}
inline const ::pb::WannaBeStrongerBaseInfo& WannaBeStrongerInfo::base_info(int index) const {
  return base_info_.Get(index);
}
inline ::pb::WannaBeStrongerBaseInfo* WannaBeStrongerInfo::mutable_base_info(int index) {
  return base_info_.Mutable(index);
}
inline ::pb::WannaBeStrongerBaseInfo* WannaBeStrongerInfo::add_base_info() {
  return base_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerBaseInfo >&
WannaBeStrongerInfo::base_info() const {
  return base_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerBaseInfo >*
WannaBeStrongerInfo::mutable_base_info() {
  return &base_info_;
}

// optional bool is_achieve = 3;
inline bool WannaBeStrongerInfo::has_is_achieve() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WannaBeStrongerInfo::set_has_is_achieve() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WannaBeStrongerInfo::clear_has_is_achieve() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WannaBeStrongerInfo::clear_is_achieve() {
  is_achieve_ = false;
  clear_has_is_achieve();
}
inline bool WannaBeStrongerInfo::is_achieve() const {
  return is_achieve_;
}
inline void WannaBeStrongerInfo::set_is_achieve(bool value) {
  set_has_is_achieve();
  is_achieve_ = value;
}

// optional bool is_take_reward = 4;
inline bool WannaBeStrongerInfo::has_is_take_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WannaBeStrongerInfo::set_has_is_take_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WannaBeStrongerInfo::clear_has_is_take_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WannaBeStrongerInfo::clear_is_take_reward() {
  is_take_reward_ = false;
  clear_has_is_take_reward();
}
inline bool WannaBeStrongerInfo::is_take_reward() const {
  return is_take_reward_;
}
inline void WannaBeStrongerInfo::set_is_take_reward(bool value) {
  set_has_is_take_reward();
  is_take_reward_ = value;
}

// -------------------------------------------------------------------

// C2GS_WannaBeStrongerReward

// required uint32 group_id = 1;
inline bool C2GS_WannaBeStrongerReward::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_WannaBeStrongerReward::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_WannaBeStrongerReward::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_WannaBeStrongerReward::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 C2GS_WannaBeStrongerReward::group_id() const {
  return group_id_;
}
inline void C2GS_WannaBeStrongerReward::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
}

// -------------------------------------------------------------------

// GS2C_WannaBeStrongerRewardRes

// repeated .pb.StReward rewards = 1;
inline int GS2C_WannaBeStrongerRewardRes::rewards_size() const {
  return rewards_.size();
}
inline void GS2C_WannaBeStrongerRewardRes::clear_rewards() {
  rewards_.Clear();
}
inline const ::pb::StReward& GS2C_WannaBeStrongerRewardRes::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::pb::StReward* GS2C_WannaBeStrongerRewardRes::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::pb::StReward* GS2C_WannaBeStrongerRewardRes::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
GS2C_WannaBeStrongerRewardRes::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
GS2C_WannaBeStrongerRewardRes::mutable_rewards() {
  return &rewards_;
}

// -------------------------------------------------------------------

// GS2C_WannaBeStrongerUpdate

// optional .pb.WannaBeStrongerInfo info = 1;
inline bool GS2C_WannaBeStrongerUpdate::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_WannaBeStrongerUpdate::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_WannaBeStrongerUpdate::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_WannaBeStrongerUpdate::clear_info() {
  if (info_ != NULL) info_->::pb::WannaBeStrongerInfo::Clear();
  clear_has_info();
}
inline const ::pb::WannaBeStrongerInfo& GS2C_WannaBeStrongerUpdate::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::pb::WannaBeStrongerInfo* GS2C_WannaBeStrongerUpdate::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::pb::WannaBeStrongerInfo;
  return info_;
}
inline ::pb::WannaBeStrongerInfo* GS2C_WannaBeStrongerUpdate::release_info() {
  clear_has_info();
  ::pb::WannaBeStrongerInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GS2C_WannaBeStrongerUpdate::set_allocated_info(::pb::WannaBeStrongerInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// GS2C_WannaBeStrongerAllInfo

// repeated .pb.WannaBeStrongerInfo info = 1;
inline int GS2C_WannaBeStrongerAllInfo::info_size() const {
  return info_.size();
}
inline void GS2C_WannaBeStrongerAllInfo::clear_info() {
  info_.Clear();
}
inline const ::pb::WannaBeStrongerInfo& GS2C_WannaBeStrongerAllInfo::info(int index) const {
  return info_.Get(index);
}
inline ::pb::WannaBeStrongerInfo* GS2C_WannaBeStrongerAllInfo::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::pb::WannaBeStrongerInfo* GS2C_WannaBeStrongerAllInfo::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerInfo >&
GS2C_WannaBeStrongerAllInfo::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerInfo >*
GS2C_WannaBeStrongerAllInfo::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// GxDB_WannaBeStrongerInfoAllInfo

// repeated .pb.WannaBeStrongerInfo info = 1;
inline int GxDB_WannaBeStrongerInfoAllInfo::info_size() const {
  return info_.size();
}
inline void GxDB_WannaBeStrongerInfoAllInfo::clear_info() {
  info_.Clear();
}
inline const ::pb::WannaBeStrongerInfo& GxDB_WannaBeStrongerInfoAllInfo::info(int index) const {
  return info_.Get(index);
}
inline ::pb::WannaBeStrongerInfo* GxDB_WannaBeStrongerInfoAllInfo::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::pb::WannaBeStrongerInfo* GxDB_WannaBeStrongerInfoAllInfo::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerInfo >&
GxDB_WannaBeStrongerInfoAllInfo::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::WannaBeStrongerInfo >*
GxDB_WannaBeStrongerInfoAllInfo::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// GS2C_Sign_Res

// required .pb.SignResult ret = 1;
inline bool GS2C_Sign_Res::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Sign_Res::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Sign_Res::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Sign_Res::clear_ret() {
  ret_ = 1;
  clear_has_ret();
}
inline ::pb::SignResult GS2C_Sign_Res::ret() const {
  return static_cast< ::pb::SignResult >(ret_);
}
inline void GS2C_Sign_Res::set_ret(::pb::SignResult value) {
  assert(::pb::SignResult_IsValid(value));
  set_has_ret();
  ret_ = value;
}

// repeated .pb.StReward rewards = 2;
inline int GS2C_Sign_Res::rewards_size() const {
  return rewards_.size();
}
inline void GS2C_Sign_Res::clear_rewards() {
  rewards_.Clear();
}
inline const ::pb::StReward& GS2C_Sign_Res::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::pb::StReward* GS2C_Sign_Res::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::pb::StReward* GS2C_Sign_Res::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
GS2C_Sign_Res::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
GS2C_Sign_Res::mutable_rewards() {
  return &rewards_;
}

// -------------------------------------------------------------------

// C2GS_Take_Extra_Reward

// required uint32 day = 1;
inline bool C2GS_Take_Extra_Reward::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Take_Extra_Reward::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Take_Extra_Reward::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Take_Extra_Reward::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 C2GS_Take_Extra_Reward::day() const {
  return day_;
}
inline void C2GS_Take_Extra_Reward::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
}

// -------------------------------------------------------------------

// GS2C_Take_Extra_Reward_res

// required .pb.ExtraRewardResult ret = 1;
inline bool GS2C_Take_Extra_Reward_res::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Take_Extra_Reward_res::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Take_Extra_Reward_res::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Take_Extra_Reward_res::clear_ret() {
  ret_ = 1;
  clear_has_ret();
}
inline ::pb::ExtraRewardResult GS2C_Take_Extra_Reward_res::ret() const {
  return static_cast< ::pb::ExtraRewardResult >(ret_);
}
inline void GS2C_Take_Extra_Reward_res::set_ret(::pb::ExtraRewardResult value) {
  assert(::pb::ExtraRewardResult_IsValid(value));
  set_has_ret();
  ret_ = value;
}

// repeated .pb.StReward rewards = 2;
inline int GS2C_Take_Extra_Reward_res::rewards_size() const {
  return rewards_.size();
}
inline void GS2C_Take_Extra_Reward_res::clear_rewards() {
  rewards_.Clear();
}
inline const ::pb::StReward& GS2C_Take_Extra_Reward_res::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::pb::StReward* GS2C_Take_Extra_Reward_res::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::pb::StReward* GS2C_Take_Extra_Reward_res::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::StReward >&
GS2C_Take_Extra_Reward_res::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::StReward >*
GS2C_Take_Extra_Reward_res::mutable_rewards() {
  return &rewards_;
}

// -------------------------------------------------------------------

// GS2C_Update_date

// required uint32 day = 1;
inline bool GS2C_Update_date::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Update_date::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Update_date::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Update_date::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 GS2C_Update_date::day() const {
  return day_;
}
inline void GS2C_Update_date::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
}

// required uint32 is_signed = 2;
inline bool GS2C_Update_date::has_is_signed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Update_date::set_has_is_signed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Update_date::clear_has_is_signed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Update_date::clear_is_signed() {
  is_signed_ = 0u;
  clear_has_is_signed();
}
inline ::google::protobuf::uint32 GS2C_Update_date::is_signed() const {
  return is_signed_;
}
inline void GS2C_Update_date::set_is_signed(::google::protobuf::uint32 value) {
  set_has_is_signed();
  is_signed_ = value;
}

// -------------------------------------------------------------------

// GxDB_Sign_info

// required uint32 dayth = 1;
inline bool GxDB_Sign_info::has_dayth() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GxDB_Sign_info::set_has_dayth() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GxDB_Sign_info::clear_has_dayth() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GxDB_Sign_info::clear_dayth() {
  dayth_ = 0u;
  clear_has_dayth();
}
inline ::google::protobuf::uint32 GxDB_Sign_info::dayth() const {
  return dayth_;
}
inline void GxDB_Sign_info::set_dayth(::google::protobuf::uint32 value) {
  set_has_dayth();
  dayth_ = value;
}

// required uint32 IsSigned = 2;
inline bool GxDB_Sign_info::has_issigned() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GxDB_Sign_info::set_has_issigned() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GxDB_Sign_info::clear_has_issigned() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GxDB_Sign_info::clear_issigned() {
  issigned_ = 0u;
  clear_has_issigned();
}
inline ::google::protobuf::uint32 GxDB_Sign_info::issigned() const {
  return issigned_;
}
inline void GxDB_Sign_info::set_issigned(::google::protobuf::uint32 value) {
  set_has_issigned();
  issigned_ = value;
}

// required uint32 type = 3;
inline bool GxDB_Sign_info::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GxDB_Sign_info::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GxDB_Sign_info::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GxDB_Sign_info::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GxDB_Sign_info::type() const {
  return type_;
}
inline void GxDB_Sign_info::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// GxDB_Sign_Up

// repeated .pb.GxDB_Sign_info info = 1;
inline int GxDB_Sign_Up::info_size() const {
  return info_.size();
}
inline void GxDB_Sign_Up::clear_info() {
  info_.Clear();
}
inline const ::pb::GxDB_Sign_info& GxDB_Sign_Up::info(int index) const {
  return info_.Get(index);
}
inline ::pb::GxDB_Sign_info* GxDB_Sign_Up::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::pb::GxDB_Sign_info* GxDB_Sign_Up::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Sign_info >&
GxDB_Sign_Up::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::GxDB_Sign_info >*
GxDB_Sign_Up::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// pass_stage_reward_info

// required uint32 id = 1;
inline bool pass_stage_reward_info::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pass_stage_reward_info::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pass_stage_reward_info::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pass_stage_reward_info::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 pass_stage_reward_info::id() const {
  return id_;
}
inline void pass_stage_reward_info::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 is_take_reward = 2;
inline bool pass_stage_reward_info::has_is_take_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pass_stage_reward_info::set_has_is_take_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pass_stage_reward_info::clear_has_is_take_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pass_stage_reward_info::clear_is_take_reward() {
  is_take_reward_ = 0u;
  clear_has_is_take_reward();
}
inline ::google::protobuf::uint32 pass_stage_reward_info::is_take_reward() const {
  return is_take_reward_;
}
inline void pass_stage_reward_info::set_is_take_reward(::google::protobuf::uint32 value) {
  set_has_is_take_reward();
  is_take_reward_ = value;
}

// required uint32 stage_level = 3;
inline bool pass_stage_reward_info::has_stage_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pass_stage_reward_info::set_has_stage_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pass_stage_reward_info::clear_has_stage_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pass_stage_reward_info::clear_stage_level() {
  stage_level_ = 0u;
  clear_has_stage_level();
}
inline ::google::protobuf::uint32 pass_stage_reward_info::stage_level() const {
  return stage_level_;
}
inline void pass_stage_reward_info::set_stage_level(::google::protobuf::uint32 value) {
  set_has_stage_level();
  stage_level_ = value;
}

// required uint32 stage_is_passed = 4;
inline bool pass_stage_reward_info::has_stage_is_passed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pass_stage_reward_info::set_has_stage_is_passed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pass_stage_reward_info::clear_has_stage_is_passed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pass_stage_reward_info::clear_stage_is_passed() {
  stage_is_passed_ = 0u;
  clear_has_stage_is_passed();
}
inline ::google::protobuf::uint32 pass_stage_reward_info::stage_is_passed() const {
  return stage_is_passed_;
}
inline void pass_stage_reward_info::set_stage_is_passed(::google::protobuf::uint32 value) {
  set_has_stage_is_passed();
  stage_is_passed_ = value;
}

// optional uint32 operate_type = 5;
inline bool pass_stage_reward_info::has_operate_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void pass_stage_reward_info::set_has_operate_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void pass_stage_reward_info::clear_has_operate_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void pass_stage_reward_info::clear_operate_type() {
  operate_type_ = 0u;
  clear_has_operate_type();
}
inline ::google::protobuf::uint32 pass_stage_reward_info::operate_type() const {
  return operate_type_;
}
inline void pass_stage_reward_info::set_operate_type(::google::protobuf::uint32 value) {
  set_has_operate_type();
  operate_type_ = value;
}

// -------------------------------------------------------------------

// GS2C_Pass_Stage_Reward_All_Info

// repeated .pb.pass_stage_reward_info pass_stage_info = 1;
inline int GS2C_Pass_Stage_Reward_All_Info::pass_stage_info_size() const {
  return pass_stage_info_.size();
}
inline void GS2C_Pass_Stage_Reward_All_Info::clear_pass_stage_info() {
  pass_stage_info_.Clear();
}
inline const ::pb::pass_stage_reward_info& GS2C_Pass_Stage_Reward_All_Info::pass_stage_info(int index) const {
  return pass_stage_info_.Get(index);
}
inline ::pb::pass_stage_reward_info* GS2C_Pass_Stage_Reward_All_Info::mutable_pass_stage_info(int index) {
  return pass_stage_info_.Mutable(index);
}
inline ::pb::pass_stage_reward_info* GS2C_Pass_Stage_Reward_All_Info::add_pass_stage_info() {
  return pass_stage_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::pass_stage_reward_info >&
GS2C_Pass_Stage_Reward_All_Info::pass_stage_info() const {
  return pass_stage_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::pass_stage_reward_info >*
GS2C_Pass_Stage_Reward_All_Info::mutable_pass_stage_info() {
  return &pass_stage_info_;
}

// -------------------------------------------------------------------

// C2GS_Pass_Stage_Reward

// required uint32 id = 1;
inline bool C2GS_Pass_Stage_Reward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Pass_Stage_Reward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Pass_Stage_Reward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Pass_Stage_Reward::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 C2GS_Pass_Stage_Reward::id() const {
  return id_;
}
inline void C2GS_Pass_Stage_Reward::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Pass_Stage_Reward_Res

// optional .pb.StReward rewards = 1;
inline bool GS2C_Pass_Stage_Reward_Res::has_rewards() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Pass_Stage_Reward_Res::set_has_rewards() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Pass_Stage_Reward_Res::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Pass_Stage_Reward_Res::clear_rewards() {
  if (rewards_ != NULL) rewards_->::pb::StReward::Clear();
  clear_has_rewards();
}
inline const ::pb::StReward& GS2C_Pass_Stage_Reward_Res::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::pb::StReward* GS2C_Pass_Stage_Reward_Res::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::pb::StReward;
  return rewards_;
}
inline ::pb::StReward* GS2C_Pass_Stage_Reward_Res::release_rewards() {
  clear_has_rewards();
  ::pb::StReward* temp = rewards_;
  rewards_ = NULL;
  return temp;
}
inline void GS2C_Pass_Stage_Reward_Res::set_allocated_rewards(::pb::StReward* rewards) {
  delete rewards_;
  rewards_ = rewards;
  if (rewards) {
    set_has_rewards();
  } else {
    clear_has_rewards();
  }
}

// required uint32 ret = 2;
inline bool GS2C_Pass_Stage_Reward_Res::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Pass_Stage_Reward_Res::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Pass_Stage_Reward_Res::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Pass_Stage_Reward_Res::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 GS2C_Pass_Stage_Reward_Res::ret() const {
  return ret_;
}
inline void GS2C_Pass_Stage_Reward_Res::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 id = 3;
inline bool GS2C_Pass_Stage_Reward_Res::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_Pass_Stage_Reward_Res::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_Pass_Stage_Reward_Res::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_Pass_Stage_Reward_Res::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GS2C_Pass_Stage_Reward_Res::id() const {
  return id_;
}
inline void GS2C_Pass_Stage_Reward_Res::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GxDB_Pass_Stage_Reward

// repeated .pb.pass_stage_reward_info pass_stage_info = 1;
inline int GxDB_Pass_Stage_Reward::pass_stage_info_size() const {
  return pass_stage_info_.size();
}
inline void GxDB_Pass_Stage_Reward::clear_pass_stage_info() {
  pass_stage_info_.Clear();
}
inline const ::pb::pass_stage_reward_info& GxDB_Pass_Stage_Reward::pass_stage_info(int index) const {
  return pass_stage_info_.Get(index);
}
inline ::pb::pass_stage_reward_info* GxDB_Pass_Stage_Reward::mutable_pass_stage_info(int index) {
  return pass_stage_info_.Mutable(index);
}
inline ::pb::pass_stage_reward_info* GxDB_Pass_Stage_Reward::add_pass_stage_info() {
  return pass_stage_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::pass_stage_reward_info >&
GxDB_Pass_Stage_Reward::pass_stage_info() const {
  return pass_stage_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::pass_stage_reward_info >*
GxDB_Pass_Stage_Reward::mutable_pass_stage_info() {
  return &pass_stage_info_;
}

// -------------------------------------------------------------------

// GxDB_Pass_Stage_Reward_Delete

// required uint32 operate_type = 1;
inline bool GxDB_Pass_Stage_Reward_Delete::has_operate_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GxDB_Pass_Stage_Reward_Delete::set_has_operate_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GxDB_Pass_Stage_Reward_Delete::clear_has_operate_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GxDB_Pass_Stage_Reward_Delete::clear_operate_type() {
  operate_type_ = 0u;
  clear_has_operate_type();
}
inline ::google::protobuf::uint32 GxDB_Pass_Stage_Reward_Delete::operate_type() const {
  return operate_type_;
}
inline void GxDB_Pass_Stage_Reward_Delete::set_operate_type(::google::protobuf::uint32 value) {
  set_has_operate_type();
  operate_type_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::GrowUpQuestType>() {
  return ::pb::GrowUpQuestType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::GrowUpRewardType>() {
  return ::pb::GrowUpRewardType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::PSignType>() {
  return ::pb::PSignType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::SignResult>() {
  return ::pb::SignResult_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ExtraRewardResult>() {
  return ::pb::ExtraRewardResult_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::PassStageEnum>() {
  return ::pb::PassStageEnum_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Quest_2eproto__INCLUDED
