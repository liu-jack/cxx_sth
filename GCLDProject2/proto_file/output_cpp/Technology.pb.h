// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Technology.proto

#ifndef PROTOBUF_Technology_2eproto__INCLUDED
#define PROTOBUF_Technology_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Quest.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Technology_2eproto();
void protobuf_AssignDesc_Technology_2eproto();
void protobuf_ShutdownFile_Technology_2eproto();

class TechnologyStudy;
class GxDB_Technology_All_Info;
class GS2C_Technology_All_Info;
class C2GS_Technology_UpStar;
class C2GS_Technology_Study;
class GS2C_Technology_Study;
class GS2C_Technology_UpStar;
class C2GS_Technology_SpeedUp;
class GS2C_Technology_SpeedUp;
class GS2C_Technology_Finish;

enum UpStarResult {
  UpStarComplete = 1,
  UpStarResourceEmpty = 2,
  UpStarTriggerDecline = 3,
  UpStarAlreadyDown = 4,
  UpStarResultElse = 5,
  UpStarIdInvalid = 6
};
bool UpStarResult_IsValid(int value);
const UpStarResult UpStarResult_MIN = UpStarComplete;
const UpStarResult UpStarResult_MAX = UpStarIdInvalid;
const int UpStarResult_ARRAYSIZE = UpStarResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* UpStarResult_descriptor();
inline const ::std::string& UpStarResult_Name(UpStarResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    UpStarResult_descriptor(), value);
}
inline bool UpStarResult_Parse(
    const ::std::string& name, UpStarResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpStarResult>(
    UpStarResult_descriptor(), name, value);
}
enum SpeedUpResult {
  SpeedUpComplete = 1,
  SpeedUpResourceEmpty = 2,
  SpeedUpTriggerDecline = 3,
  SpeedUpAlreadyDown = 4,
  SpeedUpResultElse = 5,
  SpeedUpIdInvalid = 6
};
bool SpeedUpResult_IsValid(int value);
const SpeedUpResult SpeedUpResult_MIN = SpeedUpComplete;
const SpeedUpResult SpeedUpResult_MAX = SpeedUpIdInvalid;
const int SpeedUpResult_ARRAYSIZE = SpeedUpResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* SpeedUpResult_descriptor();
inline const ::std::string& SpeedUpResult_Name(SpeedUpResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    SpeedUpResult_descriptor(), value);
}
inline bool SpeedUpResult_Parse(
    const ::std::string& name, SpeedUpResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SpeedUpResult>(
    SpeedUpResult_descriptor(), name, value);
}
enum FinishResult {
  FinishComplete = 1,
  StudyUnDown = 2,
  StudyAlreadyDown = 3,
  StudyTriggerDecline = 4,
  FinishResultElse = 5,
  FinishIdInvalid = 6
};
bool FinishResult_IsValid(int value);
const FinishResult FinishResult_MIN = FinishComplete;
const FinishResult FinishResult_MAX = FinishIdInvalid;
const int FinishResult_ARRAYSIZE = FinishResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* FinishResult_descriptor();
inline const ::std::string& FinishResult_Name(FinishResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    FinishResult_descriptor(), value);
}
inline bool FinishResult_Parse(
    const ::std::string& name, FinishResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FinishResult>(
    FinishResult_descriptor(), name, value);
}
// ===================================================================

class TechnologyStudy : public ::google::protobuf::Message {
 public:
  TechnologyStudy();
  virtual ~TechnologyStudy();

  TechnologyStudy(const TechnologyStudy& from);

  inline TechnologyStudy& operator=(const TechnologyStudy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TechnologyStudy& default_instance();

  void Swap(TechnologyStudy* other);

  // implements Message ----------------------------------------------

  TechnologyStudy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TechnologyStudy& from);
  void MergeFrom(const TechnologyStudy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 tec_id = 1;
  inline bool has_tec_id() const;
  inline void clear_tec_id();
  static const int kTecIdFieldNumber = 1;
  inline ::google::protobuf::uint32 tec_id() const;
  inline void set_tec_id(::google::protobuf::uint32 value);

  // required uint32 star_cnt = 2;
  inline bool has_star_cnt() const;
  inline void clear_star_cnt();
  static const int kStarCntFieldNumber = 2;
  inline ::google::protobuf::uint32 star_cnt() const;
  inline void set_star_cnt(::google::protobuf::uint32 value);

  // required uint64 end_time = 3;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 end_time() const;
  inline void set_end_time(::google::protobuf::uint64 value);

  // required uint32 is_finish_study = 4;
  inline bool has_is_finish_study() const;
  inline void clear_is_finish_study();
  static const int kIsFinishStudyFieldNumber = 4;
  inline ::google::protobuf::uint32 is_finish_study() const;
  inline void set_is_finish_study(::google::protobuf::uint32 value);

  // optional uint32 table_id = 5;
  inline bool has_table_id() const;
  inline void clear_table_id();
  static const int kTableIdFieldNumber = 5;
  inline ::google::protobuf::uint32 table_id() const;
  inline void set_table_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TechnologyStudy)
 private:
  inline void set_has_tec_id();
  inline void clear_has_tec_id();
  inline void set_has_star_cnt();
  inline void clear_has_star_cnt();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_is_finish_study();
  inline void clear_has_is_finish_study();
  inline void set_has_table_id();
  inline void clear_has_table_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 tec_id_;
  ::google::protobuf::uint32 star_cnt_;
  ::google::protobuf::uint64 end_time_;
  ::google::protobuf::uint32 is_finish_study_;
  ::google::protobuf::uint32 table_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Technology_2eproto();
  friend void protobuf_AssignDesc_Technology_2eproto();
  friend void protobuf_ShutdownFile_Technology_2eproto();

  void InitAsDefaultInstance();
  static TechnologyStudy* default_instance_;
};
// -------------------------------------------------------------------

class GxDB_Technology_All_Info : public ::google::protobuf::Message {
 public:
  GxDB_Technology_All_Info();
  virtual ~GxDB_Technology_All_Info();

  GxDB_Technology_All_Info(const GxDB_Technology_All_Info& from);

  inline GxDB_Technology_All_Info& operator=(const GxDB_Technology_All_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GxDB_Technology_All_Info& default_instance();

  void Swap(GxDB_Technology_All_Info* other);

  // implements Message ----------------------------------------------

  GxDB_Technology_All_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GxDB_Technology_All_Info& from);
  void MergeFrom(const GxDB_Technology_All_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TechnologyStudy study_info = 2;
  inline int study_info_size() const;
  inline void clear_study_info();
  static const int kStudyInfoFieldNumber = 2;
  inline const ::pb::TechnologyStudy& study_info(int index) const;
  inline ::pb::TechnologyStudy* mutable_study_info(int index);
  inline ::pb::TechnologyStudy* add_study_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TechnologyStudy >&
      study_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TechnologyStudy >*
      mutable_study_info();

  // @@protoc_insertion_point(class_scope:pb.GxDB_Technology_All_Info)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::TechnologyStudy > study_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Technology_2eproto();
  friend void protobuf_AssignDesc_Technology_2eproto();
  friend void protobuf_ShutdownFile_Technology_2eproto();

  void InitAsDefaultInstance();
  static GxDB_Technology_All_Info* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Technology_All_Info : public ::google::protobuf::Message {
 public:
  GS2C_Technology_All_Info();
  virtual ~GS2C_Technology_All_Info();

  GS2C_Technology_All_Info(const GS2C_Technology_All_Info& from);

  inline GS2C_Technology_All_Info& operator=(const GS2C_Technology_All_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Technology_All_Info& default_instance();

  void Swap(GS2C_Technology_All_Info* other);

  // implements Message ----------------------------------------------

  GS2C_Technology_All_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Technology_All_Info& from);
  void MergeFrom(const GS2C_Technology_All_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TechnologyStudy study_info = 1;
  inline int study_info_size() const;
  inline void clear_study_info();
  static const int kStudyInfoFieldNumber = 1;
  inline const ::pb::TechnologyStudy& study_info(int index) const;
  inline ::pb::TechnologyStudy* mutable_study_info(int index);
  inline ::pb::TechnologyStudy* add_study_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TechnologyStudy >&
      study_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TechnologyStudy >*
      mutable_study_info();

  // @@protoc_insertion_point(class_scope:pb.GS2C_Technology_All_Info)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::TechnologyStudy > study_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Technology_2eproto();
  friend void protobuf_AssignDesc_Technology_2eproto();
  friend void protobuf_ShutdownFile_Technology_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Technology_All_Info* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Technology_UpStar : public ::google::protobuf::Message {
 public:
  C2GS_Technology_UpStar();
  virtual ~C2GS_Technology_UpStar();

  C2GS_Technology_UpStar(const C2GS_Technology_UpStar& from);

  inline C2GS_Technology_UpStar& operator=(const C2GS_Technology_UpStar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Technology_UpStar& default_instance();

  void Swap(C2GS_Technology_UpStar* other);

  // implements Message ----------------------------------------------

  C2GS_Technology_UpStar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Technology_UpStar& from);
  void MergeFrom(const C2GS_Technology_UpStar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Technology_UpStar)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Technology_2eproto();
  friend void protobuf_AssignDesc_Technology_2eproto();
  friend void protobuf_ShutdownFile_Technology_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Technology_UpStar* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Technology_Study : public ::google::protobuf::Message {
 public:
  C2GS_Technology_Study();
  virtual ~C2GS_Technology_Study();

  C2GS_Technology_Study(const C2GS_Technology_Study& from);

  inline C2GS_Technology_Study& operator=(const C2GS_Technology_Study& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Technology_Study& default_instance();

  void Swap(C2GS_Technology_Study* other);

  // implements Message ----------------------------------------------

  C2GS_Technology_Study* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Technology_Study& from);
  void MergeFrom(const C2GS_Technology_Study& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Technology_Study)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Technology_2eproto();
  friend void protobuf_AssignDesc_Technology_2eproto();
  friend void protobuf_ShutdownFile_Technology_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Technology_Study* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Technology_Study : public ::google::protobuf::Message {
 public:
  GS2C_Technology_Study();
  virtual ~GS2C_Technology_Study();

  GS2C_Technology_Study(const GS2C_Technology_Study& from);

  inline GS2C_Technology_Study& operator=(const GS2C_Technology_Study& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Technology_Study& default_instance();

  void Swap(GS2C_Technology_Study* other);

  // implements Message ----------------------------------------------

  GS2C_Technology_Study* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Technology_Study& from);
  void MergeFrom(const GS2C_Technology_Study& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 isStudyStart = 2;
  inline bool has_isstudystart() const;
  inline void clear_isstudystart();
  static const int kIsStudyStartFieldNumber = 2;
  inline ::google::protobuf::uint32 isstudystart() const;
  inline void set_isstudystart(::google::protobuf::uint32 value);

  // required uint64 end_time = 3;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 end_time() const;
  inline void set_end_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Technology_Study)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_isstudystart();
  inline void clear_has_isstudystart();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 isstudystart_;
  ::google::protobuf::uint64 end_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Technology_2eproto();
  friend void protobuf_AssignDesc_Technology_2eproto();
  friend void protobuf_ShutdownFile_Technology_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Technology_Study* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Technology_UpStar : public ::google::protobuf::Message {
 public:
  GS2C_Technology_UpStar();
  virtual ~GS2C_Technology_UpStar();

  GS2C_Technology_UpStar(const GS2C_Technology_UpStar& from);

  inline GS2C_Technology_UpStar& operator=(const GS2C_Technology_UpStar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Technology_UpStar& default_instance();

  void Swap(GS2C_Technology_UpStar* other);

  // implements Message ----------------------------------------------

  GS2C_Technology_UpStar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Technology_UpStar& from);
  void MergeFrom(const GS2C_Technology_UpStar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.UpStarResult result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::pb::UpStarResult result() const;
  inline void set_result(::pb::UpStarResult value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 starnum = 3;
  inline bool has_starnum() const;
  inline void clear_starnum();
  static const int kStarnumFieldNumber = 3;
  inline ::google::protobuf::uint32 starnum() const;
  inline void set_starnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Technology_UpStar)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_starnum();
  inline void clear_has_starnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int result_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 starnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Technology_2eproto();
  friend void protobuf_AssignDesc_Technology_2eproto();
  friend void protobuf_ShutdownFile_Technology_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Technology_UpStar* default_instance_;
};
// -------------------------------------------------------------------

class C2GS_Technology_SpeedUp : public ::google::protobuf::Message {
 public:
  C2GS_Technology_SpeedUp();
  virtual ~C2GS_Technology_SpeedUp();

  C2GS_Technology_SpeedUp(const C2GS_Technology_SpeedUp& from);

  inline C2GS_Technology_SpeedUp& operator=(const C2GS_Technology_SpeedUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GS_Technology_SpeedUp& default_instance();

  void Swap(C2GS_Technology_SpeedUp* other);

  // implements Message ----------------------------------------------

  C2GS_Technology_SpeedUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2GS_Technology_SpeedUp& from);
  void MergeFrom(const C2GS_Technology_SpeedUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.C2GS_Technology_SpeedUp)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Technology_2eproto();
  friend void protobuf_AssignDesc_Technology_2eproto();
  friend void protobuf_ShutdownFile_Technology_2eproto();

  void InitAsDefaultInstance();
  static C2GS_Technology_SpeedUp* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Technology_SpeedUp : public ::google::protobuf::Message {
 public:
  GS2C_Technology_SpeedUp();
  virtual ~GS2C_Technology_SpeedUp();

  GS2C_Technology_SpeedUp(const GS2C_Technology_SpeedUp& from);

  inline GS2C_Technology_SpeedUp& operator=(const GS2C_Technology_SpeedUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Technology_SpeedUp& default_instance();

  void Swap(GS2C_Technology_SpeedUp* other);

  // implements Message ----------------------------------------------

  GS2C_Technology_SpeedUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Technology_SpeedUp& from);
  void MergeFrom(const GS2C_Technology_SpeedUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.SpeedUpResult result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::pb::SpeedUpResult result() const;
  inline void set_result(::pb::SpeedUpResult value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Technology_SpeedUp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int result_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Technology_2eproto();
  friend void protobuf_AssignDesc_Technology_2eproto();
  friend void protobuf_ShutdownFile_Technology_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Technology_SpeedUp* default_instance_;
};
// -------------------------------------------------------------------

class GS2C_Technology_Finish : public ::google::protobuf::Message {
 public:
  GS2C_Technology_Finish();
  virtual ~GS2C_Technology_Finish();

  GS2C_Technology_Finish(const GS2C_Technology_Finish& from);

  inline GS2C_Technology_Finish& operator=(const GS2C_Technology_Finish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2C_Technology_Finish& default_instance();

  void Swap(GS2C_Technology_Finish* other);

  // implements Message ----------------------------------------------

  GS2C_Technology_Finish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS2C_Technology_Finish& from);
  void MergeFrom(const GS2C_Technology_Finish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.FinishResult result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::pb::FinishResult result() const;
  inline void set_result(::pb::FinishResult value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.GS2C_Technology_Finish)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int result_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Technology_2eproto();
  friend void protobuf_AssignDesc_Technology_2eproto();
  friend void protobuf_ShutdownFile_Technology_2eproto();

  void InitAsDefaultInstance();
  static GS2C_Technology_Finish* default_instance_;
};
// ===================================================================


// ===================================================================

// TechnologyStudy

// required uint32 tec_id = 1;
inline bool TechnologyStudy::has_tec_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TechnologyStudy::set_has_tec_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TechnologyStudy::clear_has_tec_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TechnologyStudy::clear_tec_id() {
  tec_id_ = 0u;
  clear_has_tec_id();
}
inline ::google::protobuf::uint32 TechnologyStudy::tec_id() const {
  return tec_id_;
}
inline void TechnologyStudy::set_tec_id(::google::protobuf::uint32 value) {
  set_has_tec_id();
  tec_id_ = value;
}

// required uint32 star_cnt = 2;
inline bool TechnologyStudy::has_star_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TechnologyStudy::set_has_star_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TechnologyStudy::clear_has_star_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TechnologyStudy::clear_star_cnt() {
  star_cnt_ = 0u;
  clear_has_star_cnt();
}
inline ::google::protobuf::uint32 TechnologyStudy::star_cnt() const {
  return star_cnt_;
}
inline void TechnologyStudy::set_star_cnt(::google::protobuf::uint32 value) {
  set_has_star_cnt();
  star_cnt_ = value;
}

// required uint64 end_time = 3;
inline bool TechnologyStudy::has_end_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TechnologyStudy::set_has_end_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TechnologyStudy::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TechnologyStudy::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::uint64 TechnologyStudy::end_time() const {
  return end_time_;
}
inline void TechnologyStudy::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
}

// required uint32 is_finish_study = 4;
inline bool TechnologyStudy::has_is_finish_study() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TechnologyStudy::set_has_is_finish_study() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TechnologyStudy::clear_has_is_finish_study() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TechnologyStudy::clear_is_finish_study() {
  is_finish_study_ = 0u;
  clear_has_is_finish_study();
}
inline ::google::protobuf::uint32 TechnologyStudy::is_finish_study() const {
  return is_finish_study_;
}
inline void TechnologyStudy::set_is_finish_study(::google::protobuf::uint32 value) {
  set_has_is_finish_study();
  is_finish_study_ = value;
}

// optional uint32 table_id = 5;
inline bool TechnologyStudy::has_table_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TechnologyStudy::set_has_table_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TechnologyStudy::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TechnologyStudy::clear_table_id() {
  table_id_ = 0u;
  clear_has_table_id();
}
inline ::google::protobuf::uint32 TechnologyStudy::table_id() const {
  return table_id_;
}
inline void TechnologyStudy::set_table_id(::google::protobuf::uint32 value) {
  set_has_table_id();
  table_id_ = value;
}

// -------------------------------------------------------------------

// GxDB_Technology_All_Info

// repeated .pb.TechnologyStudy study_info = 2;
inline int GxDB_Technology_All_Info::study_info_size() const {
  return study_info_.size();
}
inline void GxDB_Technology_All_Info::clear_study_info() {
  study_info_.Clear();
}
inline const ::pb::TechnologyStudy& GxDB_Technology_All_Info::study_info(int index) const {
  return study_info_.Get(index);
}
inline ::pb::TechnologyStudy* GxDB_Technology_All_Info::mutable_study_info(int index) {
  return study_info_.Mutable(index);
}
inline ::pb::TechnologyStudy* GxDB_Technology_All_Info::add_study_info() {
  return study_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TechnologyStudy >&
GxDB_Technology_All_Info::study_info() const {
  return study_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TechnologyStudy >*
GxDB_Technology_All_Info::mutable_study_info() {
  return &study_info_;
}

// -------------------------------------------------------------------

// GS2C_Technology_All_Info

// repeated .pb.TechnologyStudy study_info = 1;
inline int GS2C_Technology_All_Info::study_info_size() const {
  return study_info_.size();
}
inline void GS2C_Technology_All_Info::clear_study_info() {
  study_info_.Clear();
}
inline const ::pb::TechnologyStudy& GS2C_Technology_All_Info::study_info(int index) const {
  return study_info_.Get(index);
}
inline ::pb::TechnologyStudy* GS2C_Technology_All_Info::mutable_study_info(int index) {
  return study_info_.Mutable(index);
}
inline ::pb::TechnologyStudy* GS2C_Technology_All_Info::add_study_info() {
  return study_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TechnologyStudy >&
GS2C_Technology_All_Info::study_info() const {
  return study_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TechnologyStudy >*
GS2C_Technology_All_Info::mutable_study_info() {
  return &study_info_;
}

// -------------------------------------------------------------------

// C2GS_Technology_UpStar

// required uint32 id = 1;
inline bool C2GS_Technology_UpStar::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Technology_UpStar::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Technology_UpStar::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Technology_UpStar::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 C2GS_Technology_UpStar::id() const {
  return id_;
}
inline void C2GS_Technology_UpStar::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// C2GS_Technology_Study

// required uint32 id = 1;
inline bool C2GS_Technology_Study::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Technology_Study::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Technology_Study::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Technology_Study::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 C2GS_Technology_Study::id() const {
  return id_;
}
inline void C2GS_Technology_Study::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Technology_Study

// required uint32 id = 1;
inline bool GS2C_Technology_Study::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Technology_Study::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Technology_Study::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Technology_Study::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GS2C_Technology_Study::id() const {
  return id_;
}
inline void GS2C_Technology_Study::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 isStudyStart = 2;
inline bool GS2C_Technology_Study::has_isstudystart() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Technology_Study::set_has_isstudystart() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Technology_Study::clear_has_isstudystart() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Technology_Study::clear_isstudystart() {
  isstudystart_ = 0u;
  clear_has_isstudystart();
}
inline ::google::protobuf::uint32 GS2C_Technology_Study::isstudystart() const {
  return isstudystart_;
}
inline void GS2C_Technology_Study::set_isstudystart(::google::protobuf::uint32 value) {
  set_has_isstudystart();
  isstudystart_ = value;
}

// required uint64 end_time = 3;
inline bool GS2C_Technology_Study::has_end_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_Technology_Study::set_has_end_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_Technology_Study::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_Technology_Study::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::uint64 GS2C_Technology_Study::end_time() const {
  return end_time_;
}
inline void GS2C_Technology_Study::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
}

// -------------------------------------------------------------------

// GS2C_Technology_UpStar

// required .pb.UpStarResult result = 1;
inline bool GS2C_Technology_UpStar::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Technology_UpStar::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Technology_UpStar::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Technology_UpStar::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::pb::UpStarResult GS2C_Technology_UpStar::result() const {
  return static_cast< ::pb::UpStarResult >(result_);
}
inline void GS2C_Technology_UpStar::set_result(::pb::UpStarResult value) {
  assert(::pb::UpStarResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional uint32 id = 2;
inline bool GS2C_Technology_UpStar::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Technology_UpStar::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Technology_UpStar::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Technology_UpStar::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GS2C_Technology_UpStar::id() const {
  return id_;
}
inline void GS2C_Technology_UpStar::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 starnum = 3;
inline bool GS2C_Technology_UpStar::has_starnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GS2C_Technology_UpStar::set_has_starnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GS2C_Technology_UpStar::clear_has_starnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GS2C_Technology_UpStar::clear_starnum() {
  starnum_ = 0u;
  clear_has_starnum();
}
inline ::google::protobuf::uint32 GS2C_Technology_UpStar::starnum() const {
  return starnum_;
}
inline void GS2C_Technology_UpStar::set_starnum(::google::protobuf::uint32 value) {
  set_has_starnum();
  starnum_ = value;
}

// -------------------------------------------------------------------

// C2GS_Technology_SpeedUp

// required uint32 id = 1;
inline bool C2GS_Technology_SpeedUp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2GS_Technology_SpeedUp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2GS_Technology_SpeedUp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2GS_Technology_SpeedUp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 C2GS_Technology_SpeedUp::id() const {
  return id_;
}
inline void C2GS_Technology_SpeedUp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Technology_SpeedUp

// required .pb.SpeedUpResult result = 1;
inline bool GS2C_Technology_SpeedUp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Technology_SpeedUp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Technology_SpeedUp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Technology_SpeedUp::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::pb::SpeedUpResult GS2C_Technology_SpeedUp::result() const {
  return static_cast< ::pb::SpeedUpResult >(result_);
}
inline void GS2C_Technology_SpeedUp::set_result(::pb::SpeedUpResult value) {
  assert(::pb::SpeedUpResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional uint32 id = 2;
inline bool GS2C_Technology_SpeedUp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Technology_SpeedUp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Technology_SpeedUp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Technology_SpeedUp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GS2C_Technology_SpeedUp::id() const {
  return id_;
}
inline void GS2C_Technology_SpeedUp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GS2C_Technology_Finish

// required .pb.FinishResult result = 1;
inline bool GS2C_Technology_Finish::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS2C_Technology_Finish::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS2C_Technology_Finish::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS2C_Technology_Finish::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::pb::FinishResult GS2C_Technology_Finish::result() const {
  return static_cast< ::pb::FinishResult >(result_);
}
inline void GS2C_Technology_Finish::set_result(::pb::FinishResult value) {
  assert(::pb::FinishResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional uint32 id = 2;
inline bool GS2C_Technology_Finish::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS2C_Technology_Finish::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS2C_Technology_Finish::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS2C_Technology_Finish::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GS2C_Technology_Finish::id() const {
  return id_;
}
inline void GS2C_Technology_Finish::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::UpStarResult>() {
  return ::pb::UpStarResult_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::SpeedUpResult>() {
  return ::pb::SpeedUpResult_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::FinishResult>() {
  return ::pb::FinishResult_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Technology_2eproto__INCLUDED
